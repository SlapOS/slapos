[buildout]
extends =
  ../cmake/buildout.cfg
  ../ninja/buildout.cfg
  ../bzip2/buildout.cfg
  ../libffi/buildout.cfg
  ../gcc-4.8/buildout.cfg
  ../gmp/buildout.cfg
  ../libxml2/buildout.cfg
  ../xz-utils/buildout.cfg
  ../autoconf/buildout.cfg
  ../automake/buildout.cfg
  ../libtool/buildout.cfg
  ../openssl/buildout.cfg
  ../sqlite3/buildout.cfg
  ../mpfr/buildout.cfg

parts +=
  pyston-deps
  pyston-download
  pyston-setup
  pyston-configure
  pyston-make
  
[pyston-deps]
recipe = plone.recipe.command
# stop-on-error = true
llvm-repository = https://github.com/llvm-mirror/llvm.git
location = ${buildout:directory}/parts/pyston_deps
llvm-location = ${:location}/llvm-trunk
clang-location = ${:llvm-location}/tools/clang
clang-repository = https://github.com/llvm-mirror/clang.git
git-binary = ${git:location}/bin/git
command = ([ -d ${:llvm-location} ] && ls || ${:git-binary} clone ${:llvm-repository} ${:llvm-location} && [ -d ${:clang-location} ] && ls || ${:git-binary} clone ${:clang-repository} ${:clang-location})
update-command = command

[pyston-download]
recipe = plone.recipe.command
# stop-on-error = true
repository = https://github.com/dropbox/pyston.git
location = ${buildout:directory}/parts/pyston
pyston-location = ${:location}/pyston
git-binary = ${git:location}/bin/git
command = ([ -d ${:location} ] && ls || ${:git-binary} clone ${:repository} ${:location})
update-command = command

[pyston-setup]
recipe = plone.recipe.command
location = ${buildout:directory}/parts/pyston
git-binary = ${git:location}/bin/git
command = export HOME=${buildout:directory}/parts; (cd ${:location} && ${:git-binary} config --global user.email "john-doe@nexedi.com" && ${:git-binary} config --global user.name "John" && ${:git-binary} submodule update --init --recursive build_deps && make llvm_up && ls)
update-command = command

[pyston-configure]
recipe = slapos.recipe.cmmi

cmake-binary = ${cmake:location}/bin/cmake
build-dir = ${buildout:directory}/parts/pyston/build
path = ${buildout:directory}/parts/pyston
configure-command = 
  cp ${libtool:location}/share/aclocal/* ${automake:location}/share/aclocal-1.15/
  [ -d ${:build-dir} ] && ls || mkdir ${:build-dir}
  cd ${:build-dir} && ls
  CC='gcc' CXX='g++' ${:cmake-binary} ../ -DTEST_THREADS=4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
make-options = -v
environment = 
    HOME=${buildout:directory}/parts
    PATH=${gcc-4.8:location}/bin:${ninja-download:path}:${autoconf:location}/bin:${automake:location}/bin:${libtool:location}/bin:%(PATH)s
    CMAKE_PREFIX_PATH=${gmp:location}:${xz-utils:location}:$CMAKE_PREFIX_PATH

[environ]
HOME=${buildout:directory}/parts
PATH=${gcc-4.8:location}/bin:${cmake:location}/bin:${ninja-download:path}:${autoconf:location}/bin:${automake:location}/bin:${libtool:location}/bin:%(PATH)s
CPATH=${buildout:directory}/parts/pyston/include:${bzip2:location}/include:${gmp:location}/include:${libffi:location}/include:${mpfr:location}/include:${ncurses:location}/include:${openssl:location}/include:${readline:location}/include:${sqlite3:location}/include:${zlib:location}/include:${gcc-4.8:location}/include:$CPATH
LD_LIBRARY_PATH=${ncurses:location}/lib:${gcc-4.8:location}/lib64:$LD_LIBRARY_PATH
LIBRARY_PATH=${bzip2:location}/lib:${gmp:location}/lib:${libffi:location}/lib:${mpfr:location}/lib:${ncurses:location}/lib:${openssl:location}/lib:${readline:location}/lib:${sqlite3:location}/lib:${zlib:location}/lib:$LIBRARY_PATH

[pyston-make]
recipe = slapos.recipe.cmmi
path = ${pyston-configure:path}/build
cmake-binary = ${cmake:location}/bin/cmake
make-targets = -j8
git-binary = ${git:location}/bin/git
configure-command = (${:git-binary} submodule update --init --recursive && gcc -v)           
environment-section= 
  environ