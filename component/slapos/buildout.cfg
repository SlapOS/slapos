# This file is used to install SlapOS Node itself.
[buildout]
extends =
  ../../stack/slapos.cfg
  ../bison/buildout.cfg
  ../bzip2/buildout.cfg
  ../firewalld/buildout.cfg
  ../gdbm/buildout.cfg
  ../gettext/buildout.cfg
  ../glib/buildout.cfg
  ../libxml2/buildout.cfg
  ../libxslt/buildout.cfg
  ../m4/buildout.cfg
  ../ncurses/buildout.cfg
  ../openssl/buildout.cfg
  ../patch/buildout.cfg
  ../pkgconfig/buildout.cfg
  ../python-2.7/buildout.cfg
  ../readline/buildout.cfg
  ../sqlite3/buildout.cfg
  ../swig/buildout.cfg
  ../zlib/buildout.cfg
  ../socat/buildout.cfg

parts =
  slapos
  cfg-environment
  sh-environment
  py
  firewalld-patch

[environment]
# Note: For now original PATH is appended to the end, as not all tools are
#       provided by SlapOS
PATH=${bison:location}/bin:${bzip2:location}/bin:${gettext:location}/bin:${glib:location}/bin:${libxml2:location}/bin:${libxslt:location}/bin:${m4:location}/bin:${ncurses:location}/bin:${openssl:location}/bin:${pkgconfig:location}/bin:${python2.7:location}/bin:${readline:location}/bin:${sqlite3:location}/bin:${swig:location}/bin:${buildout:bin-directory}:${patch:location}/bin:${socat:location}/bin:$PATH
CFLAGS=-I${bzip2:location}/include -I${gdbm:location}/include -I${gettext:location}/include -I${glib:location}/include -I${libxml2:location}/include -I${libxslt:location}/include -I${ncurses:location}/include -I${openssl:location}/include -I${readline:location}/include -I${sqlite3:location}/include -I${zlib:location}/include
CPPFLAGS=${:CFLAGS}
LDFLAGS=-L${bzip2:location}/lib -Wl,-rpath=${bzip2:location}/lib -L${gdbm:location}/lib -Wl,-rpath=${gdbm:location}/lib -L${gettext:location}/lib -Wl,-rpath=${gettext:location}/lib -L${glib:location}/lib -Wl,-rpath=${glib:location}/lib -L${libxml2:location}/lib -Wl,-rpath=${libxml2:location}/lib -L${libxslt:location}/lib -Wl,-rpath=${libxslt:location}/lib -L${ncurses:location}/lib -Wl,-rpath=${ncurses:location}/lib -L${openssl:location}/lib -Wl,-rpath=${openssl:location}/lib -L${readline:location}/lib -Wl,-rpath=${readline:location}/lib -L${sqlite3:location}/lib -Wl,-rpath=${sqlite3:location}/lib -L${zlib:location}/lib -Wl,-rpath=${zlib:location}/lib
PKG_CONFIG_PATH=${glib:location}/lib/pkgconfig:${libxml2:location}/lib/pkgconfig:${libxslt:location}/lib/pkgconfig:${openssl:location}/lib/pkgconfig:${pcre:location}/lib/pkgconfig:${python2.7:location}/lib/pkgconfig:${sqlite3:location}/lib/pkgconfig
LD_LIBRARY_PATH=${bzip2:location}/lib:${gdbm:location}/lib:${gettext:location}/lib:${glib:location}/lib:${libxml2:location}/lib:${libxslt:location}/lib:${ncurses:location}/lib:${openssl:location}/lib:${readline:location}/lib:${sqlite3:location}/lib:${zlib:location}/lib

[cfg-environment]
# Section exposes SlapOS default environment as configuration file.
recipe = collective.recipe.template
input = inline:
  [environment]
  PATH=${environment:PATH}
  CFLAGS=${environment:CFLAGS}
  CPPFLAGS=${environment:CPPFLAGS}
  LDFLAGS=${environment:LDFLAGS}
  PKG_CONFIG_PATH=${environment:PKG_CONFIG_PATH}
  LD_LIBRARY_PATH=${environment:LD_LIBRARY_PATH}
output = ${buildout:directory}/environment.cfg

[sh-environment]
# Section exposes SlapOS default environment as sh file.
recipe = collective.recipe.template
input = inline:
  export PATH="${environment:PATH}"
  export CFLAGS="${environment:CFLAGS}"
  export CPPFLAGS="${environment:CPPFLAGS}"
  export LDFLAGS="${environment:LDFLAGS}"
  export PKG_CONFIG_PATH="${environment:PKG_CONFIG_PATH}"
  export LD_LIBRARY_PATH="${environment:LD_LIBRARY_PATH}"
  export PS1="[SlapOS env Active] $PS1"
output = ${buildout:directory}/environment.sh

##############################################
# Included locally in order to permit we build
# packages offline.
###############################################
[python-openssl]
recipe = zc.recipe.egg:custom
egg = pyOpenSSL
include-dirs =
  ${openssl:location}/include/
library-dirs =
  ${openssl:location}/lib/
rpath =
  ${openssl:location}/lib/

#############################################

[slapos]
recipe = zc.recipe.egg
eggs =
  ${lxml-python:egg}
  ${python-cffi:egg}
  ${python-PyYAML:egg}
  ${python-cliff:egg}
  ${python-cryptography:egg}
  pyOpenSSL
  slapos.libnetworkcache
  zc.buildout
  slapos.core

initialization =
  import os
  os.environ['PATH'] = os.path.expandvars('${environment:PATH}')

# control scripts generation in order to avoid reinstalling bin/buildout
scripts =
  bang = slapos.bang:main
  generate-signature-key = slapos.signature:run
  slapconsole = slapos.console:run
  slapos-request = slapos.console:request
  slapformat = slapos.format:main
  slapgrid = slapos.grid.slapgrid:run
  slapgrid-cp = slapos.grid.slapgrid:runComputerPartition
  slapgrid-sr = slapos.grid.slapgrid:runSoftwareRelease
  slapgrid-ur = slapos.grid.slapgrid:runUsageReport
  slapgrid-supervisorctl = slapos.grid.svcbackend:supervisorctl
  slapgrid-supervisord = slapos.grid.svcbackend:supervisord
  slapproxy = slapos.proxy:main
  slapproxy-query = slapos.proxy.query:main
  slapos = slapos.entry:main
  slapos-watchdog = slapos.grid.watchdog:main

[py]
recipe = zc.recipe.egg
eggs =
    ${slapos:eggs}
interpreter = py
scripts = py
