[buildout]
extends =
  ../coreutils/buildout.cfg
  ../gettext/buildout.cfg
  ../gperf/buildout.cfg
  ../intltool/buildout.cfg
  ../libcap/buildout.cfg
  ../perl-XML-Parser/buildout.cfg
  ../pkgconfig/buildout.cfg
  ../util-linux/buildout.cfg
  ../libxcrypt/buildout.cfg
  ../xz-utils/buildout.cfg
  ../ninja/buildout.cfg
  ../meson/buildout.cfg

[systemd-wheel-dowload]
recipe = slapos.recipe.build:download
shared = true
url = https://files.pythonhosted.org/packages/b8/8b/31273bf66016be6ad22bb7345c37ff350276cfd46e389a0c2ac5da9d9073/${:filename}
filename = wheel-0.41.2-py3-none-any.whl
md5sum = 9313167ad7de0ac334a71a81f1c26595

[systemd-markupsafe-download]
recipe = slapos.recipe.build:download
shared = true
url = https://files.pythonhosted.org/packages/87/5b/aae44c6655f3801e81aa3eef09dbbf012431987ba564d7231722f68df02d/${:filename}
filename = MarkupSafe-2.1.5.tar.gz
md5sum = 8fe7227653f2fb9b1ffe7f9f2058998a

[systemd-jinja2-download]
recipe = slapos.recipe.build:download
shared = true
url = https://files.pythonhosted.org/packages/62/a1/3d680cbfd5f4b8f15abc1d571870c5fc3e594bb582bc3b64ea099db13e56/${:filename}
filename = jinja2-3.1.6-py3-none-any.whl
md5sum = 845b37cea56edd0f4dbd949244e9d798

[systemd-python]
recipe = slapos.recipe.build
shared = true
wheel = ${systemd-wheel-dowload:target}
markupsafe = ${systemd-markupsafe-download:target}
jinja2 = ${systemd-jinja2-download:target}

install =
  import os, sys
  call([sys.executable, '-m', 'venv', '--clear', location])
  pip = os.path.join(location, 'bin', 'pip')
  call([pip, 'install', '--no-index', options['wheel']])
  call([pip, 'install', '--no-index', options['markupsafe'], options['jinja2']])
  call([pip, 'uninstall', '-y', 'pip', 'setuptools', 'wheel'])
  # selftest
  python = os.path.join(location, 'bin', 'python')
  call([python, '-c', 'import jinja2'])

[systemd-python:python2]
recipe =
location =

[systemd]
recipe = slapos.recipe.build
shared = true
url = https://github.com/systemd/systemd-stable/archive/v252.38.tar.gz
md5sum = 4fdcbf157235ef0c739ede22d463e155
install =
  env = self.environ
  # we inject the rpath of systemd's own lib folder, otherwise libsystemd-core-252.so
  # reports libsystemd-shared-252.so as not found.
  env['LDFLAGS'] += ' -Wl,-rpath=%s/lib/systemd' % location
  extract_dir = self.extract(self.download(options['url'], options['md5sum']))
  workdir = guessworkdir(extract_dir)
  call([
    'meson', 'setup', 'build',
    '-Dprefix=%s' % (location,),
    '-Drootprefix=%s' % (location,),
    '-Dlibdir=lib',
    '-Drootlibdir=lib',
    '-Dsysconfdir=%s/etc' % (location,),
    '-Dsysvinit-path=%s/etc/init.d' % (location,),
    '-Dsysvrcnd-path=%s/etc/rc.d' % (location,),
    '-Dlocalstatedir=%s/var' % (location,),
    '-Dcreate-log-dirs=False',
    '-Dhwdb=False',
  ], cwd=workdir, env=env)
  call(['meson', 'setup', 'build',], cwd=workdir, env=env)
  call(['meson', 'compile', '-C', 'build/'], cwd=workdir, env=env)
  call(['meson', 'install', '-C', 'build/'], cwd=workdir, env=env)
  import os
  # Removed multiarch symlink workaround; libraries are installed in lib now.

environment =
  PATH=${systemd-python:location}/bin:${meson:location}/bin:${ninja:location}/bin:${coreutils:location}/bin:${gettext:location}/bin:${gperf:location}/bin:${intltool:location}/bin:${perl-XML-Parser:perl-PATH}:${pkgconfig:location}/bin:${xz-utils:location}/bin:%(PATH)s
  CPPFLAGS=-I${libcap:location}/include -I${util-linux:location}/include -I${libxcrypt:location}/include 
# BBB this -lrt is for mq_* functions with glibc < 2.34
  LDFLAGS=-lrt -L${libcap:location}/lib -Wl,-rpath=${libcap:location}/lib -L${util-linux:location}/lib -Wl,-rpath=${util-linux:location}/lib -L${libxcrypt:location}/lib -Wl,-rpath=${libxcrypt:location}/lib
  PKG_CONFIG_PATH=${util-linux:location}/lib/pkgconfig:${libcap:location}/lib/pkgconfig
