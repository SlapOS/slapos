[buildout]
extends =
  ../defaults.cfg
  ../babeld/buildout.cfg
  ../geoip2/buildout.cfg
  ../openvpn/buildout.cfg
  ../python-cryptography/buildout.cfg
  ../python-PyYAML/buildout.cfg
  ../python-pim-dm/buildout.cfg

parts =
  re6stnet

[gcc]
min_version = 0

[re6stnet]
recipe = zc.recipe.egg
eggs =
  ${maxminddb-python:egg}
  ${python-cffi:egg}
  ${python-cryptography:egg}
  ${python-PyYAML:egg}
  pyOpenSSL
  re6stnet[geoip]

# Note: For now original PATH is appended to the end, as not all tools are
#       provided by SlapOS
initialization =
  import os
  os.environ['GEOIP2_MMDB'] = "${geolite2-country:location}/GeoLite2-Country.mmdb"
  os.environ['PATH'] = "${openvpn:location}/sbin:${babeld:location}/bin:${openssl:location}/bin:${python:location}/bin:${pim-dm-python3:path}/bin:" + os.environ.get('PATH', '/usr/sbin:/usr/bin:/sbin:/bin')

[pim-dm-python3]
recipe = slapos.recipe.cmmi
path = ${pim-dm-buildout:location}
configure-command = true
make-binary = true
post-install =
  cat ${pim-dm-buildout:buildout-cfg}
  cat ${buildout:bin-directory}/buildout
  ${buildout:bin-directory}/buildout -U -c ${pim-dm-buildout:buildout-cfg} bootstrap
  cat bin/buildout
  bin/buildout -U -c ${pim-dm-buildout:buildout-cfg}

[pim-dm-buildout]
recipe = slapos.recipe.build
location = ${buildout:parts-directory}/${:_buildout_section_name_}
buildout-cfg = ${:location}/pim-dm-buildout.cfg
extends-cache = ${buildout:extends-cache}
pim-dm-cfg = ${:_profile_base_location_}/../python-pim-dm/buildout.cfg
slapos-cfg = ${:_profile_base_location_}/../../stack/slapos.cfg
init =
  import os
  print('BUILDOUT')
  print(self.buildout.get('buildout'))
  def realpath(path):
    prefix = ''
    if path[:7] == 'file://':
      prefix = path[:7]
      path = path[7:]
    return prefix + os.path.realpath(path)
  buildout_directory = options['location']
  if not os.path.exists(buildout_directory):
    os.mkdir(buildout_directory)
  with open(options['buildout-cfg'], 'w') as buildout_conf:
    buildout_section = [
      '[buildout]',
      'directory = ' + buildout_directory,
      'extends =',
      '  ' + realpath(options['slapos-cfg']),
      '  ' + realpath(options['pim-dm-cfg']),
      'extends-cache = ' + options['extends-cache'],
    ]
    current_buildout_section = self.buildout.get('buildout')
    for option_name in ('download-cache', 'newest', 'shared-part-list'):
      option_value = current_buildout_section.get(option_name)
      if option_value:
        buildout_section.append('%s = %s' % (option_name, option_value))
    buildout_section.extend((
      '[python]',
      'part = python3',
    ))
    buildout_conf.write('\n'.join(buildout_section))
