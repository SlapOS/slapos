From 45670a987ffd0baf832be7d95d69cae1c27b3745 Mon Sep 17 00:00:00 2001
From: Bryce Guinta <bryce.paul.guinta@gmail.com>
Date: Sun, 7 Jan 2018 14:28:42 -0700
Subject: [PATCH] Fix submodule import in six.moves

This commit fixes import errors when modname
started with, but was not equal, to six.moves
---
 astroid/brain/brain_six.py      | 41 ++++++++++++++++++++++++++++-----
 astroid/tests/unittest_brain.py | 14 +++++++++++
 2 files changed, 49 insertions(+), 6 deletions(-)

diff --git a/astroid/brain/brain_six.py b/astroid/brain/brain_six.py
index 9596a6c8..2c09d567 100644
--- a/astroid/brain/brain_six.py
+++ b/astroid/brain/brain_six.py
@@ -23,7 +23,7 @@ from textwrap import dedent
 
 from astroid import MANAGER, register_module_extender
 from astroid.builder import AstroidBuilder
-from astroid.exceptions import AstroidBuildingException, InferenceError
+from astroid.exceptions import AstroidBuildingError, InferenceError, AttributeInferenceError
 from astroid import nodes
 
 
@@ -113,7 +113,7 @@ if sys.version_info[0] == 2:
         splitquery = _urllib.splitquery
         splittag = _urllib.splittag
         splituser = _urllib.splituser
-        uses_fragment = _urlparse.uses_fragment       
+        uses_fragment = _urlparse.uses_fragment
         uses_netloc = _urlparse.uses_netloc
         uses_params = _urlparse.uses_params
         uses_query = _urlparse.uses_query
@@ -199,7 +199,7 @@ else:
     import html.entities as html_entities
     import html.parser as html_parser
     import http.client as http_client
-    import http.server
+    import http.server as http_server
     BaseHTTPServer = CGIHTTPServer = SimpleHTTPServer = http.server
     import pickle as cPickle
     import queue
@@ -230,7 +230,8 @@ else:
     import tkinter.filedialog as tkinter_tkfiledialog
     import tkinter.font as tkinter_font
     import tkinter.messagebox as tkinter_messagebox
-    import urllib.request
+    import urllib
+    import urllib.request as urllib_request
     import urllib.robotparser as urllib_robotparser
     import urllib.parse as urllib_parse
     import urllib.error as urllib_error
@@ -253,10 +254,38 @@ def six_moves_transform():
 
 
 def _six_fail_hook(modname):
-    if modname != 'six.moves':
-        raise AstroidBuildingException
+    """Fix six.moves imports due to the dynamic nature of this
+    class.
+
+    Construct a psuedo-module which contains all the nessecary imports
+    for six
+
+    :param modname: Name of failed module
+    :type modname: str
+
+    :return: An astroid module
+    :rtype: nodes.Module
+    """
+
+    attribute_of = (modname != "six.moves" and
+                    modname.startswith("six.moves"))
+    if modname != 'six.moves' and not attribute_of:
+        raise AstroidBuildingError(modname=modname)
     module = AstroidBuilder(MANAGER).string_build(_IMPORTS)
     module.name = 'six.moves'
+    if attribute_of:
+        # Facilitate import of submodules in Moves
+        start_index = len(module.name)
+        attribute = modname[start_index:].lstrip(".").replace(".", "_")
+        try:
+            import_attr = module.getattr(attribute)[0]
+        except AttributeInferenceError:
+            raise AstroidBuildingError(modname=modname)
+        if isinstance(import_attr, nodes.Import):
+            submodule = MANAGER.ast_from_module_name(import_attr.names[0][0])
+            return submodule
+    # Let dummy submodule imports pass through
+    # This will cause an Uninferable result, which is okay
     return module
 
 def transform_six_add_metaclass(node):
diff --git a/astroid/tests/unittest_brain.py b/astroid/tests/unittest_brain.py
index 81ad884c..1d079953 100644
--- a/astroid/tests/unittest_brain.py
+++ b/astroid/tests/unittest_brain.py
@@ -280,6 +280,20 @@ class SixBrainTest(unittest.TestCase):
             qname = 'httplib.HTTPSConnection'
         self.assertEqual(inferred.qname(), qname)
 
+    @unittest.skipIf(six.PY2,
+                     "The python 2 six brain uses dummy classes")
+    def test_from_submodule_imports(self):
+        """Make sure ulrlib submodules can be imported from
+
+        See PyCQA/pylint#1640 for relevant issue
+        """
+        ast_node = builder.extract_node('''
+        from six.moves.urllib.parse import urlparse
+        urlparse #@
+        ''')
+        inferred = next(ast_node.infer())
+        self.assertIsInstance(inferred, nodes.FunctionDef)
+
 
 @unittest.skipUnless(HAS_MULTIPROCESSING,
                      'multiprocesing is required for this test, but '
-- 
2.35.1

