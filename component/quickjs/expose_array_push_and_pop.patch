diff --git a/Makefile b/Makefile
index 57cdd7e..2782d0d 100644
--- a/Makefile
+++ b/Makefile
@@ -320,7 +320,7 @@ clean:
 install: all
 	mkdir -p "$(DESTDIR)$(PREFIX)/bin"
 	$(STRIP) qjs qjsc
-	install -m755 qjs qjsc "$(DESTDIR)$(PREFIX)/bin"
+	install -m755 qjs qjsc qjs-debug "$(DESTDIR)$(PREFIX)/bin"
 	ln -sf qjs "$(DESTDIR)$(PREFIX)/bin/qjscalc"
 	mkdir -p "$(DESTDIR)$(PREFIX)/lib/quickjs"
 	install -m644 libquickjs.a "$(DESTDIR)$(PREFIX)/lib/quickjs"
diff --git a/quickjs.c b/quickjs.c
index 4e58a98..e75ddb8 100644
--- a/quickjs.c
+++ b/quickjs.c
@@ -39770,8 +39770,8 @@ exception:
     return JS_EXCEPTION;
 }
 
-static JSValue js_array_pop(JSContext *ctx, JSValueConst this_val,
-                            int argc, JSValueConst *argv, int shift)
+JSValue js_array_pop(JSContext *ctx, JSValueConst this_val,
+                     int argc, JSValueConst *argv, int shift)
 {
     JSValue obj, res = JS_UNDEFINED;
     int64_t len, newLen;
@@ -39823,8 +39823,8 @@ static JSValue js_array_pop(JSContext *ctx, JSValueConst this_val,
     return JS_EXCEPTION;
 }
 
-static JSValue js_array_push(JSContext *ctx, JSValueConst this_val,
-                             int argc, JSValueConst *argv, int unshift)
+JSValue js_array_push(JSContext *ctx, JSValueConst this_val,
+                      int argc, JSValueConst *argv, int unshift)
 {
     JSValue obj;
     int i;
diff --git a/quickjs.h b/quickjs.h
index 700ee61..98b4b95 100644
--- a/quickjs.h
+++ b/quickjs.h
@@ -722,6 +722,10 @@ JS_BOOL JS_SetConstructorBit(JSContext *ctx, JSValueConst func_obj, JS_BOOL val)
 
 JSValue JS_NewArray(JSContext *ctx);
 int JS_IsArray(JSContext *ctx, JSValueConst val);
+JSValue js_array_push(JSContext *ctx, JSValueConst this_val,
+                      int argc, JSValueConst *argv, int unshift);
+JSValue js_array_pop(JSContext *ctx, JSValueConst this_val,
+                     int argc, JSValueConst *argv, int shift);
 
 JSValue JS_GetPropertyInternal(JSContext *ctx, JSValueConst obj,
                                JSAtom prop, JSValueConst receiver,
