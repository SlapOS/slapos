[buildout]
extends =
  ../boost-lib/buildout.cfg
  ../cmake/buildout.cfg
  ../cryptsetup/buildout.cfg
  ../curl/buildout.cfg
  ../keyutils/buildout.cfg
  ../libnl/buildout.cfg
  ../ncurses/buildout.cfg
  ../ninja/buildout.cfg
  ../openssl/buildout.cfg
  ../patch/buildout.cfg
  ../patch/buildout.cfg
  ../pkgconfig/buildout.cfg
  ../snappy/buildout.cfg
  ../systemd/buildout.cfg
  ../util-linux/buildout.cfg
  ../zlib/buildout.cfg
  ../python3/buildout.cfg

[yaml]
# XXX: change like component/meson/buildout.cfg:meson part is doing it:
#  [yaml:python3]
#  python = ${buildout:executable}
#  [yaml]
#  python = ${python3:executable}
recipe = zc.recipe.egg
eggs =
  ${python-PyYAML:egg}
# a way to trick the build process
interpreter = python3


[librbd]
# CEPH only for librbd
recipe = slapos.recipe.cmmi
shared = true
#url = https://download.ceph.com/tarballs/ceph_17.1.0.orig.tar.gz
url = /tmp/ceph_17.1.0.orig.tar.gz
md5sum = 1f2ed3f17f76ea71d555428f26644610

# hack!
depends = ${yaml:interpreter}
configure-command = ${cmake:location}/bin/cmake -S . -B build
# use -j1 especially during development of this part, so that errors are not hidden
make-binary = ninja -C build -k1 -j1 librbd

patch-binary = ${patch:location}/bin/patch
patch-options = -p1
patches =
  ${:_profile_base_location_}/ceph-minimal.patch#6b10a905932a0180ecbbd55f911d8143

#cflags = -I${util-linux:location}/include -I${systemd:location}/include -I${libnl:location}/include -I${ncurses:location}/include -I${boost-lib:location}/include -I${zlib:location}/include
#  CFLAGS=${:cflags}
#  CPPFLAGS=${:cflags}
#  LDFLAGS=-L${libnl:location}/lib -Wl,-rpath=${libnl:location}/lib -L${boost-lib:location}/lib -Wl,-rpath=${boost-lib:location}/lib -L${ncurses:location}/lib -Wl,-rpath=${ncurses:location}/lib -L${zlib:location}/lib -Wl,-rpath=${zlib:location}/lib
environment =
  PATH=${cmake:location}/bin:${ninja:location}/bin:${patch:location}/bin:${pkgconfig:location}/bin:${buildout:bin-directory}:%(PATH)s
  PKG_CONFIG_PATH=${curl:location}/lib/pkgconfig:${openssl:location}/lib/pkgconfig:${libnl:location}/lib/pkgconfig:${ncurses:location}/lib/pkgconfig:${boost-lib:location}/lib/pkgconfig
  LDFLAGS=-ludev -L${systemd:location}/x86_64-linux-gnu -Wl,-rpath=${systemd:location}/x86_64-linux-gnu

# ???  CMAKE_LIBRARY_PATH  XXX --> more cmake from environment is required!!!!!!!

configure-options =
  -DBLKID_INCLUDE_DIR=${util-linux:location}/include
  -DBLKID_LIBRARIES=${util-linux:location}/lib/libblkid.so
  -DBOOST_INCLUDEDIR=${boost-lib:location}/include
  -DBOOST_LIBRARYDIR=${boost-lib:location}/lib
  -DCMAKE_BUILD_TYPE=RelWithDebInfo
  -DCMAKE_INSTALL_PREFIX=@@LOCATION@@
  -DCURSES_INCLUDE_PATH=${ncurses:location}/include
  -DCURSES_LIBRARY=${ncurses:location}/lib/libncurses.so
  -DDEBUG_GATHER=off
  -DKEYUTILS_INCLUDE_DIR=${keyutils:location}/include
  -DKEYUTILS_LIBRARIES=${keyutils:location}/x86_64-linux-gnu/libkeyutils.so
  -DLIBCRYPTSETUP_INCLUDE_DIR=${cryptsetup:location}/include
  -DLIBCRYPTSETUP_LIBRARIES=${cryptsetup:location}/lib/libcryptsetup.so
  -DSNAPPY_INCLUDE_DIR=${snappy:location}/include
  -DSNAPPY_LIBRARIES=${snappy:location}/lib/libsnappy.so
  -DUDEV_INCLUDE_DIR=${systemd:location}/include
  -DUDEV_LIBRARIES=${systemd:location}/x86_64-linux-gnu/libudev.so
  -DWITH_BABELTRACE=off
  -DWITH_BLUESTORE=off
  -DWITH_CEPHFS=off
  -DWITH_FUSE=off
  -DWITH_FUSE=off
  -DWITH_KRBD=off
  -DWITH_LIBCEPHFS=off
  -DWITH_LIBCEPHSQLITE=off
  -DWITH_LTTNG=off
  -DWITH_LZ4=off
  -DWITH_MANPAGE=off
  -DWITH_MGR=off
  -DWITH_MGR_DASHBOARD_FRONTEND=off
  -DWITH_OPENLDAP=off
  -DWITH_RADOSGW=off
  -DWITH_RADOSGW_AMQP_ENDPOINT=off
  -DWITH_RADOSGW_BEAST_OPENSSL=off
  -DWITH_RADOSGW_DBSTORE=off
  -DWITH_RADOSGW_KAFKA_ENDPOINT=off
  -DWITH_RADOSGW_LUA_PACKAGES=off
  -DWITH_RADOSGW_SELECT_PARQUET=off
  -DWITH_RBD=on
  -DWITH_RDMA=off
  -DWITH_SYSTEMD=off
  -DWITH_SYSTEM_BOOST=on
  -DWITH_TESTS=off
  -DWITH_XFS=off
  -DZLIB_INCLUDE_DIR=${zlib:location}/include
  -DZLIB_LIBRARY=${zlib:location}/lib
  -Dnl_INCLUDE_DIR=${libnl:location}/include
  -Dnl_core_LIBRARY=${libnl:location}/lib/libnl-3.so
  -Dnl_genl_LIBRARY=${libnl:location}/lib/libnl-genl-3.so
  -GNinja
