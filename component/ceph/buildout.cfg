[buildout]
extends =
  ../boost-lib/buildout.cfg
  ../cmake/buildout.cfg
  ../cryptsetup/buildout.cfg
  ../curl/buildout.cfg
  ../keyutils/buildout.cfg
  ../libnl/buildout.cfg
  ../ncurses/buildout.cfg
  ../ninja/buildout.cfg
  ../openssl/buildout.cfg
  ../patch/buildout.cfg
  ../snappy/buildout.cfg
  ../systemd/buildout.cfg
  ../util-linux/buildout.cfg
  ../zlib/buildout.cfg
  ../python3/buildout.cfg
  ../pkgconfig/buildout.cfg

[yaml]
# XXX: change like component/meson/buildout.cfg:meson part is doing it:
#  [yaml:python3]
#  python = ${buildout:executable}
#  [yaml]
#  python = ${python3:executable}
recipe = zc.recipe.egg
eggs =
  ${python-PyYAML:egg}
# a way to trick the build process
interpreter = python3


[librbd]
# CEPH only for librbd
recipe = slapos.recipe.cmmi
shared = true
#url = https://download.ceph.com/tarballs/ceph-14.2.22.tar.gz
#md5sum = 7b7c68409cedb3e68c58ac44f37f9de3
url = https://download.ceph.com/tarballs/ceph_17.1.0.orig.tar.gz
md5sum = 1f2ed3f17f76ea71d555428f26644610

# hack!
depends = ${yaml:interpreter}
# hack!^

location = @@LOCATION@@
configure-command = cmake
make-binary = ninja -C build librbd librados
make-targets = src/librbd/install src/librados/install src/common/install src/include/install ; cp build/lib/libceph-common.so build/lib/libceph-common.so.2 ${:location}/lib ; cd ${:location}/lib

patch-binary = ${patch:location}/bin/patch
patch-options = -p1
patches =
  ${:_profile_base_location_}/ceph-minimal.patch#7755cac15439a8cefb5924ca40f3d053

CMAKE_LIBRARY_PATH="${util-linux:location}/lib;${ncurses:location}/lib;${keyutils:location}/x86_64-linux-gnu;${cryptsetup:location}/lib;${snappy:location}/lib;${systemd:location}/lib64;${zlib:location}/lib;${libnl:location}/lib;${boost-lib:location}/lib;${curl:location}/lib;${openssl:location}/lib"
CMAKE_INCLUDE_PATH="${systemd:location}/include;${util-linux:location}/include;${boost-lib:location}/include;${ncurses:location}/include;${keyutils:location}/include;${cryptsetup:location}/include;${snappy:location}/include;${zlib:location}/include;${libnl:location}/include;${curl:location}/include;${openssl:location}/include"

LDFLAGS=-I${systemd:location}/lib64
environment =
  LDFALGS=${:LDFLAGS}
  PATH=${cmake:location}/bin:${ninja:location}/bin:${patch:location}/bin:${pkgconfig:location}/bin:${buildout:bin-directory}:%(PATH)s

configure-options =
  -DCMAKE_BUILD_TYPE=RelWithDebInfo
  -DCMAKE_INCLUDE_PATH=${:CMAKE_INCLUDE_PATH}
  -DCMAKE_INSTALL_PREFIX=${:location}
  -DCMAKE_LIBRARY_PATH=${:CMAKE_LIBRARY_PATH}
  -DCMAKE_INSTALL_RPATH=${:location}/lib
  -DDEBUG_GATHER=OFF
  -DWITH_SYSTEM_ROCKSDB=OFF
  -DWITH_BABELTRACE=OFF
  -DWITH_BLUESTORE=OFF
  -DWITH_CEPHFS=OFF
  -DWITH_FUSE=OFF
  -DWITH_FUSE=OFF
  -DWITH_KRBD=OFF
  -DWITH_LIBCEPHFS=OFF
  -DWITH_LIBCEPHSQLITE=OFF
  -DWITH_LTTNG=OFF
  -DWITH_LZ4=OFF
  -DWITH_MANPAGE=OFF
  -DWITH_MGR=OFF
  -DWITH_MGR_DASHBOARD_FRONTEND=OFF
  -DWITH_OPENLDAP=OFF
  -DWITH_RADOSGW=OFF
  -DWITH_RADOSGW_AMQP_ENDPOINT=OFF
  -DWITH_RADOSGW_BEAST_OPENSSL=OFF
  -DWITH_RADOSGW_DBSTORE=OFF
  -DWITH_RADOSGW_KAFKA_ENDPOINT=OFF
  -DWITH_RADOSGW_LUA_PACKAGES=OFF
  -DWITH_RADOSGW_SELECT_PARQUET=OFF
  -DWITH_RBD=ON
  -DWITH_RDMA=OFF
  -DWITH_SYSTEMD=OFF
  -DWITH_SYSTEM_BOOST=ON
  -DWITH_TESTS=OFF
  -DWITH_XFS=OFF
  -GNinja
  -S . -B build
