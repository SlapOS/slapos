# GNU C Compiler
# Required to use a "known good version" of the compiler or to support languages different than C or C++
[buildout]
extends =
  ../gettext/buildout.cfg
  ../gmp/buildout.cfg
  ../patch/buildout.cfg
  ../perl/buildout.cfg
  ../tar/buildout.cfg
  ../binutils/buildout.cfg

parts =
  gcc-8.4

[gcc-common]
recipe = slapos.recipe.cmmi
shared = true
url = http://ftp.gnu.org/gnu/gcc/gcc-${:version}/gcc-${:version}.tar.xz
pre-configure =
  set %(location)s/bin
  mkdir -p $1
  ln -s ${binutils:location}/bin/ld $1/ld
# remove "dependency_libs=' -lz'" line  (-lz not needed anymore because the internal zlib was used)
  sed -i '/^libbacktrace\.la:/{ N; s,$,\n\tsed -i /^dependency_libs=/d $@,; }' libbacktrace/Makefile.in
configure-options =
  --disable-bootstrap
  --disable-multilib
  --with-gmp=${gmp:location}
  --with-mpfr=${mpfr:location}
  --with-mpc=${mpc:location}
  --enable-languages="c,c++,fortran"
  --with-isl=${isl:location}
  --with-ld=@@LOCATION@@/bin/ld
  --with-as=${binutils:location}/bin/as
  --with-internal-zlib
  ${:extra-configure-options}
extra-configure-options =

post-install =
  cd '%(location)s/bin'
  ln -s gcc cc
  rm ld
  for x in `for x in %(location)s/lib*/*.so; do echo $${x%%/*}; done |sort -u`
  do set $1:$x "$2 -rpath=$x"
  done
  cat <<EOF >ld
  #!/bin/sh -e
  for x; do case \$x in -rpath|-rpath=*)
    set -- "\$@" $2
    ! break
    ;;
  esac; done && export LD_RUN_PATH=\$${LD_RUN_PATH:+\$LD_RUN_PATH:}$${1#:}
  exec ${binutils:location}/bin/ld "\$@"
  EOF
  chmod +x ld
environment =
  LDFLAGS=-Wl,-rpath=${gmp:location}/lib -Wl,-rpath=${isl:location}/lib -Wl,-rpath=${mpc:location}/lib -Wl,-rpath=${mpfr:location}/lib
  PATH=${binutils:location}/bin:${gettext:location}/bin:${perl:location}/bin:${tar:location}/bin:%(PATH)s

[gcc-common:os.path.isdir('/usr/lib/arm-linux-gnueabihf') and os.access('/proc/device-tree/model', os.R_OK) and 'OLinuXino-LIME2' in open('/proc/device-tree/model').read()]
extra-configure-options =
  --with-arch=armv7-a
  --with-fpu=vfp
  --with-float=hard

[gcc-5.5]
<= gcc-common
version = 5.5.0
md5sum = 0f70424213b4a1113c04ba66ddda0c1f
# make install does not work when several core are used
make-targets = install -j1
patch-binary = ${patch:location}/bin/patch
patch-options = -p1
patches =
  ${:_profile_base_location_}/libsanitizer_Use_pre-computed_size_of_struct_ustat_for_Linux.patch#1e5f33e89f9fe1ca3e406eabcc621762
  ${:_profile_base_location_}/glibc2.30-ipc_perm.patch#563b7f5a38c2ea6bf741c328422b4c98

[gcc-8.4]
<= gcc-common
version = 8.4.0
md5sum = bb815a8e3b7be43c4a26fa89dbbd9795

[gcc-10.2]
<= gcc-common
version = 10.2.0
md5sum = e9fd9b1789155ad09bcf3ae747596b50

[gcc-minimal]
<= gcc-5.5
configure-options =
  --disable-bootstrap
  --disable-multilib
  --with-gmp=${gmp:location}
  --with-mpfr=${mpfr:location}
  --with-mpc=${mpc:location}
  --enable-languages=c
  --without-isl
  --without-cloog
environment =
  LDFLAGS=-Wl,-rpath=${gmp:location}/lib -Wl,-rpath=${mpc:location}/lib -Wl,-rpath=${mpfr:location}/lib
  PATH=${perl:location}/bin:${tar:location}/bin:%(PATH)s
