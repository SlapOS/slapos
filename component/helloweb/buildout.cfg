# helloweb - programs to say hello to the Web in various languages
[buildout]
extends =
  ../git/buildout.cfg
  ../ruby/buildout.cfg
  ../golang/buildout.cfg

parts =
  helloweb-python
  helloweb-ruby
  helloweb-go


# helloweb.git repository with examples.
#
# We clone it via golang infrastructure into a Go workspace.
# Via gowork helloweb/go is not only cloned, but also built and installed into gowork/bin.
#
# Another option would be to use slapos.recipe.build:gitclone and handle
# cloning+building manually. However to be able to use third-party Go packages
# we need gowork support, and other languages can use helloweb repository from
# under gowork as well.
[helloweb]
<= go-git-package
go.importpath = lab.nexedi.com/nexedi/helloweb
ruby-executable = ${ruby2.1:location}/bin/ruby
repository    = https://lab.nexedi.com/nexedi/helloweb.git
revision      = a7c788ae71

[gowork]
install =
    ${helloweb:location}/go:./...

# -*- go -*-
[helloweb-go]
# we already have gowork/bin/helloweb with helloweb Go build.
# Add bin/helloweb-go that runs go version of helloweb without any environment preset needed.
recipe  = collective.recipe.template
output  = ${buildout:bin-directory}/${:_buildout_section_name_}
mode    = 0755
input   = inline:
    #!/bin/sh
    . ${gowork:env.sh}
    exec helloweb "$@"


# -*- python -*-
[helloweb-egg]
recipe  = zc.recipe.egg:develop
egg     = helloweb
setup   = ${helloweb:location}/python/

[helloweb-python]
recipe  = zc.recipe.egg:scripts
eggs    = ${helloweb-egg:egg}
scripts = helloweb=helloweb-python


# -*- ruby -*-
[helloweb-ruby]
# NOTE slapos.cookbook:wrapper also works, but currently _only_ in instance
recipe  = collective.recipe.template
output  = ${buildout:bin-directory}/${:_buildout_section_name_}
mode    = 0755
input   = inline:
    #!/bin/sh
    exec ${helloweb:ruby-executable} ${helloweb:location}/ruby/helloweb.rb "$@"
