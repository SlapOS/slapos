# This is a dummy version that fetches a precompiled binary, to
# facilitate testing. This way, we can test software/headless-chromium
# without having to wait for component/headless-chromium to finish
# compiling each time. This component will be deleted before the merge
# request is finalized.

[buildout]
extends =
  ../wget/buildout.cfg
  ../nss/buildout.cfg
  ../nspr/buildout.cfg

parts =
  headless-chromium

# Yes, this is not the canonical SlapOS way, but this is just for
# testing.
[chromium-source]
recipe = plone.recipe.command
path = ${buildout:parts-directory}/${:_buildout_section_name_}
command =
  mkdir -p ${:path}
  cd ${:path}
  wget http://www.contrib.andrew.cmu.edu/~ericzhen/hc
  wget http://www.contrib.andrew.cmu.edu/~ericzhen/front_end.tgz
  tar -xzvf front_end.tgz
  chmod +x hc
environment =
  PATH=%(PATH)s:${wget:location}/bin
library-path = ${nspr:location}/lib:${nss:location}/lib
binary = ${:path}/hc

# Create a wrapper at bin/headless-chromium.
[headless-chromium]
recipe = slapos.recipe.template:jinja2
template = ${:_profile_base_location_}/wrapper-template.in
rendered = ${buildout:bin-directory}/headless-chromium
context =
  key chromium_binary chromium:binary
  key frontend_root chromium:devtools-frontend
  key ld_library_path chromium:library-path
binary = ${:rendered}
devtools-frontend = ${chromium-source:path}/front_end
