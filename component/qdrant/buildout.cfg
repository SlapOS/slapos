[buildout]
extends =
  ../../stack/slapos.cfg
  ../git/buildout.cfg
  ../rust/buildout.cfg
  ../protobuf/buildout.cfg
  ../llvm/buildout.cfg
# for testing:
  ../python3/buildout.cfg

parts =
  protobuf
  qdrant
  qdrant-tests

[protobuf]
<= protobuf-21.12

[qdrant]
recipe = slapos.recipe.cmmi
shared = true
path = ${qdrant-src:location}
configure-command = :
make-binary = cargo install --root=%(location)s --path . --locked
make-targets =
environment =
  PATH=${rustc:location}/bin:%(PATH)s
  LIBCLANG_PATH=${llvm:location}/lib
  LLVM_CONFIG_PATH=${llvm:location}/bin
  BINDGEN_EXTRA_CLANG_ARGS="-I${llvm:location}/lib/clang/19/include"
  PROTOC=${protobuf-21.12:location}/bin/protoc

[qdrant-tests]
<= python3.11
recipe = plone.recipe.command
venv = ${buildout:directory}/qdrant-testing-venv
command =
  ${python3.11:location}/bin/python3.11 -m venv ${:venv}
  export VIRTUAL_ENV=${:venv}
  export PATH=${:venv}/bin:${rustc:location}/bin:$PATH
  pip install "poetry==1.8.3"
  cd ${qdrant-src:location}
  poetry -C tests check --lock
  poetry -C tests install --no-root
  cargo build --features "service_debug data-consistency-check"
  mkdir -p target/debug && cp ${qdrant:location}/bin/qdrant target/debug
  poetry -C tests run ./tests/integration-tests.sh
  # Delete target/debug directory, as it is not necessary after testing,
  # and the binary it contains is considerably large.
  rm -rf target/debug/qdrant

[qdrant-src]
recipe = slapos.recipe.build:gitclone
repository = https://github.com/qdrant/qdrant.git
revision = v1.11.5
ignore-cloning-submodules = true
use-cache = true
shared = true
git-executable = ${git:location}/bin/git
