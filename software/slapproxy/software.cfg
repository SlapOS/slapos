[buildout]
extends =
  ../../component/git/buildout.cfg
  ../../stack/haproxy/default-backend.cfg
  ../../stack/monitor/buildout.cfg
  ../../stack/slapos.cfg
  buildout.hash.cfg
parts =
  instance.cfg


# Until slapproxy_offline_ui is merged and released
# --->
[slapos.core-repository]
recipe = slapos.recipe.build:gitclone
repository = https://lab.nexedi.com/romain/slapos.core.git
branch = slapproxy_offline_ui
git-executable = ${git:location}/bin/git

[slapos.core-dev]
recipe = zc.recipe.egg:develop
egg = slapos.core
setup = ${slapos.core-repository:location}

[slapos-command]
depends = ${slapos.core-dev:recipe}
# <---


[directory]
recipe = slapos.recipe.build:mkdirectory
json-schema = ${buildout:directory}/json-schema


[macro.download.template]
recipe = slapos.recipe.template
url = ${:_profile_base_location_}/${:_buildout_section_name_}.in
output = ${buildout:directory}/${:_buildout_section_name_}


[instance.cfg]
<= macro.download.template
depends = ${slapos-cookbook:recipe}

[instance-slapproxy.cfg.jinja]
<= macro.download.template


[macro.download.file]
recipe = slapos.recipe.build
base-url = ${:_profile_base_location_}
base-dir = ${buildout:directory}
location = ${:base-dir}/${:_buildout_section_name_}
install =
  import os, shutil
  base_url, base_dir = options['base-url'], options['base-dir']
  url = os.path.join(base_url, os.path.relpath(location, base_dir))
  shutil.copyfile(self.download(url, options['md5sum']), location)


[software.cfg.json]
<= macro.download.file
depends =
  ${instance-slapproxy-input-schema.json:recipe}

[instance-slapproxy-input-schema.json]
<= macro.download.file
location = ${directory:json-schema}/${:_buildout_section_name_}

# [instance-slapproxy-output-schema.json]
# <= macro.download.file
# location = ${directory:json-schema}/${:_buildout_section_name_}
