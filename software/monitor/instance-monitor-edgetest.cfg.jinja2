{%- if slap_software_type == software_type %}

[jinja2-template-base]
recipe = slapos.recipe.template:jinja2
rendered = ${buildout:directory}/${:filename}
extra-context =
context =
    import json_module json
    ${:extra-context}

[slave-test-configuration]
<=jinja2-template-base
template = {{ template_json_edgetest_test }}
filename = srv/monitor/private/test.json
extensions = jinja2.ext.do 
extra-context = 
  section slave_information slap-configuration

{%  set part_list = [] -%}
# Publish information for each slave
{%- set edgebot_software_type = 'edgebot' %}
{%- set slave_list_name = 'extra_slave_instance_list' %}
{%- set request_dict = {} %}
{%- set namebase = "edgebot" %}
{%- set authorized_slave_list = [] %}
{%- set monitor_base_url_dict = {} -%}
{%- for slave in slave_instance_list | sort(attribute='slave_title') %}
{%-   do authorized_slave_list.append(slave) %}
{%- endfor %}
{%- set monitor_base_port = int(slap_configuration['configuration.monitor-base-port']) %}
{%- set number = {'i': 1} %}
{%- for region_name, region_parameter_dict in slapparameter_dict['region-dict'].items() %}
{%-   set edgebot_name = "%s-%s" % (namebase, region_name) %}
{%-   set request_section_title = 'request-%s' % (hashlib_module.md5(edgebot_name.encode('utf-8')).hexdigest(),) %}
{%-   do part_list.append(request_section_title) %}
{%-   do request_dict.__setitem__(
        request_section_title,
        {
          'config': {
            'monitor-httpd-port': monitor_base_port + number['i'],
            'check-frontend-ip-list': region_parameter_dict.get('check-frontend-ip-list', []),
            'nameserver-list': region_parameter_dict.get('nameserver-list', []),
          },
          'name': edgebot_name,
          'sla': {'computer_guid': region_parameter_dict['sla-computer_guid']},
          'state': region_parameter_dict.get('state', 'started'),
        }) %}
{%-   do number.__setitem__('i', number['i'] + 1) %}
{%- endfor %}

[replicate]
<= slap-connection
recipe = slapos.cookbook:request.serialised
config-monitor-cors-domains = {{ slapparameter_dict.get('monitor-cors-domains', 'monitor.app.officejs.com') }}
config-monitor-username = ${monitor-instance-parameter:username}
config-monitor-password = ${monitor-htpasswd:passwd}
software-url = ${slap-connection:software-release-url}
software-type = {{edgebot_software_type}}
return = monitor-base-url

{%  for section, edgebot_request in request_dict.items() %}
[{{section}}]
<= replicate
name = {{ edgebot_request['name'] }}
state = {{ edgebot_request['state'] }}
{%-   set slave_configuration_dict = edgebot_request['config'] %}
{%-   do slave_configuration_dict.__setitem__(slave_list_name, json_module.dumps(authorized_slave_list)) %}
{%-   for config_key, config_value in slave_configuration_dict.items() %}
config-{{ config_key }} = {{ dumps(config_value) }}
{%    endfor -%}
{%-   for parameter, value in edgebot_request['sla'].items() %}
sla-{{ parameter }} = {{ value }}
{%-   endfor %}
{%-   do monitor_base_url_dict.__setitem__(section, '${' ~ section ~ ':connection-monitor-base-url}') -%}
{%- endfor %}
{%- set directory_list = [] -%}
{%- for slave_instance in slave_instance_list -%}
{%-   set publish_section_title = 'publish-%s' % slave_instance.get('slave_reference')  -%}
{%-   do part_list.append(publish_section_title) %}
[{{ publish_section_title }}]
recipe = slapos.cookbook:publish
-slave-reference = {{ slave_instance.get('slave_reference') }}
{%  endfor %}

[monitor-conf-parameters]
monitor-title = Monitor
password = ${monitor-htpasswd:passwd}

[monitor-base-url-dict]
{%  for key, value in monitor_base_url_dict.items() -%}
{{ key }} = {{ value }}
{%  endfor %}

[buildout]
extends = {{ instance_base_monitor }}
parts +=
  slave-test-configuration
{%  for part in part_list %}
{{ '  %s' % part }}
{%- endfor %}
{%- endif %} {#- if slap_software_type == software_type #}
