[buildout]

extends =
  ../../component/6tunnel/buildout.cfg
  ../../component/curl/buildout.cfg
  ../../component/dash/buildout.cfg
  ../../component/qemu-kvm/buildout.cfg
  ../../component/noVNC/buildout.cfg
  ../../component/openssl/buildout.cfg
  ../../component/netcat/buildout.cfg
  ../../component/nginx/buildout.cfg
  ../../component/pycurl/buildout.cfg
  ../../component/vm-img/debian.cfg
  ../../stack/slapos.cfg
  ../../stack/resilient/buildout.cfg
  buildout.hash.cfg

# stacks are listed from most generic to most specific,
# to avoid versioning issues
common-parts =
  template
  qmpbackup

# XXX: we have to manually add this for resilience
  pbs-recipe-egg


parts = ${:common-parts}

#XXX-Cedric : Currently, one can only access to KVM using noVNC.
#             Ideally one should be able to access KVM by using either NoVNC or VNC.
#             Problem is : no native crypto support in web browsers. So we have to disable ssl
#             In qemu builtin vnc server, and make it available only for localhost
#             so that only novnc can listen to it.

[qmpbackup]
recipe = zc.recipe.egg
eggs =
  qemu.qmp
  colorlog
  qmpbackup
find-links +=
  https://github.com/abbbi/qmpbackup/releases/download/v0.44/qmpbackup-0.44.tar.gz

[versions]
qemu.qmp = 0.0.3:whl
colorlog = 6.9.0:whl
qmpbackup = 0.44

[python-with-eggs]
recipe = zc.recipe.egg
interpreter = ${:_buildout_section_name_}
eggs =
  ${slapos-toolbox:eggs}
  ${python-cffi:egg}
  ${slapos-cookbook:eggs}
  erp5.util
# BBB: eggs used as recipe should be kept otherwise sections depending
# on it can't be uninstalled
  collective.recipe.shelloutput
# Only generate the interpreter script to avoid conflicts with scripts
# for eggs that are also generated by another section, like slapos.toolbox
scripts = ${:interpreter}

# Create all templates that will be used to deploy instances
[download-base]
recipe = slapos.recipe.build:download
url = ${:_profile_base_location_}/${:filename}

[template-base]
recipe = slapos.recipe.template
url = ${:_profile_base_location_}/${:filename}

[template-base-python]
<= template-base
output = ${buildout:parts-directory}/${:_buildout_section_name_}/${:_buildout_section_name_}.py

[template]
<= template-base
output = ${buildout:directory}/template.cfg

[template-kvm]
<= download-base

[template-kvm-cluster]
<= download-base

[template-kvm-resilient]
<= download-base

[template-kvm-import]
<= download-base

[template-kvm-import-script]
<= download-base

[template-kvm-export]
<= download-base

[template-kvm-export-script]
<= download-base

[template-nginx]
<= download-base

[template-ansible-promise]
<= download-base

[template-kvm-run]
<= download-base

[template-kvm-controller]
<= download-base

[template-apache-conf]
<= download-base

[template-content]
<= download-base

[template-qemu-ready]
<= download-base

[template-httpd]
recipe = slapos.recipe.template:jinja2
url = ${:_profile_base_location_}/instance-kvm-http.cfg.in
output = ${buildout:parts-directory}/${:_buildout_section_name_}/instance-kvm-http.cfg
context =
    key apache_location apache:location
    raw openssl_executable_location ${openssl:location}/bin/openssl
    key template_apache_conf template-apache-conf:target

[image-download-controller]
<= template-base-python

[image-download-config-creator]
<= template-base-python

[whitelist-firewall-download-controller]
<= template-base-python

[whitelist-domains-default]
<= download-base

[boot-image-select-source-config]
<= template-base
output = ${buildout:parts-directory}/${:_buildout_section_name_}/${:_buildout_section_name_}.json

[check-backup-directory.sh]
<= template-base
output = ${buildout:parts-directory}/${:_buildout_section_name_}/check-backup-directory.sh

[disk-image-corruption.sh]
<= download-base
