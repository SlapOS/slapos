#!/usr/bin/env python

import hashlib
import json
import os
import re
import subprocess
import sys


# stolen from download_file.in
def md5Checksum(file_path):
  with open(file_path, 'rb') as fh:
    m = hashlib.md5()
    while True:
      data = fh.read(8192)
      if not data:
          break
      m.update(data)
    return m.hexdigest()


if __name__ == "__main__":
  configuration, curl = sys.argv[1:]
  error_num = 0
  md5sum_re = re.compile(r"^([a-fA-F\d]{32})$")
  current_image_dict = {}
  image_prefix = 'image_'
  maximum_image_amount = 4

  # build currently wanted list
  with open(configuration) as fh:
    try:
      config = json.load(fh.read())
    except Exception as e:
      print 'ERR: Problem loading configuration'
      sys.exit(1)
     
  if config['error-amount'] != 0:
    print 'ERR: There are problems with configuration'
    sys.exit(1)

  # clean the destination directory
  for fname in os.listdir(configuration['destination-directory']):
    md5sum = fname[len(image_prefix):]
    if md5sum not in current_image_dict:
      print 'INF: Removing obsolete %s' % (fname,)
      os.remove(os.path.join(destination_directory, fname))

  # check if the limit is not reached
  current_image_amount = len(current_image_dict)
  if len(current_image_dict) > maximum_image_amount:
    print 'ERR: Amount of images is %s, which is bigger than maximum '\
          '(%s), please fix' % (current_image_amount, maximum_image_amount)
    sys.exit(error_num + 1)

  # fetch the wanted list
  for md5sum, url in current_image_dict.items():
    destination = os.path.join(destination_directory, image_prefix + md5sum)
    tmp_destination = os.path.join(destination_directory, 'tmp_' + md5sum)
    if os.path.exists(destination):
      if md5Checksum(destination) == md5sum:
        print 'INF: %s : already downloaded' % (url,)
        continue
      else:
        print 'INF: %s : Removed, as expected checksum does not match %s' % (
          url, md5sum)
        os.remove(destination)
    print 'INF: %s : Downloading' % (url,)
    download_success = True
    try:
      subprocess.check_output([
        curl,
        '--insecure',  # allow any download
        '--location',  # follow redirects
        '--no-progress-meter',  # do not tell too much
        '--max-time', '7200',  # maximum time for download is 2 hours
        '--max-filesize', '5368709120',  # maximum 5G for an image
        '--output', tmp_destination, url], stderr=subprocess.STDOUT)
    except subprocess.CalledProcessError as e:
      error_num += 1
      print 'ERR: %s : Problem while downloading: %r' % (url, e.output.strip())
      continue
    if not(os.path.exists(tmp_destination)):
      error_num += 1
      print 'ERR: %s : Image disappeared, will retry later'
      cotninue
    computed_md5sum = md5Checksum(tmp_destination)
    if computed_md5sum != md5sum:
      error_num += 1
      try:
        os.remove(tmp_destination)
      except Exception:
        pass
      print 'ERR: %s : MD5 mismtach expected is %s but got instead %s' % (
        url, md5sum, computed_md5sum)
    else:
      os.rename(tmp_destination, destination)
      print 'INF: %s : Stored with checksum %s' % (url, md5sum)
  sys.exit(error_num)
