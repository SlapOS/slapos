[buildout]
parts =
  switch-softwaretype

eggs-directory = ${buildout:eggs-directory}
develop-eggs-directory = ${buildout:develop-eggs-directory}
offline = true

[switch-softwaretype]
recipe = slapos.cookbook:switch-softwaretype
default = instance-default:output
drone = instance-drone:output
RootSoftwareInstance = $${:default}

[slap-configuration]
recipe = slapos.cookbook:slapconfiguration.serialised
computer = $${slap_connection:computer_id}
partition = $${slap_connection:partition_id}
url = $${slap_connection:server_url}
key = $${slap_connection:key_file}
cert = $${slap_connection:cert_file}

[dynamic-template-base]
recipe = slapos.recipe.template:jinja2
url = ${buildout:directory}/$${:_buildout_section_name_}.cfg
output = $${buildout:directory}/$${:_buildout_section_name_}

[instance-default]
<= dynamic-template-base
extensions = jinja2.ext.do
context =
  key slapparameter_dict slap-configuration:configuration

[instance-drone]
<= dynamic-template-base
context =
  key configuration drone-configuration:output
  key user-script user:output

[drone-configuration]
recipe = slapos.recipe.template:jinja2
output = $${directory1:etc}/configuration.json
context =
  import json_module json
  key slapparameter_dict slap-configuration:configuration
inline = {{ json_module.dumps(slapparameter_dict) }}

[user]
recipe = slapos.recipe.template:jinja2
output = $${directory1:etc}/user.js
context =
  key slapparameter_dict slap-configuration:configuration
inline = {{ slapparameter_dict['flight-script'] }}

[directory1]
recipe = slapos.cookbook:mkdirectory
home = $${buildout:directory}
etc = $${:home}/etc
