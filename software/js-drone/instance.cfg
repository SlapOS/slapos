[buildout]
parts =
  switch-softwaretype

eggs-directory = ${buildout:eggs-directory}
develop-eggs-directory = ${buildout:develop-eggs-directory}
offline = true

[switch-softwaretype]
recipe = slapos.cookbook:switch-softwaretype
default = instance-default:output
drone = instance-drone:output
RootSoftwareInstance = $${:default}

[slap-configuration]
recipe = slapos.cookbook:slapconfiguration.serialised
computer = $${slap_connection:computer_id}
partition = $${slap_connection:partition_id}
url = $${slap_connection:server_url}
key = $${slap_connection:key_file}
cert = $${slap_connection:cert_file}

[dynamic-template-base]
recipe = slapos.recipe.template:jinja2
url = ${buildout:directory}/$${:_buildout_section_name_}.cfg
output = $${buildout:directory}/$${:_buildout_section_name_}

[instance-default]
<= dynamic-template-base
extensions = jinja2.ext.do
context =
  key slapparameter_dict slap-configuration:configuration

[directory]
recipe = slapos.cookbook:mkdirectory
home = $${buildout:directory}
etc = $${:home}/etc

[user]
recipe = slapos.recipe.build:download
url = $${slap-configuration:configuration.flightScript}
destination = $${directory:etc}/user.js
offline = false

[gwsocket-port]
recipe = slapos.cookbook:free_port
minimum = 6789
maximum = 6799
ip = $${slap-configuration:ipv6-random}

[drone-configuration]
recipe = slapos.recipe.template:jinja2
output = $${directory:etc}/configuration.json
extensions = jinja2.ext.do
context =
  import json_module json
  key websocket_ip gwsocket-port:ip
  key websocket_port gwsocket-port:port
  key slapparameter_dict slap-configuration:configuration
inline =
  {% do slapparameter_dict.__setitem__('websocketIp', websocket_ip) -%}
  {% do slapparameter_dict.__setitem__('websocketPort', websocket_port) -%}
  {{ json_module.dumps(slapparameter_dict) }}

[instance-drone]
<= dynamic-template-base
depends = $${user:recipe}
context =
  key configuration drone-configuration:output
  key is_a_drone slap-configuration:configuration.isADrone
  key websocket_ip gwsocket-port:ip
  key websocket_port gwsocket-port:port
