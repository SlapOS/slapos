{% set autopilot_ip = slapparameter_dict.get('autopilotIp', '192.168.27.1') -%}
{% set flight_script = slapparameter_dict.get('flightScript', 'https://lab.nexedi.com/nexedi/flight-scripts/raw/master/default.js') -%}
{% set is_a_simulation = slapparameter_dict.get('isASimulation', 'false') -%}
{% set multicast_ip = slapparameter_dict.get('multicastIp', 'ff15::1111') -%}
{% set net_if = slapparameter_dict.get('netIf', 'eth0') -%}

{% set drone_guid_list = slapparameter_dict.get('droneGuidList', []) -%}
{% set subscriber_guid_list = slapparameter_dict.get('subscriberGuidList', []) -%}
{% set guid_list = drone_guid_list + subscriber_guid_list -%}
{% set drone_id_list = list(range(1, len(guid_list) + 1)) -%}

{% set part_list = [] -%}

{% for drone_id, guid in zip(drone_id_list, guid_list) -%}
{%   set request_drone_section_title = 'request-drone' ~ drone_id -%}
{%   do part_list.append(request_drone_section_title) %}
[{{ request_drone_section_title }}]
<= slap-connection
recipe = slapos.cookbook:request.serialised
name = Drone{{ drone_id }}
software-url = $${:software-release-url}
software-type = drone
sla-computer_guid = {{ guid }}
config-autopilotIp = {{ autopilot_ip }}
config-droneIdList = {{ dumps(drone_id_list) }}
config-id = {{ dumps(drone_id) }}
config-isASimulation = {{ dumps(is_a_simulation) }}
{% if guid in drone_guid_list -%}
config-isPublisher = {{ dumps(True) }}
config-flightScript = {{ flight_script }}
{% else -%}
config-isPublisher = {{ dumps(False) }}
config-flightScript = https://lab.nexedi.com/nexedi/flight-scripts/raw/master/subscribe.js
{% endif -%}
config-multicastIp = {{ multicast_ip }}
config-netIf = {{ net_if }}
{% endfor %}

[buildout]
parts =
{%- for part in part_list %}
  {{ part }}
{%- endfor -%}
