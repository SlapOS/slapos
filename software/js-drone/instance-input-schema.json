{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "description": "Parameters to instantiate JS drone",
  "additionalProperties": false,
  "definitions": {
    "entitie-list": {
      "description": "List of entities able to listen/send OPC-UA messages from/to the swarm",
      "type": "array",
      "default": [],
      "items": {
        "type": "object",
        "properties": {
          "guid": {
            "description": "Computer ID",
            "type": "string"
          },
          "netIf": {
            "description": "Interface used for multicast traffic.",
            "type": "string",
            "default": "eth0"
          }
        }
      },
      "uniqueItems": true
    }
  },
  "properties": {
    "autopilotType": {
      "title": "Type of the drone's autopilot",
      "description": "Model of the autopilot used in the drones.",
      "type": "string",
      "default": "c-astral",
      "enum": [
        "c-astral",
        "sqdr"
      ]
    },
    "autopilotIp": {
      "title": "IP address of the drone's autopilot",
      "description": "IP used to create a connection with the autopilot.",
      "type": "string",
      "default": "192.168.27.1"
    },
    "autopilotPort": {
      "title": "Port of the drone's autopilot",
      "description": "Port on which autopilot service is running.",
      "type": "integer",
      "default": 7909
    },
    "droneList": {
      "$ref": "#/definitions/entitie-list",
      "title": "List of drones in the swarm"
    },
    "debug": {
      "title": "Set debug mode",
      "description": "When debug mode is enabled, drone are publishing the script logs through OPC-UA.",
      "type": "boolean",
      "default": false
    },
    "multicastIpv6": {
      "title": "IP of the multicast group",
      "description": "IP address used to communicate with the other drones.",
      "type": "string",
      "default": "ff15::1111"
    },
    "operatorScript": {
      "title": "Script's URL to prepare the flight",
      "description": "URL of the operator script. The operator script is used to send a first message to the swarm.\nThis can be useful to determine some path planning depending on map informations.\nThis URL must be publicly accesible so that the drone can fetch the script.",
      "type": "string",
      "default": "https://lab.nexedi.com/nexedi/flight-scripts/-/raw/v2.3/operator.js"
    },
    "mapJson": {
      "title": "Map's URL",
      "description": "URL of the terrain's map. It is used as a data source by the operator script.",
      "type": "string",
      "default": "https://lab.nexedi.com/nexedi/flight-scripts/-/raw/v2.3/map.json"
    },
    "flightScript": {
      "title": "Script's URL of the flight",
      "description": "URL of the script which will be executed for the flight. This URL must be publicly accesible so that the drone can fetch the script.",
      "type": "string",
      "default": "https://lab.nexedi.com/nexedi/flight-scripts/-/raw/v2.3/default.js"
    },
    "subscriptionScript": {
      "title": "Script's URL for subscribers",
      "description": "URL of the script which will be executed by subscribers.",
      "type": "string",
      "default": "https://lab.nexedi.com/nexedi/flight-scripts/-/raw/operator_script/subscribe.js"
    },
    "loopPeriod": {
      "title": "Loop execution period",
      "description": "Minimal period between 2 executions of flight script loop",
      "type": "integer",
      "default": 200
    },
    "subscriberList": {
      "$ref": "#/definitions/entitie-list",
      "title": "List of swarm subscribers"
    }
  }
}
