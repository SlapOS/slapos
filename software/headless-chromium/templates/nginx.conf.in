pid {{ param_chromium_headless['nginx_pid_path'] }};
error_log {{ param_chromium_headless['nginx_error_log'] }};

events {
  worker_connections 1024;
}

http {
  access_log {{ param_chromium_headless['nginx_access_log'] }};

  server {
    listen [{{ param_chromium_headless['ip'] }}]:{{ param_chromium_headless['nginx-port'] }};

    client_body_temp_path {{ param_chromium_headless['nginx_temp_path'] }};
    proxy_temp_path {{ param_chromium_headless['nginx_temp_path'] }};
    fastcgi_temp_path {{ param_chromium_headless['nginx_temp_path'] }};
    uwsgi_temp_path {{ param_chromium_headless['nginx_temp_path'] }};
    scgi_temp_path {{ param_chromium_headless['nginx_temp_path'] }};

    # The proxy must set the Host header to an IP address, since the headless Chromium shell refuses to run otherwise, for security reasons.

    location /devtools {
      proxy_http_version 1.1;
      proxy_set_header Host [{{ param_chromium_headless['ip'] }}]:{{ param_chromium_headless['remote-debugging-port'] }};

      # TODO: do we really need to manually set the Upgrade and Connection headers anymore?
      proxy_set_header Upgrade "websocket";
      proxy_set_header Connection "Upgrade";
      proxy_pass http://[{{ param_chromium_headless['ip']}}]:{{ param_chromium_headless['remote-debugging-port'] }};
    }

    location / {
      proxy_http_version 1.1;
      proxy_set_header Host [{{ param_chromium_headless['ip'] }}]:{{ param_chromium_headless['remote-debugging-port'] }};
      proxy_pass http://[{{ param_chromium_headless['ip']}}]:{{ param_chromium_headless['remote-debugging-port'] }};
    }
  }
}
