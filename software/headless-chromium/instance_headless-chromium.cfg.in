{% set parameter_dict = dict(default_parameter_dict, **slapparameter_dict) %}

[buildout]
parts =
  chromium-launcher
  nginx-config
  nginx-launcher
  publish-connection-information

eggs-directory = {{ buildout['eggs-directory'] }}
develop-eggs-directory = {{ buildout['develop-eggs-directory'] }}
offline = true

# Create necessary directories.
[directory]
recipe = slapos.cookbook:mkdirectory
home = ${buildout:directory}
tmp = ${:home}/tmp
log = ${:home}/log
etc = ${:home}/etc
service = ${:etc}/service

[headless-chromium]
ip = {{ partition_ipv6 }}
remote-debugging-port = {{ parameter_dict['remote-debugging-port'] }}
url = {{ parameter_dict['target-url'] }}
remote-debug-url = http://[${:ip}]:${:remote-debugging-port}

nginx-port = {{ parameter_dict['nginx-proxy-port'] }}
proxy-url = http://[${:ip}]:${:nginx-port}
nginx-config-target = ${directory:etc}/nginx.conf
nginx-pid-path = ${directory:log}/nginx.pid
nginx-temp-path = ${directory:tmp}
nginx-error-log = ${directory:log}/nginx-error.log
nginx-access-log = ${directory:log}/nginx-access.log

# Create a launcher script for the headless shell executable.
# TODO: get rid of --no-sandbox after testing is done
[chromium-launcher]
recipe = slapos.cookbook:wrapper
command-line =  {{ parameter_list['chromium-wrapper'] }} --remote-debugging-address=:: --remote-debugging-port=${headless-chromium:remote-debugging-port} --no-sandbox ${headless-chromium:url}
wrapper-path = ${directory:service}/chromium
environment =
  FONTCONFIG_FILE=${font-config:rendered}

# Create a configuration file for the proxy server.
[nginx-config]
recipe = slapos.recipe.template:jinja2
template = {{ parameter_list['template-nginx-config'] }}
rendered = ${headless-chromium:nginx-config-target}
mode = 700
context =
  section param_headless_chromium headless-chromium

# Create a launcher script for the proxy server.
[nginx-launcher]
recipe = slapos.cookbook:wrapper
command-line = {{ parameter_list['nginx-location'] }}/sbin/nginx -c ${headless-chromium:nginx-config-target}
wrapper-path = ${directory:service}/nginx

# Generate a fonts.conf file.
[font-config]
recipe = slapos.recipe.template:jinja2
template = {{ parameter_list['template-fonts-conf'] }}
rendered = ${directory:etc}/fonts.conf
context =
  key cachedir :cache-dir
  key fonts :fonts
  key includes :includes
cache-dir =
  ${directory:etc}/.fontconfig.cache
fonts =
  {{ parameter_list['liberation-fonts-location'] }}
includes =
  {{ parameter_list['fontconfig-location'] }}/etc/fonts/conf.d

[publish-connection-information]
recipe = slapos.cookbook:publish
remote-debug-url = ${headless-chromium:remote-debug-url}
proxy-url = ${headless-chromium:proxy-url}
frontend-url = ${remote-debugging-frontend:connection-secure_access}

# Request a frontend URL from the CDN for the remote debugging interface.
[remote-debugging-frontend]
<= slap-connection
recipe = slapos.cookbook:requestoptional
name = Headless Chromium Remote Debugging Frontend
software-url = http://git.erp5.org/gitweb/slapos.git/blob_plain/HEAD:/software/apache-frontend/software.cfg
slave = true
config-url = ${headless-chromium:proxy-url}
config-https-only = true
config-type = websocket
config-websocket-path-list = /devtools
return = domain secure_access
