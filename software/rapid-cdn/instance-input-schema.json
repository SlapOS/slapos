{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "Input Parameters",
  "type": "object",
  "properties": {
    "frontend-node-dict": {
      "title": "Frontend node configuration",
      "description": "The name used here will be reference of the node, used in the request, so changing it will result with new allocation.",
      "patternProperties": {
        ".*": {
          "properties": {
            "sla-computer_guid": {
              "title": "SLA Computer GIUD (aka reference) of the node",
              "description": "This parameter allows to select to which Compute Node this node will be allocated to. If nothing set, it will be randomly picked up during the alloaction process.",
              "type": "string"
            },
            "enable-http2": {
              "title": "Enable HTTP2",
              "default": true,
              "description": "Enables HTTP2 on the node.",
              "type": "boolean"
            },
            "enable-http3": {
              "title": "Enable HTTP3",
              "default": false,
              "description": "Enables HTTP3 on the node, defauts to the frontend cluster parameter.",
              "type": "boolean"
            },
            "http-port": {
              "default": 8080,
              "title": "HTTP port to bind to",
              "type": "integer"
            },
            "https-port": {
              "default": 4443,
              "title": "HTTPS port to bind to",
              "type": "integer"
            },
            "advertised-http3-port": {
              "default": 443,
              "title": "Advertised HTTP3 port",
              "description": "As most common deloyment is using iptables for port redirection and in case of udp it is advertising to the process it's bind port instead of the really connected to, it's required to manually set this port for the whole cluster. Can be precisely set on each node by -frontend-i-config-http3-port",
              "type": "integer"
            },
            "ram-cache-size": {
              "default": "1G",
              "title": "Size of RAM cache on each node (bytes)",
              "description": "The value can be provided with suffix 'K', 'M', 'G'",
              "type": "string"
            },
            "disk-cache-size": {
              "default": "8G",
              "title": "Size of disk cache on each node (bytes)",
              "description": "The value can be provided with suffix 'K', 'M', 'G'",
              "type": "string"
            },
            "software-release-url": {
              "title": "Software Release URL",
              "description": "Software Release URL used to on this frontend node, defaults to cluster Software Release URL.",
              "type": "string"
            },
            "state": {
              "default": "started",
              "title": "State of the frontend node",
              "description": "It can be mostly used to destroy (collect) not needed nodes.",
              "type": "string",
              "enum": [
                "started",
                "stopped",
                "destroyed"
              ]
            },
            "http3-port": {
              "default": 443,
              "title": "Real advertised HTTP3 port",
              "description": "As most common deloyment is using iptables for port redirection and in case of udp it is advertising to the process it's bind port instead of the really connected to, it's required to manually set this port for the whole cluster.",
              "type": "integer"
            },
            "rotate-num": {
              "default": 4000,
              "title": "Amount of daily log rotations",
              "type": "integer"
            },
            "expert": {
              "title": "Expert node parameters",
              "type": "object",
              "properties": {
                "monitor-httpd-port": {
                  "default": 8196,
                  "title": "Monitor httpd port",
                  "type": "integer"
                }
              }
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "domain": {
      "description": "Domain used to generate automatic hostnames for slaves. For example 'example.com' will result with slave hostname 'slaveref.example.com'.",
      "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}$",
      "title": "Domain",
      "type": "string",
      "default": "example.org"
    },
    "re6st-verification-url": {
      "description": "Url to verify if the internet and/or re6stnet is working.",
      "title": "Test Verification URL",
      "type": "string",
      "default": "http://[2001:67c:1254:4::1]/index.html"
    },
    "backend-connect-timeout": {
      "default": 5,
      "description": "Time in seconds for establishing connection to the backend.",
      "title": "Timeout for backend connection (seconds)",
      "type": "integer"
    },
    "backend-connect-retries": {
      "default": 3,
      "description": "Amount of retries to connect to the backend. The amount of backend-connect-timeout*backend-connect-retries seconds will be spent to connect to the backend.",
      "title": "Amount of retries to connect to the backend.",
      "type": "integer"
    },
    "automatic-internal-kedifa-caucase-csr": {
      "default": true,
      "description": "Automatically signs CSRs sent to KeDiFa's caucase, based on CSR comparison.",
      "title": "Automatic Internal KeDiFa's Caucase CSR",
      "type": "boolean"
    },
    "automatic-internal-backend-client-caucase-csr": {
      "default": true,
      "description": "Automatically signs CSRs sent to Backend Client's caucase, based on CSR comparison.",
      "title": "Automatic Internal Backend Client's Caucase CSR",
      "type": "boolean"
    },
    "ciphers": {
      "title": "Ordered whitespace separated list of ciphers",
      "type": "string",
      "textarea": true,
      "default": "ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-CHACHA20-POLY1305 ECDHE-RSA-CHACHA20-POLY1305 ECDHE-RSA-AES256-SHA ECDHE-RSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA AES256-SHA AES128-SHA ECDHE-RSA-DES-CBC3-SHA DES-CBC3-SHA"
    },
    "request-timeout": {
      "default": 600,
      "description": "Timeout for HTTP requests.",
      "title": "HTTP Request timeout in seconds",
      "type": "integer"
    },
    "authenticate-to-backend": {
      "default": false,
      "description": "If set to true the frontend certificate will be used as authentication certificate to the backend. Note: backend might have to know the frontend CA, available with 'backend-client-caucase-url'.",
      "title": "Authenticate to backend",
      "type": "boolean"
    },
    "rotate-num": {
      "default": 4000,
      "title": "Amount of daily log rotations",
      "type": "integer"
    },
    "certificate-chain": {
      "description": "SSL Certificate chain to be used. It shall start with a certificate, optionally intermediate certificates and end with a key. Deprecated: please use master-key-upload-url.",
      "textarea": true,
      "title": "[DEPRECATED] Certificate chain",
      "type": "string"
    }
  }
}
