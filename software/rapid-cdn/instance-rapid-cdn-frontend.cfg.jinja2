[buildout]
extends =
  {{ software_parameter_dict['template_common'] }}
  {{ software_parameter_dict['template_monitor2'] }}

{#- Manage frontends #}
{%- set FRONTEND_LIST = [] %}
{#- Note: BACKWARD_COMPATIBLE_FRONTEND_LIST requires SlapOS Master ComputerPartition_getCustomAllocationParameterDict script coordination, to map the Slave's software types to rapid-cdn-frontend #}
{%- set BACKWARD_COMPATIBLE_FRONTEND_LIST = [] %}
{%- for slave in instance_parameter_dict['slave-instance-list'] %}
{%-   do slave.pop('timestamp') %}
{%-   do slave.pop('connection-parameter-hash') %}
{%-   do slave.__setitem__('title', slave.pop('slave_title')) %}
{%-   do slave.__setitem__('reference', slave.pop('slave_reference')) %}
{%-   if '_' in slave %}
{%-     do FRONTEND_LIST.append(slave) %}
{%-   else %}
{%-     do BACKWARD_COMPATIBLE_FRONTEND_LIST.append(slave) %}
{%-   endif %}
{%- endfor %}

{%- set PART_LIST = [] %}

{%- for frontend in FRONTEND_LIST | sort(attribute='title') %}
{%-   set frontend_section_title = 'publish-frontend-' ~ hashlib.md5(frontend['title'].encode('utf-8')).hexdigest() %}                                
{%-   set hostname = '%s.%s' % (frontend['reference'].replace("-", "").replace("_", "").lower(), slapparameter_dict['autogeneration-domain']) %}      
{%-   set rapid_url = 'https://%s/' % (hostname,) %}
{%-   do PART_LIST.append(frontend_section_title) %}
[{{ frontend_section_title }}]
recipe = slapos.cookbook:publish.serialised
-slave-reference = {{ frontend['reference'] }}
rapid-url = {{ rapid_url }}
{%- endfor %}

{%- for frontend in BACKWARD_COMPATIBLE_FRONTEND_LIST | sort(attribute='title') %}
{%-   set frontend_section_title = 'publish-frontend-' ~ hashlib.md5(frontend['title'].encode('utf-8')).hexdigest() %}                                
{%-   set hostname = '%s.%s' % (frontend['reference'].replace("-", "").replace("_", "").lower(), slapparameter_dict['autogeneration-domain']) %}      
{%-   set hostname = '%s.%s' % (frontend['reference'].replace("-", "").replace("_", "").lower(), slapparameter_dict['autogeneration-domain']) %}      
{%-   set url = 'http://%s/' % (hostname, ) %}
{%-   set https_url = 'https://%s/' % (hostname,) %}
{%-   do PART_LIST.append(frontend_section_title) %}
[{{ frontend_section_title }}]
recipe = slapos.cookbook:publish
-slave-reference = {{ frontend['reference'] }}
url = {{ url }}
secure_access = {{ https_url }}
site_url = {{ url }}
domain = {{ hostname }}
log-access-url = XXX-TODO
backend-client-caucase-url = XXX-TODO
kedifa-caucase-url = XXX-TODO
key-generate-auth-url = XXX-TODO
replication_number = XXX-TODO
{%- endfor %}

{#- Request the tree #}
{%- macro sla(sla_key) %}
{%-   set sla_key_length = sla_key | length %}
{%-   for key in slapparameter_dict.keys() %}
{%-     if key.startswith(sla_key) %}
sla-{{ key[sla_key_length:] }} = {{ slapparameter_dict[key] }}
{%-     endif %}
{%-   endfor %}
{%- endmacro %}

{%- for name in ['kedifa', 'human', 'log-aggregator'] %}
{%-   set sla_key = '-sla-%s-computer_guid' % (name,) %}
{%-   if not sla_key in slapparameter_dict %}
{%-     do slapparameter_dict.__setitem__(sla_key, '${slap-connection:computer-id}') %}
{%-   endif %}
{%-   set software_key = '-%s-software-release-url' % (name,) %}
{%-   if not software_key in slapparameter_dict %}
{%-     do slapparameter_dict.__setitem__(software_key, '${slap-connection:software-release-url}') %}
{%-   endif %}
[request-{{ name }}]
<= slap-connection
recipe = slapos.cookbook:requestoptional.serialised
name = {{ name }}
software-type = {{ software_type }}
software-url = {{ slapparameter_dict['-%s-software-release-url' % (name,)] }}
{{ sla('-sla-%s-' % (name,)) }}
{%- endfor %}

[publish-information]
<= monitor-publish
recipe = slapos.cookbook:publish.serialised
xxx-replace-with-information-fetch-depends =
  ${request-kedifa:recipe}
  ${request-human:recipe}
  ${request-log-aggregator:recipe}

[buildout]
parts +=
  publish-information
{% for part in PART_LIST %}
{{ '  %s' % part }}
{% endfor %}
