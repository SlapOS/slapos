{% set tls_transport_enabled = slapparameter_dict['tls-transport-enabled'] -%}
{% set port = slapparameter_dict['port'] -%}

[fluentd-agent-conf]
recipe = slapos.recipe.template:jinja2
url = {{ template_fluentd_agent_conf }}
output = {{ directory['etc'] }}/fluentd-agent.conf
tls-transport-enabled = {{ dumps(tls_transport_enabled) }}
cert-file = $${ca-directory:certs}/fluentd.crt
key-file = $${ca-directory:certs}/fluentd.key
bind = {{ dumps(slapparameter_dict['bind']) }}
port = {{ dumps(port) }}
tag-prefix = {{ dumps(slapparameter_dict.get('tag-prefix')) }}
tag-match-pattern = {{ dumps(slapparameter_dict.get('tag-match-pattern')) }}
wendelin-ingestion-url = {{ dumps(slapparameter_dict['wendelin-ingestion-url']) }}
username = {{ dumps(slapparameter_dict['username']) }}
password = {{ dumps(slapparameter_dict['password']) }}
flush-interval = {{ slapparameter_dict['flush-interval'] }}
buffer-file-dir = {{ directory['fluentd-buffer'] }}
context =
  key tls_transport_enabled :tls-transport-enabled
  key cert_file :cert-file
  key key_file :key-file
  key bind :bind
  key port :port
  key tag_prefix :tag-prefix
  key tag_match_pattern :tag-match-pattern
  key wendelin_ingestion_url :wendelin-ingestion-url
  key username :username
  key password :password
  key flush_interval :flush-interval
  key buffer_file_dir :buffer-file-dir

[service-fluentd]
recipe = slapos.cookbook:wrapper
{%- if tls_transport_enabled %}
wrapper-path = {{ directory['bin'] }}/fluentd-service
{%- else %}
wrapper-path = {{ directory['service'] }}/fluentd-service
{%- endif %}
command-line = ${fluentd:location}/bin/fluentd -v -c $${fluentd-agent-conf:output}
environment =
  GEM_PATH=${fluentd:location}/lib/ruby/gems/

{% if tls_transport_enabled %}
[ca-fluentd]
<= certificate-authority
recipe = slapos.cookbook:certificate_authority.request
key-file = $${ca-directory:certs}/fluentd.key
cert-file = $${ca-directory:certs}/fluentd.crt
executable = $${service-fluentd:wrapper-path}
wrapper = {{ directory['service'] }}/fluentd-service
{%- endif %}

[publish]
recipe = slapos.cookbook:publish
ipv6-address = {{ ipv6_random }}
port = {{ dumps(port) }}

{%  set promise_section_title = 'fluentd-port-' ~ port ~ '-listening' -%}
[{{ promise_section_title }}]
<= monitor-promise-base
promise = check_socket_listening
name = {{ promise_section_title }}.py
config-host = $${slap-configuration:ipv6-random}
config-port = {{ port }}

[buildout]
extends = ${monitor-template:output}

parts =
  {%- if tls_transport_enabled %}
  certificate-authority-service
  ca-fluentd
  {%- else %}
  service-fluentd
  {%- endif %}
  fluentd-agent-conf
  publish
  {{ promise_section_title }}
