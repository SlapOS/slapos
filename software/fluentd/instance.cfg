[buildout]
parts =
  switch-softwaretype

eggs-directory = ${buildout:eggs-directory}
develop-eggs-directory = ${buildout:develop-eggs-directory}
offline = true

[switch-softwaretype]
recipe = slapos.cookbook:switch-softwaretype
default = dynamic-template-fluentd:output
expert = dynamic-template-fluentd-expert:output

[directory]
recipe = slapos.cookbook:mkdirectory
home = $${buildout:directory}
bin = $${:home}/bin
etc = $${:home}/etc
var = $${:home}/var
service = $${:etc}/service
fluentd-buffer = $${:var}/fluentd-buffer

[slap-configuration]
<= slap-connection
recipe = slapos.cookbook:slapconfiguration.jsonschema
jsonschema = ${software.json:target}
set-default = main
validate-parameters = main

[jinja2-template-base]
recipe = slapos.recipe.template:jinja2
extra-context =
context =
  section directory directory
  key slapparameter_dict slap-configuration:configuration
  $${:extra-context}

[dynamic-template-fluentd]
<= jinja2-template-base
url = ${template-fluentd:output}
output = instance-fluentd.cfg
extensions = jinja2.ext.do
extra-context =
  raw template_fluentd_agent_conf ${template-fluentd-agent-conf:target}
  raw ipv6_random $${slap-configuration:ipv6-random}

[dynamic-template-fluentd-expert]
<= jinja2-template-base
url = ${template-fluentd-expert:output}
output = instance-fluentd-expert.cfg
extensions = jinja2.ext.do
extra-context =
  key port_list fluentd-expert-port-list:port-list

[fluentd-expert-port-list]
recipe = slapos.recipe.build
slapparameter-dict = $${slap-configuration:configuration}
init =
  import re
  conf_text = options['slapparameter-dict'].get('conf-text') or ' '
  options['port-list'] = re.findall(r'<source>.*port (\d+).*<\/source>', conf_text, re.DOTALL)
