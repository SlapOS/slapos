[buildout]
parts =
  switch-softwaretype

eggs-directory = ${buildout:eggs-directory}
develop-eggs-directory = ${buildout:develop-eggs-directory}
offline = true

[switch-softwaretype]
recipe = slapos.cookbook:switch-softwaretype
default = dynamic-template-fluentd:output
wendelin-telecom-gateway = dynamic-template-fluentd-wendelin-telecom-gateway:output

[directory]
recipe = slapos.cookbook:mkdirectory
home = $${buildout:directory}
bin = $${:home}/bin
etc = $${:home}/etc
var = $${:home}/var
service = $${:etc}/service
fluentd-buffer = $${:var}/fluentd-buffer

[slap-configuration]
recipe = slapos.cookbook:slapconfiguration
computer = $${slap_connection:computer_id}
partition = $${slap_connection:partition_id}
url = $${slap_connection:server_url}
key = $${slap_connection:key_file}
cert = $${slap_connection:cert_file}

[jinja2-template-base]
recipe = slapos.recipe.template:jinja2
extra-context =
context =
    section directory directory
    key fluentd_agent_conf fluentd-agent-conf:output
    key port_list fluentd-conf:port-list
    $${:extra-context}

[dynamic-template-fluentd]
<= jinja2-template-base
url = ${template-fluentd:output}
output = instance-fluentd.cfg
extensions = jinja2.ext.do
extra-context =

[dynamic-template-fluentd-wendelin-telecom-gateway]
<= jinja2-template-base
url = ${template-fluentd-wendelin-telecom-gateway:output}
output = instance-fluentd-wendelin-telecom-gateway.cfg
extensions = jinja2.ext.do
extra-context =

[fluentd-conf]
recipe = slapos.recipe.build
slapparameter-dict = $${slap-configuration:configuration}
software-type = $${slap-configuration:slap-software-type}
buffer-file-dir = $${directory:fluentd-buffer}
init =
  import re

  software_type = options['software-type'] or 'RootSoftwareInstance'

  if software_type in ['RootSoftwareInstance', 'default']:
    options['conf-text'] = options['slapparameter-dict'].get('conf-text') or ' '

  elif software_type == 'wendelin-telecom-gateway':
    port = options['slapparameter-dict'].get('port') or '24224'
    wendelin_telecom_ingestion_url = options['slapparameter-dict'].get('wendelin-ingestion-url')
    username = options['slapparameter-dict'].get('username')
    password = options['slapparameter-dict'].get('password')
    buffer_file_dir = options['buffer-file-dir']

    options['conf-text'] = (
      "<source>\n"
      "  @type forward\n"
      "  port %s\n"
      "  bind ::0\n"
      "  add_tag_prefix ors\n"
      "</source>\n"
      "<match ors.**>\n"
      "  @type wendelin\n"
      "  streamtool_uri %s\n"
      "  user %s\n"
      "  password %s\n"
      "  <buffer tag,time>\n"
      "    timekey 1m\n"
      "    flush_mode interval\n"
      "    flush_interval 1m\n"
      "    flush_thread_count 4\n"
      "    @type file\n"
      "    path %s/\n"
      "  </buffer>\n"
      "</match>"
    ) % (port, wendelin_telecom_ingestion_url, username, password, buffer_file_dir)

  options['port-list'] = re.findall(r'<source>.*port (\d+).*<\/source>', options['conf-text'], re.DOTALL)

[fluentd-agent-conf]
recipe = slapos.recipe.template
inline = $${fluentd-conf:conf-text}
output = $${directory:etc}/fluentd-agent.conf
