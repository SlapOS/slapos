[buildout]
extends =
  buildout.hash.cfg
  ../../stack/slapos-dev.cfg
  ../../stack/monitor/buildout.cfg
  ../../component/logrotate/buildout.cfg
  ../../component/nghttp2/buildout.cfg
  ../../component/iperf3/buildout.cfg
  ../../component/python3/buildout.cfg
  ../../component/python-pynacl/buildout.cfg
  ../../component/bcrypt/buildout.cfg
  ../../component/numpy/buildout.cfg
  ../../component/pygolang/buildout.cfg
  ../../component/git/buildout.cfg
  ../../component/dnsmasq/buildout.cfg
  ../../component/fluent-bit/buildout.cfg
  ../../component/openssh/buildout.cfg
  ru/buildout.cfg

parts +=
  slapos.toolbox-dev
  template
  slapos-cookbook
  ltelogs.jinja2.sh
  ncclient_common
# copy all configs by default
  mme.jinja2.cfg
  dnsmasq.jinja2.cfg
  ims.jinja2.cfg
  enb.jinja2.cfg
  gnb.jinja2.cfg
  ue_db.jinja2.cfg
  ue.jinja2.cfg
  amari_lte.jinja2
  CreateProcessingEle.jinja2.xml
  cu_config.jinja2.xml
  sib23.jinja2.asn
  monitor-httpd-extra-conf
# copy all gadget file
  gadget
  g-chart.line.js
  promise.gadget.js
  software.cfg.html
  rsvp.js
  iperf3
  dnsmasq
  eggs
  xamari
  setcap
# unimplemented parts - the http monitor and better log handling using logrotate
#  apache-php
#  logrotate

[template]
recipe = slapos.recipe.template
url = ${:_profile_base_location_}/${:filename}
output = ${buildout:directory}/template.cfg

[download-base]
recipe = slapos.recipe.build:download
url = ${:_profile_base_location_}/${:_update_hash_filename_}

[ncclient_common]
<= download-base
destination = ${buildout:directory}/ncclient_common.py

[amarisoft-stats.jinja2.py]
<= download-base

[amarisoft-rf-info.jinja2.py]
<= download-base

# XXX -> rrh_lopcom
[lopcomm-rrh-config.jinja2.py]
<= download-base

[lopcomm-rrh-software.jinja2.py]
<= download-base

[lopcomm-rrh-supervision.jinja2.py]
<= download-base

[template-enb]
<= download-base

[template-gnb]
<= download-base

[template-core-network]
<= download-base

[template-ue]
<= download-base

[template-obsolete]
<= download-base

[copy-to-instance]
recipe  = slapos.recipe.build:download
url     = ${:_profile_base_location_}/${:_buildout_section_name_}

[copy-config-to-instance]
recipe  = slapos.recipe.build:download
url     = ${:_profile_base_location_}/config/${:_buildout_section_name_}

# XXX -> ru/lopcomm
[copy-netconf-to-instance]
recipe  = slapos.recipe.build:download
url     = ${:_profile_base_location_}/netconf/${:_buildout_section_name_}

[gadget]
recipe = slapos.recipe.template
output = ${buildout:directory}/${:_buildout_section_name_}/renderjs.js
url = https://lab.nexedi.com/nexedi/renderjs/raw/b715d066bfddc30bedfc8356fb720dcbb391378e/dist/renderjs-0.28.0.js
md5sum = 7e074a29b07e0045d2ba8a8e63bd499e

[monitor-httpd-extra-conf]
recipe = slapos.recipe.template
output = ${buildout:directory}/etc/httpd-include-file.conf
inline =
  Alias /gadget  ${buildout:directory}/gadget
  <Directory  ${buildout:directory}/gadget>
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
    Satisfy Any
    Allow from all
  </Directory>

[copy-gadget-to-software]
recipe      = slapos.recipe.build:download
url         = ${:_profile_base_location_}/gadget/${:_buildout_section_name_}
destination =  ${buildout:directory}/gadget/${:_buildout_section_name_}

[enb.jinja2.cfg]
<= copy-config-to-instance
filename = enb.jinja2.cfg
[sib23.jinja2.asn]
<= copy-config-to-instance
filename = sib23.jinja2.asn
[gnb.jinja2.cfg]
<= copy-config-to-instance
filename = gnb.jinja2.cfg
[ltelogs.jinja2.sh]
<= copy-to-instance
filename = ltelogs.jinja2.sh
[ue_db.jinja2.cfg]
<= copy-config-to-instance
filename = ue_db.jinja2.cfg
[mme.jinja2.cfg]
<= copy-config-to-instance
filename = mme.jinja2.cfg
[dnsmasq.jinja2.cfg]
<= copy-config-to-instance
filename = dnsmasq.jinja2.cfg
[ims.jinja2.cfg]
<= copy-config-to-instance
filename = ims.jinja2.cfg
[ue.jinja2.cfg]
<= copy-config-to-instance
filename = ue.jinja2.cfg

[amari_lte.jinja2]
<= download-base
[amari_slap.jinja2]
<= download-base

filename = amari/lte.jinja2

# XXX -> ru/lopcomm
[CreateProcessingEle.jinja2.xml]
<= copy-netconf-to-instance
filename = CreateProcessingEle.jinja2.xml
[cu_config.jinja2.xml]
<= copy-netconf-to-instance
filename = cu_config.jinja2.xml

# Download gadget files
[software.cfg.html]
<= copy-gadget-to-software
[promise.gadget.js]
<= copy-gadget-to-software

[rsvp.js]
<= copy-gadget-to-software
url = https://lab.nexedi.com/nexedi/rsvp.js/raw/b0c4596df6a52d75705a59262bc992a166ff11a1/dist/rsvp-2.0.4.js
md5sum = 2b0f2d52857b17fdfb8a5c2ea451a5ad

[g-chart.line.js]
<= copy-gadget-to-software
url = https://raw.githubusercontent.com/guschnwg/g-chart/cbcc7bc40f88fcce4854b55d0902b6273004ba3e/g-chart.line.js
md5sum = 57c50b46c9492c6ab78dc44deac3c0ce

[eggs]
recipe = zc.recipe.egg
eggs =
  websocket-client
  ${python-pynacl:egg}
  ${bcrypt:egg}
  xmltodict
  ncclient
interpreter = pythonwitheggs

[xlte-repository]
recipe = slapos.recipe.build:gitclone
repository = https://lab.nexedi.com/kirr/xlte.git
revision = e716ab51
git-executable = ${git:location}/bin/git
# XXX temp (speedup build)
develop = true

[xlte]
recipe = zc.recipe.egg:develop
setup = ${xlte-repository:location}
egg = xlte
depends =
  ${numpy:egg}
  ${pygolang:egg}

[xamari]
recipe = zc.recipe.egg
eggs = ${xlte:egg}
scripts = xamari

[setcap]
recipe = plone.recipe.command
command = sudo -n /opt/amarisoft/setcap ${dnsmasq:location}/sbin/dnsmasq || true
update-command = ${:command}

[versions]
websocket-client = 1.4.2
ncclient = 0.6.13
xmltodict = 0.13.0
