{#- defaults provide default values for parameters.
    it should be kept in sync with "default" in json schemas  #}
{#- XXX opc='milenage' is not meaningful ?  #}
{%- set defaults = {
      'ue': {
        'sim_algo': 'milenage',
        'opc':      'milenage',
        'amf':      '0x9001',
        'sqn':      '000000000000',
        'impu':     '',
        'impi':     '',
        'imsi':     slap_configuration['configuration.default_lte_imsi'],
        'k':        slap_configuration['configuration.default_lte_k'],
      }
    }
%}

{#- iue_dict keeps ue slave instances:  reference -> iue
    in the kept instances _ is automatically json-decoded
#}
{%- set iue_dict = {}   %}
{%- for slave in slap_configuration.get('slave-instance-list', [])    %}
{%-   set ref = J(jref_of_shared(slave))                              %}
{%-   set _ = J(slave['_'])                                           %}
{%-   do slave.update({'_': _})                                       %}
{%-   if   'ue_type'   in _                                           %}
{%-     set iue = slave                                               %}
{%-     for k, v in defaults['ue'].items()                            %}
{%-       do _.setdefault(k, v)                                       %}
{%-     endfor                                                        %}
{%-     do iue_dict.update({ref: iue})                                %}
{%-   else                                                            %}
{%-     do error(slave, "unknown shared instance type")               %}
{%-   endif                                                           %}
{%- endfor                                                            %}

{#- XXX verify ue.ue_type in lte|nr  #}

{#- start of the config -#}

{
  log_options: "all.level=error,all.max_size=0,nas.level=debug,nas.max_size=1,rrc.level=debug,rrc.max_size=1,phy.level=info,file.rotate=1G,file.path=/dev/null",
  log_filename: "{{ directory['log'] }}/ue.log",

  rue_bind_addr: "{{ pub_info['rue_bind_addr'] }}",
  com_addr: "{{ pub_info['com_addr'] }}",

# XXX instantiate RU
rf_driver: {
    name: "sdr",
    args: "dev0=/dev/sdr0",
    rx_antenna:"tx_rx",
},
  tx_gain: {{ slapparameter_dict.get('tx_gain', 60) }},
  rx_gain: {{ slapparameter_dict.get('rx_gain', 40) }},


  cell_groups: [{
    multi_ue: true,
    cells: [
      {
        bandwidth: N_RB_DL,
        dl_earfcn: {{ slapparameter_dict.get('dl_earfcn', 0) }},
        n_antenna_dl: {{ slapparameter_dict.get('n_antenna_dl', slap_configuration['configuration.default_n_antenna_dl']) }},
        n_antenna_ul: {{ slapparameter_dict.get('n_antenna_ul', slap_configuration['configuration.default_n_antenna_ul']) }},
        global_timing_advance: -1,
      }
    ],
    pdcch_decode_opt: false,
    pdcch_decode_opt_threshold: 0.1,
  }],

  ue_list: [
{%- for ue_ref, iue in iue_dict|dictsort  %}
{%-   set ue = iue['_']                   %}
    {
      sim_algo: "{{ ue.sim_algo }}",
      opc: "{{ ue.opc }}",
      amf: {{ ue.amf }},
      sqn: "{{ ue.sqn }}",
      impu: "{{ ue.impu }}",
      impi: "{{ ue.impi }}",
      imsi: "{{ ue.imsi }}",
      K: "{{ ue.k }}",
      rue_addr: "{{ ue.rue_addr }}",
{%-   if ue.ue_type == 'lte'            %}
      ue_category: 12,
{%-   elif ue.ur_type == 'nr'           %}
      as_release: 15,
      ue_category: "nr",
{%-   else                              %}
{%-     do bug('unreachable')   %}
{%-   endif                             %}
      tun_setup_script: "ue-ifup",
      apn: "internet",
    }
{%- endfor %}
  ],
}
