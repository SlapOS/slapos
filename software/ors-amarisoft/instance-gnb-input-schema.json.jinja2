{
  "type": "object",
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "Input Parameters",
  "properties": {
{%- if bbu == 'ors' %}
    "nr_bandwidth": {
      "$ref": "cell/common.json#/properties/bandwidth",
      "default": {{ default_nr_bandwidth }}
    },
    "n_antenna_dl": {
      "$ref": "ru/common.json#/properties/n_antenna_dl",
      "enum": [
        1,
        2
      ],
      "default": {{ default_n_antenna_dl }}
    },
    "n_antenna_ul": {
      "$ref": "ru/common.json#/properties/n_antenna_ul",
      "enum": [
        1,
        2
      ],
      "default": {{ default_n_antenna_ul }}
    },
    "rf_mode": {
      "$ref": "cell/common.json#/properties/rf_mode",
      "default": "tdd"
    },
    "tdd_ul_dl_config": {
      "$ref": "cell/nr/input-schema.json#/properties/tdd_ul_dl_config"
    },
    "dl_nr_arfcn": {
      "$ref": "cell/nr/input-schema.json#/properties/dl_nr_arfcn"
    },
    "nr_band": {
      "$ref": "cell/nr/input-schema.json#/properties/nr_band"
    },
    "ssb_pos_bitmap": {
      "$ref": "cell/nr/input-schema.json#/properties/ssb_pos_bitmap",
      "default": {{ default_nr_ssb_pos_bitmap }}
    },
    "pci": {
      "$ref": "cell/common.json#/properties/pci",
      "default": 500
    },
    "cell_id": {
      "$ref": "cell/common.json#/properties/cell_id",
      "default": "0x01"
    },
{%- else %}
    "cell_list": {
      "title": "Cell List",
      "description": "Cell List",
      "patternProperties": {
        ".*": {
          "$ref": "cell/nr/input-schema.json"
        }
      },
      "type": "object",
      "default": {}
    },
{%- endif %}
{%- if bbu == 'ors' %}
    "tx_gain": {
      "$ref": "ru/sdr/input-schema.json#/properties/tx_gain"
    },
    "rx_gain": {
      "$ref": "ru/sdr/input-schema.json#/properties/rx_gain"
    },
{%- endif %}
{%- if bbu != 'ors' %}
    "user-authorized-key": {
      "title": "User Authorized Key",
      "description": "SSH public key in order to connect to the SSH server of this instance.",
      "textarea": true,
      "type": "string"
    },
{%- endif %}
    "gnb_id": {
      "title": "gNB ID",
      "description": "gNB ID{% if bbu != 'ors' %}. (must be set if there are NR cells){% endif %}",
      "type": "string"
{%- if bbu == 'ors' %},
      "default": "0x12345"
{%- endif %}
    },
    "gnb_id_bits": {
      "title": "gNB ID bits",
      "description": "Number of bits for the gNodeB global identifier. (range 22 to 32)",
      "type": "number",
      "default": 28
    },
    "amf_list": {
      "title": "AMF list",
{%- if bbu == 'ors' %}
      "description": "Optionnal. List of AMF to which the gNodeB is connected",
{%- else %}
      "description": "List of AMF to which the gNodeB is connected. (must set if there are NR cells)",
{%- endif %}
      "patternProperties": {
        ".*": {
          "properties": {
            "amf_addr": {
              "title": "AMF Address",
              "description": "IP address (and optional port) of NGAP SCTP connection to the AMF. The default port is 38412.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
{%- if bbu == 'ors' %},
      "default": {
        "1": {
          "amf_addr": "127.0.1.100"
        }
      }
{%- endif %}
    },
    "plmn_list": {
      "title": "PLMN list",
{%- if bbu == 'ors' %}
      "description": "List of PLMNs broadcasted by the gNodeB, at most 12 (default: 00101)",
{%- else %}
      "description": "List of PLMNs broadcasted by the gNodeB, at most 12. (must set if there are NR cells)",
{%- endif %}
      "patternProperties": {
        ".*": {
          "properties": {
            "plmn": {
{%- if bbu == 'ors' %}
              "default": "00101",
{%- endif %}
              "title": "Public Land Mobile Network",
              "description": "Public Land Mobile Network",
              "type": "string"
            },
            "tac": {
{%- if bbu == 'ors' %}
              "default": 100,
{%- endif %}
              "title": "Tracking Area Code",
              "description": "Integer (range 0 to 16777215)",
              "type": "number"
            },
            "ranac": {
              "title": "Optional integer (range 0 to 255)",
              "description": "RAN Area Code",
              "type": "number"
            },
            "reserved": {
              "default": false,
              "title": "Reserved",
              "description": "True if the cell is reserved for operator use.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
{%- if bbu == 'ors' %},
      "default": {
        "1": {
          "plmn": "00101",
          "tac": 100
        }
      }
{%- endif %}
    },
    "nssai": {
      "title": "AMF slices configuration",
      "description": "AMF slices configuration.",
      "patternProperties": {
        ".*": {
          "properties": {
            "sst": {
              "default": 1,
              "title": "Slice Service Type",
              "description": "Integer (range 1 to 255).",
              "type": "number"
            },
            "sd": {
              "default": "0x000032",
              "title": "Slice Differentiator",
              "description": "Optional integer (range 0 to 0xFFFFFE)",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "default": {}
    },
{%- if bbu == 'ors' %}
    "nr_handover_a3_offset": {
      "title": "A3 offset for NR handover",
      "description": "RSRP gain offset between gNBs which will trigger handover",
      "type": "number",
      "default": 6
    },
    "nr_handover_time_to_trigger": {
      "title": "Time to Trigger for NR handover",
      "description": "Time to triger after which NR handover will be triggerd if A3 offset is reached",
      "type": "number",
      "enum": [
        0,
        40,
        64,
        80,
        100,
        128,
        160,
        256,
        320,
        480,
        512,
        640,
        1024,
        1280,
        2560,
        5120
      ],
      "default": 100
    },
{%- endif %}
    "ncell_list": {
      "title": "Neighbour Cell Info",
      "description": "Neighbour Cell Info",
      "patternProperties": {
        ".*": {
          "properties": {
            "dl_nr_arfcn": {
              "title": "DL NR ARFCN",
              "description": "Downlink NR Absolute Radio Frequency Channel Number of the neighbour cell",
              "type": "number"
            },
            "ssb_nr_arfcn": {
              "title": "SSB NR ARFCN",
              "description": "SSB NR Absolute Radio Frequency Channel Number of the neighbour cell",
              "type": "number"
            },
            "pci": {
              "title": "Physical Cell ID",
              "description": "Physical Cell ID of the neighbour cell",
              "type": "number"
            },
            "nr_cell_id": {
              "title": "NR Cell ID",
              "description": "Concatenation of gnb_id and cell_id of the neighbour cell",
              "type": "string"
            },
            "gnb_id_bits": {
              "title": "gNB ID bits",
              "description": "Number of bits for the gNodeB global identifier. (range 22 to 32)",
              "type": "number"
            },
            "nr_band": {
              "title": "NR band",
              "description": "NR band number",
              "type": "number"
            },
            "tac": {
              "title": "Tracking Area Code",
              "description": "Integer (range 0 to 16777215)",
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "default": {}
    },
    "xn_peers": {
      "title": "XN Peers",
      "description": "XN Peers",
      "patternProperties": {
        ".*": {
          "properties": {
            "xn_addr": {
              "title": "XN Address",
              "description": "XN Address of the neighbour cell (gNB Address)",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "default": {}
    },
    "websocket_password": {
      "title": "Websocket password",
      "description": "Activates websocket for remote control and sets password",
      "type": "string"
    },
{%- if bbu == 'ors' %}
    "inactivity_timer": {
      "title": "Inactivity Timer",
      "description": "Send RRC connection release after this time (in ms) of network inactivity.",
      "type": "number",
      "default": {{ default_nr_inactivity_timer }}
    },
{%- endif %}
    "log_phy_debug": {
      "title": "Physical layer log debug",
      "description": "Enable debug mode for physical layer logs",
      "type": "boolean",
      "default": false
    },
    "gps_sync": {
      "default": false,
      "title": "GPS synchronisation",
      "description": "True if GPS should be used for synchronisation",
      "type": "boolean"
    },
    "disable_sdr": {
      "default": false,
      "title": "Disable SDR",
      "description": "Disables radio",
      "type": "boolean"
    },
    "use_ipv4": {
      "default": false,
      "title": "Use IPv4",
      "description": "Set to true to use IPv4 for AMF / MME addresses",
      "type": "boolean"
    },
    "gnb_stats_fetch_period": {
      "title": "gNB statistics fetch period (seconds)",
      "description": "Describes how often a call to Amarisoft remote API is made to get gNB statistics",
      "type": "number",
      "default": 60
    },
    "gnb_drb_stats_enabled": {
      "title": "Enable gNB drb statistics",
      "description": "Enable gNB drb statistics through 100Hz polling, needed for E-UTRAN IP Throughput KPI",
      "type": "boolean",
      "default": true
    },
    "max_rx_sample_db": {
      "title": "Maximum RX sample value (dB)",
      "description": "Maximum RX sample threshold above which RX saturated promise will fail",
      "type": "number",
      "default": 0
    },
    "min_rxtx_delay": {
      "title": "Minimum available time for radio front end processing (ms)",
      "description": "Baseband latency promise will fail if minimum TX/RX diff reaches threshold (lower than this value)",
      "type": "number",
      "default": 0
    },
    "xlog_fluentbit_forward_host": {
      "title": "Address to Forward Xlog by Fluenbit",
      "description": "Address of Remote Fluentd or Fluentbit Server to Forward Xlog",
      "type": "string"
    },
    "xlog_fluentbit_forward_port": {
      "title": "Port to Forward Xlog by Fluentbit",
      "description": "Optional Port of Remote Fluentd or Fluentbit Server to Forward Xlog",
      "type": "string"
    },
    "xlog_fluentbit_forward_shared_key": {
      "title": "Shared Key to Forward Xlog by Fluentbit",
      "description": "Secret Key Shared with Remote Fluentd or Fluentbit Server for Authentication when Forwarding Xlog",
      "type": "string"
    }
  }
}
