[buildout]
extends = ${nxdtest-instance.cfg:output}
parts +=
  publish

[slap-configuration]
recipe = slapos.cookbook:slapconfiguration
computer = $${slap-connection:computer-id}
partition = $${slap-connection:partition-id}
url = $${slap-connection:server-url}
key = $${slap-connection:key-file}
cert = $${slap-connection:cert-file}

[create-directory]
recipe = slapos.cookbook:mkdirectory
bin = $${buildout:directory}/bin
etc = $${buildout:directory}/etc
services = $${:etc}/run
srv = $${buildout:directory}/srv
var = $${buildout:directory}/var
nxdtest-working-dir = $${:var}/nxdtest

[download-source]
recipe = slapos.recipe.build:gitclone
git-executable = ${git:location}/bin/git

[kedifa]
<= download-source
repository = ${kedifa-repository:location}

[caucase]
<= download-source
repository = ${caucase-repository:location}

[caucase-test-runner]
recipe = slapos.recipe.template
inline =
  #!/bin/sh
  export HOSTS_FILE="$(mktemp)"
  trap 'rm "$HOSTS_FILE"' EXIT
  printf '%s testhost\n%s testhost\n' "$SLAPOS_TEST_IPV4" "$SLAPOS_TEST_IPV6" > "$HOSTS_FILE"
  export CAUCASE_NETLOC=testhost:8000 LD_PRELOAD=${userhosts:location}/lib/libuserhosts.so:$LD_PRELOAD
  exec python -m unittest discover -v
output = $${caucase:location}/host_setting.sh

[slapos.libnetworkcache]
<= download-source
repository = ${slapos.libnetworkcache-repository:location}

[slapcache]
<= download-source
repository = ${slapcache-repository:location}

[erp5.util]
<= download-source
repository = ${erp5.util-repository:location}

[slapos.cookbook]
<= download-source
repository = ${slapos.cookbook-repository:location}

[slapos.core]
<= download-source
repository = ${slapos.core-repository:location}

[slapos.recipe.build]
<= download-source
repository = ${slapos.recipe.build-repository:location}

[slapos.recipe.cmmi]
<= download-source
repository = ${slapos.recipe.cmmi-repository:location}

[slapos.recipe.template]
<= download-source
repository = ${slapos.recipe.template-repository:location}

[slapos.toolbox]
<= download-source
repository = ${slapos.toolbox-repository:location}

[slapos.rebootstrap]
<= download-source
repository = ${slapos.rebootstrap-repository:location}

[rubygemsrecipe]
<= download-source
repository = ${rubygemsrecipe-repository:location}

[re6stnet]
<= download-source
repository = ${re6stnet-repository:location}

[re6stnet-test-runner]
recipe = slapos.recipe.template:jinja2
template = inline:#!/bin/sh
  # put python3 in PATH for ovpn-server and ovpn-client scripts
  export PATH=${python:location}/bin:$$PATH

  # update files in /sys/class/net
  mount -t sysfs sysfs /sys

  python -m unittest discover -v
rendered = $${re6stnet:location}/test-runner.sh

[slapos-test-runner-nxdtest-environment.sh]
recipe = slapos.recipe.template
output = $${create-directory:etc}/$${:_buildout_section_name_}
inline =
  export PATH=${coreutils:location}/bin:${curl:location}/bin:${openssl:location}/bin:${jq:location}/bin:${sed:location}/bin:${grep:location}/bin:${git:location}/bin:${libxslt:location}/bin:${socat:location}/bin:${lmsensors:location}/bin:${rsync:location}/bin/:${iptables:location}/sbin:${miniupnpd:location}/usr/sbin:${brctl:location}/sbin:${openvpn:location}/sbin:${babeld:location}/bin:${buildout:bin-directory}:$PATH
  export SLAPOS_TEST_IPV4=$${slap-configuration:ipv4-random}
  export SLAPOS_TEST_IPV6=$${slap-configuration:ipv6-random}
  export SLAPOS_TEST_EGGS_DIRECTORY=$${buildout:eggs-directory}
  export SLAPOS_TEST_DEVELOP_EGGS_DIRECTORY=$${buildout:develop-eggs-directory}
  export SLAPOS_TEST_POSTGRESQL_PREFIX=${postgresql:location}


[slapos-test-runner-dot-nxdtest]
recipe = slapos.recipe.template
output = $${:workdir}/.nxdtest
workdir = $${create-directory:nxdtest-working-dir}
inline =
  import six
  import sys
  TestCase(
      "kedifa",
      ['python', '-m', 'unittest', 'discover', '-v'],
      cwd="""$${kedifa:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "caucase",
      ['$${caucase-test-runner:output}'],
      cwd="""$${caucase:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "erp5.util",
      ['python', '-m', 'unittest', 'discover', '-v', '--start', 'erp5/tests/'],
      cwd="""$${erp5.util:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "slapos.cookbook",
      # slapos/test contain both tests for recipes and tests for
      # json schemas, we only care about recipe tests here, json
      # schemas are tested in software/slapos-sr-testing
      ['python', '-m', 'unittest', 'discover', '-v', '--start', 'slapos/test/recipe'],
      cwd="""$${slapos.cookbook:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "slapos.core",
      # ['python', '-m', 'unittest', 'discover', '-v'],
      # XXX some test fail when running with unittest (slapos*.cfg.example
      # files cannot be found with pkg_resources.resource_string), so we keep
      # using setup.py test for now.
      ['python', 'setup.py', 'test'],
      cwd="""$${slapos.core:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "slapos.recipe.build",
      ['python', '-m', 'unittest', 'discover', '-v'],
      cwd="""$${slapos.recipe.build:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "slapos.recipe.cmmi",
      ['python', '-m', 'unittest', 'discover', '-v'],
      cwd="""$${slapos.recipe.cmmi:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "slapos.recipe.template",
      # ['python', '-m', 'unittest', 'slapos.recipe.template.tests.test_suite'],
      # XXX some test fail when running with unittest, so we keep using setup.py test
      ['python', 'setup.py', 'test'],
      cwd="""$${slapos.recipe.template:location}""",
      summaryf=UnitTest.summary,
  )
  if six.PY3:
    TestCase(
        "slapos.toolbox",
        # ['python', '-m', 'unittest', 'discover', '-v'],
        # XXX We can not just run unittest discover here, since slapos/lamp
        # imports MySQLDb and we currently don't have installed
        # slapos.toolbox[lampconfigure] and on python3 discovery make a
        # failing test for this import error.
        # Currently slapos/lamp is not tested, but if it it is still used,
        # the TODO seem to also install slapos.toolbox[lampconfigure] here.
        ['python', '-m', 'unittest', 'discover', '-v', '--start', 'slapos/test', '--top-level-directory', '.'],
        cwd="""$${slapos.toolbox:location}""",
        summaryf=UnitTest.summary,
    )
  TestCase(
      "slapos.libnetworkcache",
      ['python', '-m', 'unittest', '-v', 'slapos.libnetworkcachetests'],
      cwd="""$${slapos.libnetworkcache:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "slapcache",
      ['python', '-m', 'unittest', 'discover', '-v', '--start', 'slapcache/test'],
      cwd="""$${slapcache:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "slapos.rebootstrap",
      ['python', '-m', 'unittest', '-v', 'slapos.rebootstrap.tests.test_suite'],
      cwd="""$${slapos.rebootstrap:location}""",
      summaryf=UnitTest.summary,
  )
  TestCase(
      "rubygemsrecipe",
      ['python', '-m', 'unittest', 'discover', '-v'],
      cwd="""$${rubygemsrecipe:location}""",
      summaryf=UnitTest.summary,
  )
  if sys.version_info >= (3,11):
    TestCase(
        "re6stnet",
        ['unshare', '-Umnr', '$${re6stnet-test-runner:rendered}'],
        cwd="""$${re6stnet:location}/re6st/tests""",
        summaryf=UnitTest.summary,
    )


[runTestSuite]
env.sh = $${slapos-test-runner-nxdtest-environment.sh:output}
workdir = $${slapos-test-runner-dot-nxdtest:workdir}

[slapos-local-development-environment.sh]
recipe = slapos.recipe.template
output = $${create-directory:etc}/$${:_buildout_section_name_}
inline =
  source $${slapos-test-runner-nxdtest-environment.sh:output}
  echo "Environment loaded."
  echo "To work on a test, execute:"
  echo "   $${runTestSuite:wrapper-path} -k test_name"
  echo "replacing test_name by the name of the test."
  echo

[publish]
recipe = slapos.cookbook:publish
environment-script = $${slapos-local-development-environment.sh:output}
