{% set interface = slapparameter_dict.get('interface', 'eth0') -%}
{% set gpio_port = slapparameter_dict.get('gpio-port', '192') -%}

[buildout]
parts =
  gpio_setup
  ptp4l-launcher-{{ interface }}
  tsn-script
  publish-connection-information

[directory]
recipe = slapos.cookbook:mkdirectory
etc = $${buildout:directory}/etc
scripts = $${:etc}/tsn

[gpio_setup]
recipe = slapos.recipe.build
gpio-port = {{ gpio_port }}
init =
  import os
  gpio_dir = "/sys/class/gpio/gpio" + options["gpio-port"]
  if not os.path.exists(gpio_dir):
    with open("/sys/class/gpio/export", "w") as fd:
      fd.write(options["gpio-port"])
  with open(os.path.join(gpio_dir, "direction"), "w") as fd:
    fd.write("out") 

[tsn-script-template]
recipe  = slapos.recipe.template:jinja2
rendered= $${directory:scripts}/$${:_buildout_section_name_}
mode    = 755

[ptp4l-launcher-{{ interface }}]
<= tsn-script-template
template= inline:
  #!/bin/sh -e
  {{ chrt }} -f 97 ${linuxptp:location}/sbin/ptp4l -s -S -i {{ interface }} --step_threshold=1 -m

[tsn-script]
<= tsn-script-template
template= inline:
  #!/bin/sh -e
  ${tsn-rt-measures:location}/bin/server -a 1 -i 1000 -f {{ interface }} -p 95 -v -c {{ gpio_port }}

[publish-connection-information]
recipe = slapos.cookbook:publish
ip = {{ ipv4 }}
ptp4l-launcher-{{ interface }} = $${ptp4l-launcher-{{ interface }}:rendered}
tsn-script = $${tsn-script:rendered}
