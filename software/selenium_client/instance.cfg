[buildout]
extends =
  ${instance-fluentd:output}
parts +=
  publish-connection-information

[dynamic-template-fluentd]
context =
  key fluentd_agent_conf selenium-client-conf:output
  key port_list fluentd-conf:port-list
  section directory directory

[selenium-client-conf]
recipe = slapos.recipe.template:jinja2
output = $${buildout:directory}/selenium-conf.cfg
context =
  key slapparameter_dict slap-configuration:configuration
  key simulation_log_dir directory:simulation-log-dir
  key flight_log_dir directory:flight-log-dir
inline =
  {% set wendelin_url = slapparameter_dict.get('wendelin-url', '') -%}
  {% set wendelin_user = slapparameter_dict.get('wendelin-user', '') -%}
  {% set wendelin_password = slapparameter_dict.get('wendelin-password', '') -%}
  {% set simulation_log_dir = slapparameter_dict.get('simulation-log-dir', simulation_log_dir) -%}
  {% set flight_log_dir = slapparameter_dict.get('flight-log-dir', flight_log_dir) -%}
  <source>
    @type tail
    read_from_head true
    path {{ simulation_log_dir }}/*.log
    tag drone_simulation.sample-drone-raw-data
    format none
    path_key filepath
  </source>

  <match drone_simulation.sample-drone-raw-data>
    @type wendelin
    streamtool_uri {{ wendelin_url }}/erp5/portal_ingestion_policies/default
    user {{ wendelin_user }}
    password {{ wendelin_password }}
    <buffer>
      @type memory
      flush_mode interval
      flush_interval 1s
    </buffer>
  </match>

  <source>
    @type tail
    read_from_head true
    path {{ flight_log_dir }}/*.log
    tag drone_real.bouncy_flight_mavsdk_raw_data
    format none
    path_key filepath
  </source>

  <match drone_real.bouncy_flight_mavsdk_raw_data>
    @type wendelin
    streamtool_uri {{ wendelin_url }}/erp5/portal_ingestion_policies/default
    user {{ wendelin_user }}
    password {{ wendelin_password }}
    <buffer>
      @type memory
      flush_mode interval
      flush_interval 1s
    </buffer>
  </match>

[directory]
simulation-log-dir = $${:etc}/simulation_log_dir
flight-log-dir = $${:etc}/flight_log_dir

[publish-connection-information]
recipe = slapos.cookbook:publish
python-with-eggs = ${python-with-eggs:executable}
