[buildout]
parts =
  publish-connection-parameter

[peertube-instance]
recipe = slapos.cookbook:wrapper
wrapper-path = $${directory:service}/$${:_buildout_section_name_}
command-line = sh -c "cd $${directory:versions}; cp -r ${peertube-download:location} ./;
# peertube yarn install --production --pure-lockfile"
# cp peertube-latest/config/default.yaml config/default.yaml
# cp peertube-latest/config/production.yaml.example config/production.yaml
# cp /var/www/peertube/peertube-latest/support/nginx/peertube /etc/nginx/sites-available/peertube
# sed -i 's/${WEBSERVER_HOST}/[peertube-domain]/g' /etc/nginx/sites-available/peertube
# sed -i 's/${PEERTUBE_HOST}/127.0.0.1:9000/g' /etc/nginx/sites-available/peertube

[directory]
recipe = slapos.cookbook:mkdirectory
srv = $${buildout:directory}/srv
var = $${:srv}/var
www = $${:var}/www
peertube_directory = ${:www}/peertube
config = $${:peertube_directory}/config
storage = $${:peertube_directory}/storage
versions = $${:peertube_directory}/versions

[postgresql-password]
recipe = slapos.cookbook:generate.password
bytes = 24

[postgresql]
recipe = slapos.cookbook:postgres
bin = ${postgresql10:location}/bin/
services = $${directory:service}
dbname  = peertube_prod
superuser = peertube
password = $${postgresql-password:passwd}
pgdata-directory = $${directory:srv}/postgresql

ipv4 = $${instance-parameter:ipv4-random}
# disable listening on ipv6
ipv6 =
port = 5432

[postgresql-extension]
recipe = slapos.cookbook:wrapper
wrapper-path = $${directory:bin}/$${:_buildout_section_name_}
command-line =
    $${postgresql:bin}/psql -c "CREATE EXTENSION pg_trgm;" $${postgresql:dbname}
    $${postgresql:bin}/psql -c "CREATE EXTENSION unaccent;" $${postgresql:dbname}

[publish-connection-parameter]
recipe = slapos.cookbook:publish
url = $${peertube-instance:url}
