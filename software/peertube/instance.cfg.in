[buildout]
extends =
  ${monitor-template:output}

parts =
  service-redis
  promise-redis
  postgresql
  peertube-yaml
  nginx-service
  peertube-service
  publish-connection-parameter
  nginx-listen-promise
  peertube-listen-promise

eggs-directory = ${buildout:eggs-directory}
develop-eggs-directory = ${buildout:develop-eggs-directory}
offline = true

[directory]
recipe = slapos.cookbook:mkdirectory
etc = $${buildout:directory}/etc
srv = $${buildout:directory}/srv
var = $${buildout:directory}/var
log = $${:var}/log
run = $${:var}/run
www = $${:var}/www
nginx = $${:etc}/nginx
peertube_nginx_log = $${:log}/nginx
varnginx = $${:var}/nginx
services = $${:etc}/service
peertube_directory = $${:www}/peertube
config = $${:peertube_directory}/config
storage = $${:peertube_directory}/storage
versions = $${:peertube_directory}/versions
ssl = $${:etc}/ssl

[peertube-yaml]
recipe = slapos.recipe.template
url = ${template-peertube:output}
output = $${directory:config}/peertube.yaml

[peertube-listen-promise]
<= monitor-promise-base
promise = check_url_available
name = peertube_listen.py
config-verify = 0
config-url = https://$${frontend:connection-domain}

[peertube-service]
recipe = slapos.recipe.template
url = ${template-peertube-service:output}
output = $${directory:services}/peertube

[postgresql-password]
recipe = slapos.cookbook:generate.password

[postgresql]
recipe = slapos.cookbook:postgres
bin = ${postgresql10:location}/bin/
services = $${directory:services}
dbname  = peertube_prod
superuser = peertube
password = $${postgresql-password:passwd}
pgdata-directory = $${directory:srv}/postgresql

ipv4 = $${instance-parameter:ipv4-random}
# disable listening on ipv6
ipv6 =
port = 5432

[service-postgresql]
recipe  = slapos.cookbook:postgres
bin     = ${postgresql10:location}/bin
services= $${directory:service}

#################################
# Nginx service
#################################
[nginx-service]
recipe = slapos.recipe.template
url = ${template-nginx-service:output}
output = $${directory:services}/nginx
virtual-depends =
  $${nginx-configuration:ip}

[nginx-listen-promise]
<= monitor-promise-base
promise = check_url_available
name = nginx_listen.py
config-verify = 0
config-url = https://[$${nginx-configuration:ip}]:$${nginx-configuration:port}

[nginx-configuration]
recipe = slapos.recipe.template
url = ${template-nginx-configuration:output}
output = $${directory:etc}/nginx.cfg
access_log = $${directory:log}/nginx-access.log
error_log = $${directory:log}/nginx-error.log
ip = $${instance-parameter:ipv6-random}
port = 9443
ssl_key = $${directory:ssl}/nginx.key
ssl_csr = $${directory:ssl}/nginx.csr
ssl_crt = $${directory:ssl}/nginx.crt

#############
#   Redis   #
#############
[redis]
recipe  = slapos.cookbook:mkdirectory
srv     = $${directory:srv}/redis
log     = $${directory:log}/redis

[service-redis]
recipe  = slapos.cookbook:redis.server
wrapper = $${directory:services}/redis
promise-wrapper = $${directory:bin}/redis-promise

server-dir  = $${redis:srv}
config-file = $${directory:etc}/redis.conf
log-file    = $${redis:log}/redis.log
pid-file    = $${directory:run}/redis.pid
use-passwd  = false
unixsocket  = $${:server-dir}/redis.socket
# port = 0 means "don't listen on TCP at all" - listen only on unix socket
ipv6    = ::1
port    = 0

# server-bin  = ${buildout:parts-directory}/redis/bin/redis-server
server-bin = ${redis28:location}/bin/redis-server
cli-bin  = ${redis28:location}/bin/redis-cli
depend  =
    $${logrotate-entry-redis:recipe}

[promise-redis]
<= monitor-promise-base
promise = check_command_execute
name = promise-redis.py
config-command = $${service-redis:promise-wrapper}

[logrotate-entry-redis]
<= logrotate-entry-base
log     = $${redis:log}/*.log
name = redis

#################################
# SlapOS service
#################################
[instance-parameter]
recipe = slapos.cookbook:slapconfiguration
computer = $${slap-connection:computer-id}
partition = $${slap-connection:partition-id}
url = $${slap-connection:server-url}
key = $${slap-connection:key-file}
cert = $${slap-connection:cert-file}
configuration._ = {}

[frontend]
<= slap-connection
recipe = slapos.cookbook:requestoptional
name = PeerTube Server Frontend
# XXX We have hardcoded SR URL here.
software-url = http://git.erp5.org/gitweb/slapos.git/blob_plain/HEAD:/software/apache-frontend/software.cfg
slave = true
config-type = websocket
config-websocket-path-list = /socket.io /tracker
config-url = https://[$${nginx-configuration:ip}]:$${nginx-configuration:port}
return = domain secure_access

[slap-configuration]
recipe = slapos.cookbook:slapconfiguration
computer = $${slap_connection:computer_id}
partition = $${slap_connection:partition_id}
url = $${slap_connection:server_url}
key = $${slap_connection:key_file}
cert = $${slap_connection:cert_file}
short_description = 'PeerTube, an ActivityPub-federated video streaming platform using P2P directly in your web browser.'
description = 'Welcome to this PeerTube instance!'
terms = 'No terms for now.'

[peertube-text-content]
recipe = slapos.recipe.build
slapparameter-dict = $${slap-configuration:configuration}
init =
  options['name'] = options['slapparameter-dict'].get('name') or 'Peertube in Slapos'
  options['short_description'] = options['slapparameter-dict'].get('short_description') or ''
  options['description'] = options['slapparameter-dict'].get('description') or ''
  options['terms'] = options['slapparameter-dict'].get('terms') or ''
  options['code_of_conduct'] = options['slapparameter-dict'].get('code_of_conduct') or ''
  options['moderation_information'] = options['slapparameter-dict'].get('moderation_information') or ''
  options['creation_reason'] = options['slapparameter-dict'].get('creation_reason') or ''
  options['administrator'] = options['slapparameter-dict'].get('administrator') or ''
  options['maintenance_lifetime'] = options['slapparameter-dict'].get('maintenance_lifetime') or ''
  options['business_model'] = options['slapparameter-dict'].get('business_model') or ''
  options['hardware_information'] = options['slapparameter-dict'].get('hardware_information') or ''

[publish-connection-parameter]
recipe = slapos.cookbook:publish
frontend-url = $${frontend:connection-secure_access}
frontend-hostname = $${frontend:connection-domain}
frontend-port = 9000
