[buildout]
extends =
  {{ nxdtest_instance }}
  {{ virtual_env }}
parts =
  runTestSuite
  publish

[slap-configuration]
recipe = slapos.cookbook:slapconfiguration.serialised
computer = ${slap-connection:computer-id}
partition = ${slap-connection:partition-id}
url = ${slap-connection:server-url}
key = ${slap-connection:key-file}
cert = ${slap-connection:cert-file}

[download-source]
recipe = slapos.recipe.build:gitclone
git-executable = {{ git_location }}/bin/git

[slapos]
<= download-source
repository = {{ slapos_location }}

[directory]
recipe = slapos.cookbook:mkdirectory
bin = ${buildout:directory}/bin
etc = ${buildout:directory}/etc
var = ${buildout:directory}/var
test-working-dir = ${buildout:directory}/tmp
nxdtest-working-dir = ${:var}/nxdtest

[test-runner]
<= virtual-env-base
location = ${directory:etc}/slapos-test-runner-nxdtest-environment.sh
default-instance = false
environment =
  PATH = {{ buildout['bin-directory'] }}:{{ curl_location }}/bin:{{ faketime_location }}/bin:{{ openssl_location }}/bin:/usr/bin:/bin
  SLAPOS_TEST_IPV4 = ${slap-configuration:ipv4-random}
  SLAPOS_TEST_IPV6 = ${slap-configuration:ipv6-random}
  SLAPOS_TEST_WORKING_DIR = ${directory:test-working-dir}

[slapos-test-runner-dot-nxdtest]
recipe = slapos.recipe.template:jinja2
output = ${:workdir}/.nxdtest
workdir = ${directory:nxdtest-working-dir}
tests = {{ tests | indent(2) }}
inline =
  {% raw %}
  {%- set only_sr = slapparameter_dict.get('only-sr') %}
  {%- if only_sr and not isinstance(only_sr, list) %}
  {%-   set only_sr = [only_sr] %}
  {%- endif %}
  {%- set unittest_args = slapparameter_dict.get('unittest-args', ['discover', '-v']) %}
  {%- if not isinstance(unittest_args, list) %}
  {%-   set unittest_args = [unittest_args] %}
  {%- endif %}
  command = {{ repr([interpreter, '-m', 'unittest'] + unittest_args) }}
  {%- for test in tests.splitlines() %}
  {%-   set name, folder = test.split() %}
  {%-   if not only_sr or name in only_sr %}
  TestCase(
    {{ repr(name) }},
    command,
    cwd={{ repr(folder) }},
    summaryf=UnitTest.summary,
  )
  {%-   endif %}
  {%- endfor %}
  {%- endraw %}
context =
  key slapparameter_dict slap-configuration:configuration
  key tests :tests
  raw interpreter {{ interpreter }}

[runTestSuite]
env.sh = ${test-runner:location}
workdir = ${slapos-test-runner-dot-nxdtest:workdir}

[local-test-runner]
<= virtual-env-base
location = ${directory:etc}/slapos-local-development-environment.sh
default-instance = false
chain = ${test-runner:location}
{% set shared_part_list = [] %}
{% for shared_part in buildout['shared-part-list'].splitlines() -%}
  {% do shared_part_list.append(shared_part) %}
{%- endfor %}
environment =
  SLAPOS_TEST_SHARED_PART_LIST = {{ os.pathsep.join(shared_part_list) }}:$SLAPOS_TEST_SHARED_PART_LIST
message =
  Environment loaded.
  The embedded SlapOS is in $SLAPOS_TEST_WORKING_DIR
  To work on a test, execute:
     SLAPOS_TEST_DEBUG=1 {{ interpreter }} -m unittest discover -v
  from a folder containing software release test.

[publish]
recipe = slapos.cookbook:publish
environment-script = ${local-test-runner:location}
