{% set publish_dict = {} -%}
{% set part_list = [] -%}
{% set ipv6 = (ipv6 | list)[0] -%}
{% set ipv4 = (ipv4 | list)[0] -%}

[directory]
recipe = slapos.cookbook:mkdirectory
etc = ${buildout:directory}/etc
bin = ${buildout:directory}/bin
srv = ${buildout:directory}/srv
var = ${buildout:directory}/var
tmp = ${buildout:directory}/tmp
log = ${:var}/log
scripts = ${:etc}/run
services = ${:etc}/service
ssl = ${:etc}/ssl
auth = ${:tmp}/auth
workdir = ${:srv}/workdir
framebuffer = ${:srv}/framebuffer

[gen-certificate]
recipe = plone.recipe.command
command = "{{ openssl_bin }}" req -newkey rsa -batch -new -x509 -days 3650 -nodes -keyout "${:key-file}" -out "${:cert-file}"
stop-on-error = true
cert-file = ${directory:ssl}/beremiz.crt
key-file = ${directory:ssl}/beremiz.key

[novnc-instance]
recipe = slapos.cookbook:novnc
path = ${directory:bin}/novnc
ip = {{ ipv6 }}
port = 6080
vnc-ip = {{ ipv4 }}
vnc-port = ${x11vnc:port}
novnc-location = {{ novnc_location }}
websockify-path = {{ websockify_bin }}
ssl-key-path = ${gen-certificate:key-file}
ssl-cert-path = ${gen-certificate:cert-file}

[websockify-sighandler]
recipe = slapos.cookbook:signalwrapper
wrapper-path = ${directory:bin}/websockify-sighandler
wrapped-path = ${novnc-instance:path}

[websockify-sighandler-service]
recipe = slapos.cookbook:wrapper
command-line = ${websockify-sighandler:wrapper-path}
wrapper-path = ${directory:services}/websockify
hash-existing-files = ${buildout:directory}/software_release/buildout.cfg

[x11vnc]
recipe = slapos.cookbook:wrapper
port = 5901
command-line = {{ x11vnc_bin }} -forever -display ${xserver:display} -ncache 10
  -rfbport ${:port} -no6 -reopen -o ${directory:log}/x11vnc.log
  -listen {{ ipv4 }} -xkb
  -auth ${directory:auth}.Xauthority
wrapper-path = ${directory:services}/x11vnc
hash-existing-files = ${buildout:directory}/software_release/buildout.cfg
environment =
  XORG_LOCK_DIR=${directory:run}

# Generate a fonts.conf file.
[font-config]
recipe = slapos.recipe.template:jinja2
template = {{ font_config_tmplt }}
rendered = ${directory:etc}/fonts.conf
context =
  key cachedir :cache-dir
  key fonts :fonts
  key includes :includes
cache-dir =
  ${directory:etc}/.fontconfig.cache
fonts =
  {{ font_dejavu }}
  {{ font_liberation }}
includes =
  {{ font_config_loc }}/etc/fonts/conf.d

[xserver]
recipe = slapos.cookbook:wrapper
command-line = {{ xvfb_bin }} ${:display} -screen 0 1280x1024x24 -ac
  -cc 4 -nolisten tcp -auth ${directory:auth}.Xauthority
wrapper-path = ${directory:services}/xserver
hash-existing-files = ${buildout:directory}/software_release/buildout.cfg
environment =
  XORG_LOCK_DIR=${directory:run}
  FONTCONFIG_FILE=${font-config:rendered}
display = :0

[beremiz-wrapper-base]
recipe = slapos.recipe.template:jinja2
mode = 0700
template =
  inline:#!/bin/sh
  export LD_LIBRARY_PATH={{ mesa_location }}/lib
  export PATH={{ matiec_location }}/bin:{{ bison_location }}/bin:{{ flex_location }}/bin:{{ bin_directory }}:$PATH
  export XDG_DATA_DIR={{ gtk3_location }}/share
  export GSETTINGS_SCHEMA_DIR={{ gtk3_location }}/share/glib-2.0/schemas
  export FONTCONFIG_FILE=${font-config:rendered}
  export DISPLAY=${xserver:display}
  # Export pythonpath here as beremiz will use sys.executable to start internal
  # processes then they won't have eggs in sys.path.
  export PYTHONPATH=$(python -c "import sys; print ':'.join(sys.path)")
  export XORG_LOCK_DIR=${directory:run}

  exec ${:command-line}

[beremiz-x11]
<= beremiz-wrapper-base
command-line =
  {{ python_bin }} {{ beremiz_location }}/Beremiz.py
rendered = ${directory:scripts}/beremiz-x11

[beremiz-runtime]
<= beremiz-wrapper-base
ip = {{ ipv4 }}
port = 3000
auto-plc = 1
wx-taskbar = 0
twisted = 1
webservice-port = 8009
command-line =
  {{ python_bin }} {{ beremiz_location }}/Beremiz_service.py
  -p ${:port} -i ${:ip} -x ${:wx-taskbar} -a ${:auto-plc} ${directory:workdir}
rendered = ${directory:bin}/beremiz-runtime

[request-vnc-frontend]
<= slap-connection
recipe = slapos.cookbook:requestoptional
slave = true
config-https-only = True
config-type = websocket
config-url = https://[${novnc-instance:ip}]:${novnc-instance:port}
return = secure_access domain
software-url = http://git.erp5.org/gitweb/slapos.git/blob_plain/HEAD:/software/apache-frontend/software.cfg
software-type = RootSoftwareInstance
name = Beremiz VNC


[publish-connection-information]
<= monitor-publish
recipe = slapos.cookbook:publish
vnc-url = https://[${novnc-instance:ip}]:${novnc-instance:port}/vnc.html?host=[${novnc-instance:ip}]&port=${novnc-instance:port}&encrypt=1
{% for name, value in publish_dict.items() -%}
{{   name }} = {{ value }}
{% endfor %}

[buildout]
extends =
  {{ template_logrotate }}
{{ '  ' ~ template_monitor }}

parts =
  monitor-base
  x11vnc
  beremiz-x11
  beremiz-runtime
  websockify-sighandler-service
  publish-connection-information
