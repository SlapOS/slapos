[apache-php-configuration]
enable-php8 = !py!True
document-root = ${:default-document-root}/docroot
node-port = 8000
node-server = ${next-server:host}:${next-server:port}


[directory]
node = ${:srv}/node

[template-base]
recipe = slapos.recipe.template:jinja2
context =
  section parameter_dict   instance-parameter

[settings.php]
<= template-base
url = {{ template_settings_php }}
output = ${directory:www}/docroot/sites/settings.base.php

[settings.local.php]
<= template-base
url = {{ template_settings_local }}
output = ${directory:www}/docroot/sites/settings.local.php

[drush-bin]
recipe = slapos.cookbook:wrapper
command-line =
  ${php-bin:wrapper-path} ${directory:www}/vendor/drush/drush/drush
wrapper-path = ${directory:bin}/drush

[composer-bin]
recipe = slapos.cookbook:wrapper
command-line =
  ${php-bin:wrapper-path} {{ composer_location }}/bin/composer-bin
wrapper-path = ${directory:bin}/composer

[blt-bin]
recipe = slapos.cookbook:wrapper
command-line =
  ${php-bin:wrapper-path} ${directory:www}/vendor/vendor/bin/blt
wrapper-path = ${directory:bin}/blt

[env-base]
recipe = collective.recipe.template
input = inline:
  ${:env}
output = ${directory:etc}/.${:env-name}.env
mode = 600

[drupal-env]
<= env-base
env =
  export DRUPAL_PROFILE=${instance-parameter:site-profile}
  export LOCALE=${instance-parameter:site-locale}
  export DB_URL=${mariadb-urlparse:url}
  export SITE_NAME="${instance-parameter:site-name}"
  export SITE_MAIL=${instance-parameter:site-mail}
  export ACCOUNT_NAME="${instance-parameter:account-name}"
  export ACCOUNT_MAIL=${instance-parameter:account-mail}
  export ACCOUNT_PASS=${drupal-admin-passwd:passwd}
  export PATH={{ mariadb_location }}/bin:${directory:bin}:$PATH
env-name = site

[next-env]
<= env-base
env =
  export NEXT_PUBLIC_DRUPAL_BASE_URL=${request-frontend:connection-secure_access}
  export NEXT_IMAGE_DOMAIN=${request-frontend:connection-domain}
  export DRUPAL_PREVIEW_SECRET=
  export DRUPAL_REVALIDATE_SECRET=
  export DRUPAL_SITE_ID=
  export DRUPAL_FRONT_PAGE=
## Authentication (Bearer)
#export DRUPAL_CLIENT_ID=
#export DRUPAL_CLIENT_SECRET=
#
## Authentication (Basic)
#export DRUPAL_USERNAME=
#export DRUPAL_PASSWORD=
env-name = next

[build-next]
recipe = plone.recipe.command
command = if [ -z "$(ls -A ${directory:node})" ]; then
    rm -rf ${directory:node};
    cp -ax {{ nextjs_app_location }}/ ${directory:node};
  fi
  if [ -s "${directory:var}/.install-done" ]; then
#   build next.js require next and next_jsonapi installed
    export NEXT_PUBLIC_DRUPAL_BASE_URL=${request-frontend:connection-secure_access}
    export NEXT_IMAGE_DOMAIN=${request-frontend:connection-domain}
    cd ${directory:node}
    {{ nodejs_location }}/bin/npm run build
  fi
update-command = ${:command}
stop-on-error = true

# Start next.js server
[next-server]
output = ${directory:services}/next.js-server
recipe = collective.recipe.template
mode = 744
input = inline:#!/bin/sh
  . ${next-env:output}
  export PATH={{ nodejs_location }}/bin:$PATH
  cd ${directory:node}
  npx next start -p ${:port} -H ${:host}
port = 3001
# Cannot listen on Ipv6
host = ${apache-network-configuration:listening-ip4}
depends = ${build-next:recipe}

[drupal-site-install]
output = ${directory:scripts}/drupal-install
recipe = collective.recipe.template
input = inline:#!/bin/sh
  set -e

  CONFIG_FILE=${directory:www}/docroot/sites/default/settings.php
  INSTALL_FILE=${directory:var}/.install-done
  if [ -s "$INSTALL_FILE" ]; then
    echo "Drupal is installed."
    exit 0;
  fi
  . ${drupal-env:output}
  if [ ! -s "$CONFIG_FILE" ]; then
    cp ${settings.php:output} $CONFIG_FILE
  fi
  drush site:install $DRUPAL_PROFILE \
    --locale=$LOCALE \
    --db-url=$DB_URL \
    --site-name="$SITE_NAME" \
    --site-mail=$SITE_MAIL \
    --account-name="$ACCOUNT_NAME" \
    --account-mail=$ACCOUNT_MAIL \
    --account-pass=$ACCOUNT_PASS \
    --verbose --yes

  # Rebuild all caches.
  drush cache:rebuild

  # install modules Next.js and Next.js JSON:API
  drush en next next_jsonapi --verbose --yes
  # install drush configs
  drush config-import --strict=0 --partial \
    --source=${directory:www}/drush/config \
    --uri=default --root=${directory:www} \
    --verbose --yes
  drush cache:rebuild

  echo "done" > $INSTALL_FILE
  chmod 440 $INSTALL_FILE
mode = 744
depends =
  ${settings.php:recipe}
  ${settings.local.php:recipe}
  ${composer-bin:recipe}
  ${drush-bin:recipe}
  ${next-server:recipe}
  ${proxy-apache-httpd:recipe}

[drupal-admin-passwd]
recipe = slapos.cookbook:generate.password
storage-path = ${directory:etc}/.admin_pwd

[proxy-apache-httpd]
recipe = slapos.recipe.template:jinja2
url = {{ template_apache_conf }}
output = ${directory:apache.d}/apache-drupal.conf
context =
  section parameter_dict apache-php-configuration

[request-nextjs-frontend]
<= slap-connection
recipe = slapos.cookbook:requestoptional
name = Next.js Frontend
# XXX We have hardcoded SR URL here.
software-url = http://git.erp5.org/gitweb/slapos.git/blob_plain/HEAD:/software/apache-frontend/software.cfg
shared = true
config-url = https://[${apache-php-configuration:ip}]:${apache-php-configuration:node-port}
config-https-only = true
return = domain secure_access

[instance-parameter]
tmp-dir = ${directory:tmp}
trusted-host-list =
  \[${apache-php-configuration:ip}\]
  ${request-frontend:connection-domain}
  ${slap-parameter:instance.trusted-host}
site-profile = ${slap-parameter:instance.site-profile}
site-locale = ${slap-parameter:instance.site-locate}
site-name = ${slap-parameter:instance.site-name}
site-mail = ${slap-parameter:instance.site-mail}
account-name = ${slap-parameter:instance.account-name}
account-mail = ${slap-parameter:instance.account-mail}

[publish-connection-information]
admin-username = ${instance-parameter:account-name}
admin-password = ${drupal-admin-passwd:passwd}
nextjs-url = ${request-nextjs-frontend:connection-secure_access}

[slap-parameter]
instance.site-profile = standard
instance.site-locate = fr
instance.site-name = Drupal SlapOS
instance.site-mail = admin@example.com
instance.account-name = admin
instance.account-mail = admin@example.com
instance.trusted-host =
