{%- set parameter_dict = dict(default_parameter_dict, **slapparameter_dict) %}
{%- set replicate_quantity = int(parameter_dict['replicate-quantity']) %}
# Set default title and port for each replicate based on requested quantity
{%- for i in range(1, replicate_quantity + 1) %}
{%-   do parameter_dict.setdefault("title-%d" % i, "") %}
{%- endfor %}

# Standard buildout section
[buildout]
parts =
    publish-connection-information

eggs-directory = {{ buildout['eggs-directory'] }}
develop-eggs-directory = {{ buildout['develop-eggs-directory'] }}
offline = true

################################
# Sections to Request instances
################################

# Macro section sharing request parameters
[instance-request-base]
<= slap-connection
recipe = slapos.cookbook:request
# It is the same software as the current one
software-url = ${slap-connection:software-release-url}
# We want the default behaviour
software-type = default
# What parameter are neede to be retrieved
return = title ipv4

# Create request section in a loop.
{% for i in range(1, replicate_quantity + 1) %}
# Request a normal html5as instance
[instance-{{ i }}]
<= instance-request-base
# Name of the instance
name = instance-test-{{ i }}
config-title = {{ parameter_dict["title-%s" % i] }}
{%   if "sla-%s-computer-guid" % i in parameter_dict -%}
sla-computer_guid = {{ parameter_dict["sla-%s-computer-guid" % i] }}
{%   endif -%}
{% endfor %}

# Publish information to connect to the two instances
[publish-connection-information]
recipe = slapos.cookbook:publish.serialised
{% for i in range(1, replicate_quantity + 1) %}
instance-{{ i }}-title = ${instance-{{ i }}:connection-title}
instance-{{ i }}-ipv4 = ${instance-{{ i }}:connection-ipv4}
{% endfor %}
