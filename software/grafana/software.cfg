[buildout]
extends =
  ../../stack/slapos.cfg
  ../../stack/nodejs.cfg
  ../../component/make/buildout.cfg
  ../../component/golang/buildout.cfg
  ../../component/openssl/buildout.cfg
  ../../component/curl/buildout.cfg
  ../../component/dash/buildout.cfg
  ../../component/nginx/buildout.cfg
  buildout.hash.cfg

parts =
  slapos-cookbook
  instance-profile
  gowork
  influxdb-config-file
  telegraf-config-file
  grafana-config-file
  grafana-provisioning-datasources-config-file
  grafana-provisioning-dashboards-config-file
  loki-config-file
  loki-nginx-config-file

[nodejs]
<= nodejs-16.14.0


[gowork]
golang = ${golang1.19:location}
# XXX speed up development cycle by not rebuilding workspace on every software run
# XXX does not work ?
update-command =

[go_github.com_grafana_grafana]
<= go-git-package
go.importpath = github.com/grafana/grafana
repository    = https://github.com/grafana/grafana
revision      = v9.1.5-0-gdf015a9301

[go_github.com_grafana_loki]
<= go-git-package
go.importpath = github.com/grafana/loki
repository    = https://github.com/grafana/loki
revision      = v2.1.0-2075-gafd63c598
# tag helm-loki-3.1.0 which supports golang 1.19

[go_github.com_influxdata_influxdb]
<= go-git-package
go.importpath = github.com/influxdata/influxdb
repository    = https://github.com/influxdata/influxdb
revision      = v1.8.4-0-gbc8ec4384e

[go_github.com_influxdata_telegraf]
<= go-git-package
go.importpath = github.com/influxdata/telegraf
repository    = https://github.com/influxdata/telegraf
revision      = v1.24.0-0-g3c4a6516e

[go_github.com_perrinjerome_slapos_telegraf_input]
<= go-git-package
go.importpath = github.com/perrinjerome/telegraf-input-slapos
repository    = https://github.com/perrinjerome/telegraf-input-slapos
revision      = v0.0.1-0-gf8981f3

# [go_github.com_jaegertracking_jaeger]
# <= go-git-package
# go.importpath = github.com/jaegertracking/jaeger
# repository    = https://github.com/jaegertracking/jaeger
# revision      = v1.20.0-623-gcac21f82

[gowork]
# Fails with current default golang1.18
golang = ${golang1.17:location}
install =
  ${go_github.com_grafana_loki:location}:./cmd/loki
  ${go_github.com_grafana_loki:location}:./clients/cmd/promtail
  ${go_github.com_grafana_loki:location}:./cmd/logcli
  ${go_github.com_influxdata_telegraf:location}:./cmd/...
  ${go_github.com_influxdata_influxdb:location}:./cmd/...
  ${go_github.com_perrinjerome_slapos_telegraf_input:location}:./...

# disable cgo, to prevent loki/promtail from using go-systemd
environment =
  CGO_ENABLED = 0

telegraf-bin = ${:bin}/telegraf
telegraf-input-slapos-bin = ${:bin}/telegraf-input-slapos
influx-bin = ${:bin}/influx
influxd-bin = ${:bin}/influxd
grafana-bin = ${:bin}/grafana-server
grafana-homepath = ${grafana:homepath}
loki-bin = ${:bin}/loki
promtail-bin = ${:bin}/promtail


[grafana]
recipe = plone.recipe.command
command = bash -ce "
  cd ${:homepath} && \
  . ${gowork:env.sh} && \
  go install github.com/google/wire/cmd/wire@v0.5.0 && \
  wire gen -tags oss ./pkg/server ./pkg/cmd/grafana-cli/runner && \
  # Unlike the loki, grafana _needs_ CGO_ENABLED, so we override here
  export CGO_ENABLED=1 && \
  go run build.go setup && \
  go run build.go build && \
  export NODE_OPTIONS=--max_old_space_size=8192 && \
  ${yarn:location}/bin/yarn install --immutable && \
  ${yarn:location}/bin/yarn run themes:generate && \
  ${yarn:location}/bin/yarn run build && \
  ${yarn:location}/bin/yarn run plugins:build-bundled && \
  # Cleanup yarn and Cypress caches
  rm -rf ${buildout:directory}/.cache/Cypress/ && \
  rm -rf ${buildout:directory}/.cache/yarn/
  "
homepath = ${go_github.com_grafana_grafana:location}
stop-on-error = true

[download-file-base]
recipe = slapos.recipe.build:download
url = ${:_profile_base_location_}/${:filename}

[influxdb-config-file]
<= download-file-base

[telegraf-config-file]
<= download-file-base

[grafana-config-file]
<= download-file-base

[grafana-provisioning-datasources-config-file]
<= download-file-base

[grafana-provisioning-dashboards-config-file]
<= download-file-base

[loki-config-file]
<= download-file-base

[loki-nginx-config-file]
<= download-file-base

[instance-eggs]
recipe = zc.recipe.egg
eggs =
  ${python-PyYAML:egg}
  toml

[instance-profile]
recipe = slapos.recipe.template:jinja2
url = ${:_profile_base_location_}/${:filename}
output = ${buildout:directory}/instance.cfg
extensions = jinja2.ext.do
context =
  section buildout buildout
  key openssl_bin openssl-output:openssl
  key telegraf_bin gowork:telegraf-bin
  key telegraf_input_slapos_bin gowork:telegraf-input-slapos-bin
  key influxd_bin gowork:influxd-bin
  key influx_bin gowork:influx-bin
  key grafana_bin gowork:grafana-bin
  key grafana_homepath gowork:grafana-homepath
  key loki_bin gowork:loki-bin
  raw nginx_bin ${nginx:location}/sbin/nginx
  key promtail_bin gowork:promtail-bin
  key curl_bin :curl-bin
  key dash_bin :dash-bin
curl-bin = ${curl:location}/bin/curl
dash-bin = ${dash:location}/bin/dash
depends = ${instance-eggs:eggs}

[versions]
inotifyx = 0.2.2
toml = 0.10.2
