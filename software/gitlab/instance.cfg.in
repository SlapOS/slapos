# GitLab "switch-softwaretype" instance
[buildout]
parts = switch-softwaretype

# std stuff for slapos instance
eggs-directory = ${buildout:eggs-directory}
develop-eggs-directory = ${buildout:develop-eggs-directory}
offline = true


[switch-softwaretype]
recipe = slapos.cookbook:softwaretype
default = $${instance-gitlab.cfg:rendered}
# TODO -export, -import, -pull-backup


[instance-gitlab.cfg]
recipe  = slapos.recipe.template:jinja2
mode    = 0644
template= ${instance-gitlab.cfg.in:target}
rendered= $${buildout:directory}/instance-gitlab.cfg
context =
    import os os
    import pwd pwd
    import multiprocessing multiprocessing

    key eggs_directory          buildout:eggs-directory
    key develop_eggs_directory  buildout:develop-eggs-directory
    raw gitlab_repository_location          ${gitlab-repository:location}
    raw gitlab_shell_repository_location    ${gitlab-shell-repository:location}

# program binaries
    raw bash_bin                    ${bash:location}/bin/bash
    raw bzip2_location              ${bzip2:location}
    raw bundler_4gitlab             ${bundler-4gitlab:bundle}
    raw curl_bin                    ${curl:location}/bin/curl
    raw dcron_bin                   ${dcron-output:crond}
    raw git                         ${git:location}/bin/git
    raw git_location                ${git:location}
    raw gitlab_workhorse            ${gitlab-workhorse:location}/gitlab-workhorse
    raw gunzip_bin                  ${gzip:location}/bin/gunzip
    raw gzip_bin                    ${gzip:location}/bin/gzip
    raw gzip_location               ${gzip:location}
    raw logrotate_bin               ${logrotate:location}/usr/sbin/logrotate
    raw nginx_bin                   ${nginx-output:nginx}
    raw nginx_mime_types            ${nginx-output:mime}
    raw openssl_bin                 ${openssl-output:openssl}
    raw postgresql_location         ${postgresql92:location}
    raw redis_binprefix             ${redis28:location}/bin
    raw ruby_location               ${bundler-4gitlab:ruby-location}
    raw watcher_sigkill             ${watcher-sigkill:rendered}

    raw gitlab_backup_pull          $${gitlab-backup-pull:wrapper-path}

# config files
    raw database_yml_in             ${database.yml.in:target}
    raw gitconfig_in                ${gitconfig.in:target}
    raw gitlab_parameters_cfg       ${gitlab-parameters.cfg:target}
    raw gitlab_shell_config_yml_in  ${gitlab-shell-config.yml.in:target}
    raw gitlab_unicorn_startup_in   ${gitlab-unicorn-startup.in:target}
    raw gitlab_yml_in               ${gitlab.yml.in:target}
    raw macrolib_cfg_in             ${macrolib.cfg.in:target}
    raw nginx_conf_in               ${nginx.conf.in:target}
    raw nginx_gitlab_http_conf_in   ${nginx-gitlab-http.conf.in:target}
    raw rack_attack_rb_in           ${rack_attack.rb.in:target}
    raw resque_yml_in               ${resque.yml.in:target}
    raw smtp_settings_rb_in         ${smtp_settings.rb.in:target}
    raw unicorn_rb_in               ${unicorn.rb.in:target}


[gitlab-backup-directory]
recipe            = slapos.cookbook:mkdirectory
srv               = $${buildout:directory}/srv
backup            = $${:srv}/backup
backup-gitlab.git = $${:backup}/backup-gitlab.git
var               = $${buildout:directory}/var
pid               = $${:var}/pid


[gitlab-backup-pull-unwrapped]
recipe      = slapos.recipe.template:jinja2
mode        = 0770
template    = ${gitlab-backup-pull.in:target}
rendered    = $${buildout:directory}/bin/unwrapped-gitlab-backup-pull
context     =
# XXX remove /usr/bin below? this is currently useful for command `which`
    raw env_path      /usr/bin:${coreutils:location}/bin:${grep:location}/bin:${tar:location}/bin:${gzip:location}/bin:$${buildout:directory}/bin:${gopath:bin-directory}:${git:location}/bin:${xnice-repository:location}/bin
    raw backup_repo   $${gitlab-backup-directory:backup-gitlab.git}
    raw bash_bin      ${bash:location}/bin/bash

[gitlab-backup-pull]
recipe        = slapos.cookbook:wrapper
pidfile       = $${gitlab-backup-directory:pid}/gitlab-backup-pull.pid
wrapper-path  = $${buildout:directory}/bin/gitlab-backup-pull
# NOTE we perform db setup / migrations as part of unicorn startup.
# Those operations require PG and Redis to be up and running already, that's
# why we do it here. See gitlab-unicorn-startup for details.
command-line  = $${gitlab-backup-pull-unwrapped:rendered}
