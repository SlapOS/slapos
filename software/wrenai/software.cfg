[buildout]
extends =
  ../../stack/slapos.cfg
  ../../component/curl/buildout.cfg
  ../../component/rust/buildout.cfg
  ../../component/git/buildout.cfg
  ../../component/java-jdk/buildout.cfg
  ../../component/python3/buildout.cfg
  ../../component/mariadb/buildout.cfg
  ../../component/findutils/buildout.cfg

parts =
  python3
  mariadb
  wren-engine
  ibis-server
  slapos-cookbook
  template-cfg

[python3]
<= python3.11

[mariadb]
<= mariadb-11.4

# ---------------------------------------------------------
# [wren-engine] assumes the Git repo with the source code
# of the wren-engine has been cloned. Then the `command`
# reproduces what the WrenAI/wren-engine GitHub Action
# build-image.yml does to create the executable jar file
# with wren-engine.
#
[wren-engine]
<= java-jdk21
recipe = plone.recipe.command
command =
  export PATH=${git:location}/bin:$PATH
  export JAVA_HOME=${java-jdk21:location}
  mkdir -p ${buildout:directory}/wrenai
  cd ${wren-engine-src:location}/wren-core-legacy
  ./mvnw clean install -B -DskipTests -P exec-jar
  export WREN_VERSION=$(./mvnw --quiet help:evaluate -Dexpression=project.version -DforceStdout)
  cp ./wren-server/target/wren-server-$WREN_VERSION-executable.jar ${buildout:directory}/wrenai/
  cp docker/entrypoint.sh ${buildout:directory}/wrenai/wren-engine-launcher.sh
  sed -i "s/\$1/wren-server-$WREN_VERSION-executable.jar/g" ${buildout:directory}/wrenai/wren-engine-launcher.sh
stop-on-error = true

# ---------------------------------------------------------
# [ibis-server] assumes the Git repo with the source code
# of wren-engine has been cloned (ibis-server is part of it).
# TODO Integrate properly in SlapOS, see:
# https://lab.nexedi.com/nexedi/slapos/-/commit/0e3d546f#note_235022
#
[ibis-server]
recipe = plone.recipe.command
command =
  ${python3:location}/bin/python3 -m venv ${buildout:directory}/wrenai/py-venv
  export VIRTUAL_ENV=${buildout:directory}/wrenai/py-venv
  export PATH=$VIRTUAL_ENV/bin:${rustc:location}/bin:$PATH
  export MYSQLCLIENT_CFLAGS="-I ${mariadb:location}/include/mysql"
  export MYSQLCLIENT_LDFLAGS="-L ${mariadb:location}/lib -lmariadb"
  pip install "poetry==1.8.3"
  cd ${wren-engine-src:location}/ibis-server
  export ENV=prod
  poetry install --without dev
  cd ${wren-engine-src:location}/wren-core-py
  poetry install --no-root
  poetry run maturin build --release
  poetry run pip install --force-reinstall target/wheels/wren_core_py-*.whl

stop-on-error = true

# TODO: This should go away, and rather reproduce the build steps taken
#       via those several justfiles provided in the project with
#       steps in this very file.
# [just-bin]
# recipe = plone.recipe.command
# command =
#   ${curl:location}/bin/curl --proto '=https' --tlsv1.2 -sSf ${:script-url} | bash -s -- --to ${:location}
# script-url = https://just.systems/install.sh
# location = ${buildout:parts-directory}/${:_buildout_section_name_}
# stop-on-error = true

# ---------------------------------------------------------
# [wren-engine-src] clones the source code repository using git.
# TODO: See whether it would work better with
# recipe slapos.recipe.build:gitclone, check comment here:
# https://lab.nexedi.com/nexedi/slapos/-/commit/0e3d546fe0ecb76adcfbe36459200d76766fa73a#note_235006
#
[wren-engine-src]
recipe = plone.recipe.command
command =
  export PATH=$PATH:${git:location}/bin
  git clone ${:repository} ${:location} \
    --branch ${:version} \
    --depth 1
repository = https://github.com/Canner/wren-engine.git
location = ${buildout:parts-directory}/${:_buildout_section_name_}
version = 0.15.13
stop-on-error = true

# ---------------------------------------------------------
# [template-cfg] downloads instance.cfg.in (buildout profile
# used to deploy an instance).
[template-cfg]
recipe = slapos.recipe.template:jinja2
output = ${buildout:directory}/template.cfg
url = ${:_profile_base_location_}/${:filename}
filename = instance.cfg.in
md5sum = 66013abc15faaf6c4abe5ee7fde11e89
context =
  section buildout buildout
  key template_config_properties_target template_config_properties:target

# Download templates/config_properties.in
[template_config_properties]
recipe = slapos.recipe.build:download
url = ${:_profile_base_location_}/${:_update_hash_filename_}
_update_hash_filename_ = templates/config_properties.in
md5sum = abd459e4e534662b3236da397d8f9c25