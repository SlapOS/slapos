# NEO test software-release
#
# This software-release prepares environment so that neotest NEO
# testing/benchmarking can be run in a SlapOS WebRunner.
[buildout]
extends =
    ../../stack/slapos.cfg
    ../../component/golang/buildout.cfg
    ../neoppod/software-common.cfg
    ../../component/wendelin.core/buildout.cfg
    gowork.cfg

parts =
    slapos-cookbook
    gowork
    lmbench
    ioping
    ethtool

    neoppod-develop
    neoppod
    wendelin.core-dev
    eggs

    neotest-env.sh
    neotest

# TODO instance which runs this test periodically automatically and ingests results to ERP5
#   instance.cfg


# go packages to install (+ automatically their dependencies)
[gowork]
install =
    lab.nexedi.com/kirr/neo/go/...  \
    github.com/pkg/profile          \
    golang.org/x/perf/cmd/benchstat

# dev-install neo from go checkout
[neoppod-develop]
setup   = ${go_lab.nexedi.com_kirr_neo:location}

# wendelin.core: latest not yet released
[wendelin.core-repository]
revision= v0.11-4-g38fbc83ceb


# ---- tools we need for neotest ----

[lmbench-repository]
<= git-repository
repository = https://lab.nexedi.com/kirr/lmbench.git
revision = 9b108b6ff3

[ioping-repository]
<= git-repository
repository = https://lab.nexedi.com/kirr/ioping.git
revision = v1.0-9-g34c97f7636


[lmbench]
recipe  = slapos.recipe.cmmi
path    = ${lmbench-repository:location}
configure-command = :
make-binary =
# XXX without vvv BASE=${:location} does not work
location= ${buildout:parts-directory}/${:_buildout_section_name_}
make-targets= cd ${lmbench-repository:location}/lmbench3/src
              && make install BASE=${:location}
              && bash -c ". ${gowork:env.sh} && go build -o ${:location}/bin/lat_tcp_go lat_tcp.go"

[ioping]
recipe  = slapos.recipe.cmmi
path    = ${ioping-repository:location}
configure-command = :
make-binary =
# XXX without vvv PREFIX=${:location} does not work
location= ${buildout:parts-directory}/${:_buildout_section_name_}
make-targets= make install PREFIX=${:location}



[ethtool]
recipe  = slapos.recipe.cmmi
url     = https://www.kernel.org/pub/software/network/ethtool/ethtool-4.11.tar.xz
md5sum  = 16d38f4ebe23e44f96f7d8b38ed3652c



[buildout-template]
recipe  = slapos.recipe.template
url     = ${:_profile_base_location_}/${:_buildout_section_name_}.in
output  = ${buildout:directory}/${:_buildout_section_name_}

[neotest-env.sh]
<= buildout-template
md5sum  = b67d53659fa6571c5d95b077224046d1

[neotest]
<= buildout-template
output  = ${buildout:bin-directory}/${:_buildout_section_name_}
mode    = 0755
md5sum  = fb3b4109128c1db1739ef5bb6abd1d94

[instance.cfg]
<= buildout-template
md5sum  = 410e1b2d72829824b28cc0299adb472e

# eggs:
[eggs]
recipe  = zc.recipe.egg
eggs    =
# wendelin.core still requires ZODB3 but having ZODB4 or 5 installed satisfies latest ZODB3
    ZODB3
# also for wc
    numpy
# to install not only wendelin.core modules but also scripts
    wendelin.core
# for ZEO scripts (runzeo)
    ZEO



# ping eggs versions
[versions]
ZODB3 = 3.11.0
numpy = 1.13.3
zope.testing = 4.6.2

# Required by:
# ZEO==4.3.1
# ZODB==4.4.5
# zodburi==2.3.0
ZConfig = 3.2.0

# Required by:
# ZEO==4.3.1
# ZODB==4.4.5
zc.lockfile = 1.2.1
