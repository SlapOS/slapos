[buildout]
versions = versions
extends =
  ../../component/wendelin.core/buildout.cfg
  ../../component/msgpack-python/buildout.cfg
  ../../component/scipy/buildout.cfg
  ../../software/erp5/software.cfg
parts +=
  wendelin
  scipy
  msgpack-python
  ipython
  wendelin.core
  ipython-notebook
  wendelin_test_suite_runner
  wendelin_testrunner

[eggs]
initialization =
  import scipy.stats # load our own libstdc++ explicitly at the very beginning
extra-paths +=
  ${wendelin:location}
eggs +=
  astor
  ${scipy:egg}
  ${msgpack-python:egg}
  ${wendelin.core:egg}
  ${ipython:egg}
  
[wendelin_test_suite_runner]
<= test_suite_runner
# we need to override the test suite runner to add our custom libstdc++ dynamic
# library to the path
initialization =
  import os
  import sys
  import struct
  import Products
  # The 4 lines below will replace the process with another one, with the proper
  # LD_PRELOAD environment variable. This is necessary because LD_PRELOAD is only
  # taken into account when the process starts. Modifying it in runtime doesn't
  # work.
  arch = 8 * struct.calcsize("P")
  rerun = not os.getenv('LD_PRELOAD')
  if rerun: os.environ['LD_PRELOAD'] = '''${gcc-fortran:location}/lib%s/libstdc++.so''' % arch
  if rerun: os.execve(os.path.realpath(__file__), sys.argv, os.environ)
  [Products.__path__.insert(0, p) for p in reversed(os.environ.get('INSERT_PRODUCTS_PATH', '').split(':')) if p]
  import Zope2
  os.environ['SOFTWARE_HOME'] = os.path.abspath(os.path.dirname(os.path.dirname(Zope2.__file__)))
  os.environ['ZOPE_SCRIPTS'] = ''
  repository_id_list = list(reversed('''${erp5_repository_list:repository_id_list}'''.split()))
  sys.path[0:0] = ['/'.join(['''${buildout:parts-directory}''', x]) for x in repository_id_list]
  
[wendelin_testrunner]
<= testrunner
# we need to override the test suite runner to add our custom libstdc++ dynamic
# library to the path
recipe = zc.recipe.egg
initialization =
  import glob, imp, os, sys, struct
  # The 4 lines below will replace the process with another one, with the proper
  # LD_PRELOAD environment variable. This is necessary because LD_PRELOAD is only
  # taken into account when the process starts. Modifying it in runtime doesn't
  # work.
  arch = 8 * struct.calcsize("P")
  rerun = not os.getenv('LD_PRELOAD')
  if rerun: os.environ['LD_PRELOAD'] = '''${gcc-fortran:location}/lib%s/libstdc++.so''' % arch
  if rerun: os.execve(os.path.realpath(__file__), sys.argv, os.environ)
  import App # prevent Testing from importing Zope2.App instead of App
  import Products
  Products.__path__[:0] = filter(None,
    os.getenv('INSERT_PRODUCTS_PATH', '').split(os.pathsep))
  os.environ['SOFTWARE_HOME'] = os.path.abspath(imp.find_module('Zope2')[1])
  os.environ['ZOPE_SCRIPTS'] = ''
  parts_directory = '''${buildout:parts-directory}'''
  repository_id_list = \
    '''${erp5_repository_list:repository_id_list}'''.split()[::-1]
  os.environ['erp5_tests_bt5_path'] = ','.join(sum((
    [bt5_path, os.path.join(bt5_path, '*')]
    for bt5_path in (os.path.join(parts_directory, x, 'bt5')
                     for x in repository_id_list)), []))
  extra_path_list = '''${:extra-paths}'''.split()
  sys.path[:0] = sum((
    glob.glob(os.path.join(x, 'tests'))
    for x in extra_path_list), [])
  sys.path[:0] = sum((
    glob.glob(os.path.join(x, 'Products', '*', 'tests'))
    for x in extra_path_list), [])
  sys.path[:0] = sum((
    glob.glob(os.path.join(x, 'Products', '*', 'tests'))
    for x in os.getenv('INSERT_PRODUCTS_PATH', '').split(os.pathsep)), [])
  os.environ['PATH'] = '${jsl:location}/bin:%s' % os.environ['PATH']
  os.environ['CGI_PATH'] = '${w3-validator:location}/httpd/cgi-bin'
  
 
[erp5_repository_list]
repository_id_list += wendelin

[local-bt5-repository]
# we need to override it
list = ${erp5:location}/bt5 ${erp5:location}/product/ERP5/bootstrap ${wendelin:location}/bt5/

# Jupyter is by default enabled in Wendelin
[erp5-defaults]
jupyter-enable-default = true

[wendelin]
<= erp5
repository = https://lab.nexedi.com/nexedi/wendelin.git
branch = master

[versions]
msgpack-python = 0.4.8
wendelin.core = 0.7
