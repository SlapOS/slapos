[buildout]
parts =
  directory
  sdr-play-service
  monitor-base
  publish-connection-information

extends = {{ monitor_template }}

eggs-directory = {{ eggs_directory }}
develop-eggs-directory = {{ develop_eggs_directory }}
offline = true

[myslap]
# NOTE we don't query slapos.cookbook:slapconfiguration the second time because
# slapparameter_dict is potentially modified with defaults.
parameter_dict = {{ dumps(slapparameter_dict) }}

[monitor-httpd-conf-parameter]
httpd-include-file = {{ buildout_directory }}/etc/httpd-include-file.conf
port = ${monitor-instance-parameter:monitor-httpd-port}
url = https://[${monitor-instance-parameter:monitor-httpd-ipv6}]:${:port}

[monitor-instance-parameter]
monitor-httpd-port = ${monitor-address:port}

[monitor-address]
recipe = slapos.cookbook:free_port
minimum = 8035
maximum = 8055
ip = ${monitor-instance-parameter:monitor-httpd-ipv6}

[directory]
recipe = slapos.cookbook:mkdirectory
software = {{ buildout_directory }}
home = ${buildout:directory}
etc = ${:home}/etc
var = ${:home}/var
bin = ${:home}/bin
tmp = ${:home}/tmp
run = ${:var}/run
script = ${:etc}/run
service = ${:etc}/service
promise = ${:etc}/promise
log = ${:var}/log

[sdr-play-sh-wrapper]
recipe = slapos.recipe.template
output = ${directory:bin}/${:_buildout_section_name_}
info-log = ${directory:log}/sdr-info.log
start-date = ${directory:run}/sdr-start.date
max-combined-info-log-kb-size  = 500000
max-info-log-kb-size           = 100000
inline =
  #!/bin/sh
  # Amarisoft init scripts
  sudo -n {{ amarisoft['dir'] }}/rm-tmp-lte enb
  sudo -n {{ amarisoft['dir'] }}/init-sdr {{ amarisoft['binary_dir'] }};
  sudo -n {{ amarisoft['dir'] }}/init-enb
  # Print hardware and software info in info-log
  cat >> ${:info-log} << EOF



  $(date "+[%Y/%m/%d %T.%N %Z] Starting eNB...")
  PCB: $(for o in t b v s ; do
           sudo -n {{ sdr['dir'] }}/get-sdr-info -$o 2> /dev/null ; printf " "
         done)
  System info: $(uname -a)
  ./sdr_util version:
  $({{ amarisoft['sdr_dir'] }}/sdr_util version)
  
  EOF
  /bin/sh {{ amarisoft_log_rotate_sh }} \
            ${:start-date} \
            ${:info-log} \
            ${:info-log} \
            ${:max-combined-info-log-kb-size} \
            ${:max-combined-info-log-kb-size} \
            ${:max-info-log-kb-size}
  {{ amarisoft['sdr_dir'] }}/sdr_play \
    -args {{ slapparameter_dict.args }} \
    -tx_freq {{ slapparameter_dict.dl_frequency }} \
    -rate {{ slapparameter_dict.rate }} \
    -tx_gain {{ slapparameter_dict.tx_gain }} \
    -channels {{ slapparameter_dict.n_channels }} \
    -loop \
    {{ slapparameter_dict.file_list }} >> ${:info-log} 2>> ${:info-log}

[sdr-play-service]
recipe = slapos.cookbook:wrapper
command-line = ${sdr-play-sh-wrapper:output}
wrapper-path = ${directory:service}/sdr-play
mode = 0775
pidfile = ${directory:run}/sdr-play.pid
hash-files =
  ${sdr-play-sh-wrapper:output}
environment =
  LD_LIBRARY_PATH={{ openssl_location }}/lib:{{ nghttp2_location }}/lib

[monitor-instance-parameter]
{% if slapparameter_dict.get("name", None) %}
monitor-title = {{ slapparameter_dict['name'] | string }}
{% endif %}
{% if slapparameter_dict.get("monitor-password", None) %}
password = {{ slapparameter_dict['monitor-password'] | string }}
{% endif %}

[publish-connection-information]
<= monitor-publish
recipe = slapos.cookbook:publish.serialised
amarisoft.version = {{ amarisoft['version_cn']}}
amarisoft.host-id = {{ amarisoft['lteenb_host_id'] }}
amarisoft.available-versions = {{ amarisoft['version_installed'] }}
{%- if slapparameter_dict.cell1.enable_cell %}
cell1.bandwidth          = {{ slapparameter_dict.cell1.bandwidth }}
cell1.rate               = {{ slapparameter_dict.cell1.rate }}
cell1.rf_mode            = {{ out_params.cell1.rf_mode }}
cell1.rat                = {{ out_params.cell1.rat }}
cell1.test_mode          = {{ out_params.cell1.test_mode }}
cell1.subcarrier_spacing = {{ out_params.cell1.scs }}
{%- endif %}
{%- if slapparameter_dict.cell2.enable_cell %}
cell2.bandwidth          = {{ slapparameter_dict.cell2.bandwidth }}
cell2.rate               = {{ slapparameter_dict.cell2.rate }}
cell2.rf_mode            = {{ out_params.cell2.rf_mode }}
cell2.rat                = {{ out_params.cell2.rat }}
cell2.test_mode          = {{ out_params.cell2.test_mode }}
cell2.subcarrier_spacing = {{ out_params.cell2.scs }}
{%- endif %}
monitor-gadget-url = ${:monitor-base-url}/gadget/software.cfg.html

[check-sdr-busy.py]
promise = check_sdr_busy
name = ${:_buildout_section_name_}
config-testing = {{ slapparameter_dict.get("testing", False) }}
config-stats-period = {{ slapparameter_dict.stats_fetch_period }}
config-sdr = {{ amarisoft['sdr_dir'] }}
config-sdr_dev  = {{ slapparameter_dict.sdr_dev }}
config-dma_chan = 0
