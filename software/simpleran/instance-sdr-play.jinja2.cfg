[buildout]
parts =
  directory
  monitor-base
  publish-connection-information
{%- for cell in ["cell1", "cell2"] %}
{%-   if slapparameter_dict[cell].enable_cell %}
  sdr-play-service-{{ cell }}
  check-sdr-busy-{{ cell }}.py
{%-   endif %}
{%- endfor %}

extends = {{ monitor_template }}

eggs-directory = {{ eggs_directory }}
develop-eggs-directory = {{ develop_eggs_directory }}
offline = true

[myslap]
# NOTE we don't query slapos.cookbook:slapconfiguration the second time because
# slapparameter_dict is potentially modified with defaults.
parameter_dict = {{ dumps(slapparameter_dict) }}

[monitor-httpd-conf-parameter]
httpd-include-file = {{ buildout_directory }}/etc/httpd-include-file.conf
port = ${monitor-instance-parameter:monitor-httpd-port}
url = https://[${monitor-instance-parameter:monitor-httpd-ipv6}]:${:port}

[monitor-instance-parameter]
monitor-httpd-port = ${monitor-address:port}

[monitor-address]
recipe = slapos.cookbook:free_port
minimum = 8035
maximum = 8055
ip = ${monitor-instance-parameter:monitor-httpd-ipv6}

[directory]
recipe = slapos.cookbook:mkdirectory
software = {{ buildout_directory }}
home = ${buildout:directory}
etc = ${:home}/etc
var = ${:home}/var
bin = ${:home}/bin
tmp = ${:home}/tmp
run = ${:var}/run
script = ${:etc}/run
service = ${:etc}/service
promise = ${:etc}/promise
log = ${:var}/log


{%- for i in range(2) %}
{%-   set cell = 'cell' + str(i+1) %}
{%-   if slapparameter_dict[cell].enable_cell %}
[sdr-play-service-{{ cell }}]
recipe = slapos.cookbook:wrapper
mode = 0775
environment =
  LD_LIBRARY_PATH={{ openssl_location }}/lib:{{ nghttp2_location }}/lib
command-line = ${sdr-play-sh-wrapper-{{ cell }}:output}
wrapper-path = ${directory:service}/sdr-play-{{ cell }}
pidfile = ${directory:run}/sdr-play-{{ cell }}.pid
hash-files =
  ${sdr-play-sh-wrapper-{{ cell }}:output}

[sdr-play-sh-wrapper-{{ cell }}]
recipe = slapos.recipe.template
output = ${directory:bin}/${:_buildout_section_name_}
info-log = ${directory:log}/sdr-info-{{ cell }}.log
start-date = ${directory:run}/sdr-start-{{ cell }}.date
max-combined-info-log-kb-size  = 500000
max-info-log-kb-size           = 100000
inline =
  #!/bin/sh
  # Amarisoft init scripts
  sudo -n {{ amarisoft['dir'] }}/rm-tmp-lte enb
  sudo -n {{ amarisoft['dir'] }}/init-sdr {{ amarisoft['binary_dir'] }};
  sudo -n {{ amarisoft['dir'] }}/init-enb
  # Print hardware and software info in info-log
  cat >> ${:info-log} << EOF



  $(date "+[%Y/%m/%d %T.%N %Z] Starting eNB...")
  PCB: $(for o in t b v s ; do
           sudo -n {{ sdr['dir'] }}/get-sdr-info -$o 2> /dev/null ; printf " "
         done)
  System info: $(uname -a)
  ./sdr_util version:
  $({{ amarisoft['sdr_dir'] }}/sdr_util version)
  
  EOF
  /bin/sh {{ amarisoft_log_rotate_sh }} \
            ${:start-date} \
            ${:info-log} \
            ${:info-log} \
            ${:max-combined-info-log-kb-size} \
            ${:max-combined-info-log-kb-size} \
            ${:max-info-log-kb-size}
  {{ amarisoft['sdr_dir'] }}/sdr_play \
    -c {{ i }} \
    -tx_freq {{ slapparameter_dict[cell].dl_frequency }} \
    -rate {{ slapparameter_dict[cell].rate }} \
    -tx_gain {{ slapparameter_dict[cell].tx_gain }} \
    -channels 2 \
    -loop \
{%- if slapparameter_dict[cell].file == "LTE-31-10MHzBP_SR1536-FDD-ADJUSTED.bin" %}
    {{ LTE_31_10MHzBP_SR1536_FDD_ADJUSTED }} {{ LTE_31_10MHzBP_SR1536_FDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-31-10MHzBP_SR1536-TDD-ADJUSTED.bin" %}
    {{ LTE_31_10MHzBP_SR1536_TDD_ADJUSTED }} {{ LTE_31_10MHzBP_SR1536_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-31-1p4MHzBP_SR1p92-TDD-ADJUSTED.bin" %}
    {{ LTE_31_1p4MHzBP_SR1p92_TDD_ADJUSTED }} {{ LTE_31_1p4MHzBP_SR1p92_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-31-20MHzBP_SR3072-FDD-ADJUSTED.bin" %}
    {{ LTE_31_20MHzBP_SR3072_FDD_ADJUSTED }} {{ LTE_31_20MHzBP_SR3072_FDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-31-3MHzBP_SR3p84-TDD-ADJUSTED.bin" %}
    {{ LTE_31_3MHzBP_SR3p84_TDD_ADJUSTED }} {{ LTE_31_3MHzBP_SR3p84_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-31-5MHzBP_SR7p68-TDD-ADJUSTED.bin" %}
    {{ LTE_31_5MHzBP_SR7p68_TDD_ADJUSTED }} {{ LTE_31_5MHzBP_SR7p68_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-32-10MHzBP_SR1536-TDD-ADJUSTED.bin" %}
    {{ LTE_32_10MHzBP_SR1536_TDD_ADJUSTED }} {{ LTE_32_10MHzBP_SR1536_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-32-20MHzBP_SR3072-TDD-ADJUSTED.bin" %}
    {{ LTE_32_20MHzBP_SR3072_TDD_ADJUSTED }} {{ LTE_32_20MHzBP_SR3072_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-33-10MHzBP_SR1536-TDD-ADJUSTED.bin" %}
    {{ LTE_33_10MHzBP_SR1536_TDD_ADJUSTED }} {{ LTE_33_10MHzBP_SR1536_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-33-20MHzBP_SR3072-TDD-ADJUSTED.bin" %}
    {{ LTE_33_20MHzBP_SR3072_TDD_ADJUSTED }} {{ LTE_33_20MHzBP_SR3072_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "LTE-TM_31-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ LTE_TM_31_20MHz_SR30720000_TDD_ADJUSTED }} {{ LTE_TM_31_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM11-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM11_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM11_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM11-5MHz_SR7680000-FDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM11_5MHz_SR7680000_FDD_ADJUSTED }} {{ NR_FR1_TM11_5MHz_SR7680000_FDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM12-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM12_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM12_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM2-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM2_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM2_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM2a-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM2a_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM2a_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM2b-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM2b_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM2b_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM31-100MHz_SR122880000_SCS30kHz-FDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM31_100MHz_SR122880000_SCS30kHz_FDD_ADJUSTED }} {{ NR_FR1_TM31_100MHz_SR122880000_SCS30kHz_FDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM31-20MHz_SR30720000-FDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM31_20MHz_SR30720000_FDD_ADJUSTED }} {{ NR_FR1_TM31_20MHz_SR30720000_FDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM31-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM31_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM31_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM31-40MHz_SR61440000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM31_40MHz_SR61440000_TDD_ADJUSTED }} {{ NR_FR1_TM31_40MHz_SR61440000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM31-5MHz_SR7680000-FDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM31_5MHz_SR7680000_FDD_ADJUSTED }} {{ NR_FR1_TM31_5MHz_SR7680000_FDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM_31a-20MHzBP_SC30kHz_SR30p72-FDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM_31a_20MHzBP_SC30kHz_SR30p72_FDD_ADJUSTED }} {{ NR_FR1_TM_31a_20MHzBP_SC30kHz_SR30p72_FDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM31a-20MHz_SR30720000_SCS15kHz-FDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM31a_20MHz_SR30720000_SCS15kHz_FDD_ADJUSTED }} {{ NR_FR1_TM31a_20MHz_SR30720000_SCS15kHz_FDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM31a-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM31a_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM31a_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM31a-5MHz_SR7680000-FDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM31a_5MHz_SR7680000_FDD_ADJUSTED }} {{ NR_FR1_TM31a_5MHz_SR7680000_FDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM31b-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM31b_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM31b_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM32-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM32_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM32_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- elif slapparameter_dict[cell].file == "NR-FR1-TM33-20MHz_SR30720000-TDD-ADJUSTED.bin" %}
    {{ NR_FR1_TM33_20MHz_SR30720000_TDD_ADJUSTED }} {{ NR_FR1_TM33_20MHz_SR30720000_TDD_ADJUSTED }} \
{%- endif %}
    >> ${:info-log} 2>> ${:info-log}
{%-   endif %}
{%- endfor %}

[monitor-instance-parameter]
{% if slapparameter_dict.get("name", None) %}
monitor-title = {{ slapparameter_dict['name'] | string }}
{% endif %}
{% if slapparameter_dict.get("monitor-password", None) %}
password = {{ slapparameter_dict['monitor-password'] | string }}
{% endif %}

[publish-connection-information]
<= monitor-publish
recipe = slapos.cookbook:publish.serialised
amarisoft.version = {{ amarisoft['version_cn']}}
amarisoft.host-id = {{ amarisoft['lteenb_host_id'] }}
amarisoft.available-versions = {{ amarisoft['version_installed'] }}
{%- for cell in ["cell1", "cell2"] %}
{%-   if slapparameter_dict[cell].enable_cell %}
{{ cell }}.rate               = {{ out_params[cell].rate }}
{{ cell }}.bandwidth          = {{ out_params[cell].bandwidth }}
{{ cell }}.rf_mode            = {{ out_params[cell].rf_mode }}
{{ cell }}.rat                = {{ out_params[cell].rat }}
{{ cell }}.test_mode          = {{ out_params[cell].test_mode }}
{{ cell }}.subcarrier_spacing = {{ out_params[cell].scs }}
{%-   endif %}
{%- endfor %}
monitor-gadget-url = ${:monitor-base-url}/gadget/software.cfg.html

{%- for i in range(2) %}
{%-   set cell = 'cell' + str(i+1) %}
{%-   if slapparameter_dict[cell].enable_cell %}
[check-sdr-busy-{{ cell }}.py]
<= monitor-promise-base
promise = check_sdr_busy
name = ${:_buildout_section_name_}
config-testing = {{ slapparameter_dict.get("testing", False) }}
config-sdr = {{ amarisoft['sdr_dir'] }}
config-sdr_dev  = {{ i }}
config-dma_chan = 0
{%-   endif %}
{%- endfor %}
