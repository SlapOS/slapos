[buildout]
extends = ${template:output}
parts +=
  runTestSuite
  copy-test-data
  publish

[copy-test-data]
# Note: This is a hack, as such while requesting KVM it is not possible
#       to fill correctly http directory
# Note: This will only work inside of non-user related environment
#       dest shell variable will evaluate to requested partition's
#       srv/public directory
#       The "if" statement makes this script be run only in partition
#       *without* srv/public - so according to current knowledge, the
#       one which requests KVM backend for testing
recipe = plone.recipe.command
stop-on-error = true
update-command = $${:command}
command =
  if [ ! -d srv/public ] ; then
    dest=`echo ../*/srv/public`
    cp ${playbook:output} $dest/playbook.tar.gz &&
    cp ${standalone-local-playbook:location} $dest/standalone-local-playbook
  fi

[deploy-test-nxdtest-environment.sh]
recipe = slapos.recipe.template:jinja2
rendered = ${buildout:directory}/etc}/${:_buildout_section_name_}
template = inline:
  export PATH={{ buildout['bin-directory'] }}:/usr/bin/:/bin
  export SLAPOS_TEST_WORKING_DIR=${buildout:directory}/tmp}

[deploy-test-dot-nxdtest]
recipe = slapos.recipe.template:jinja2
rendered = ${buildout:directory}/var/nxdtest/.nxdtest
workdir = ${buildout:directory}/var/nxdtest
template = inline:
  TestCase(
      "deploy-test",
      ['python', '-m', 'unittest', 'discover', '-v'],
      cwd="""$${slapos.recipe.build:location}""",
      summaryf=UnitTest.summary,
  )

[runTestSuite]
env.sh = $${deploy-test-nxdtest-environment.sh:rendered}
workdir = $${deploy-test-dot-nxdtest:workdir}

[switch_softwaretype]
default = $${:deploy-test}
deploy-test = dynamic-template-deploy-test:rendered

[dynamic-template-deploy-test]
recipe = slapos.recipe.template:jinja2
template = ${:_profile_base_location_}/instance-deploy-test.cfg.jinja2
rendered = $${buildout:directory}/template-deploy-test.cfg
context =
    key develop_eggs_directory buildout:develop-eggs-directory
    key eggs_directory buildout:eggs-directory
    key slapparameter_dict slap-configuration:configuration
    raw bin_directory ${buildout:bin-directory}
    raw in_vm_test_script ${deploy-script-controller-script:location}
    raw in_vm_test_script_md5 ${deploy-script-controller-script:md5sum}
    raw waittime ${deploy-script-controller-script:waittime}
    raw tries ${deploy-script-controller-script:tries}
mode = 0644

[slapos-local-development-environment.sh]
recipe = slapos.recipe.template:jinja2
rendered = ${buildout:directory}/etc/${:_buildout_section_name_}
template = inline:
  source $${deploy-test-nxdtest-environment.sh:rendered}
  echo "Environment loaded."
  echo "To work on a test, execute:"
  echo "   $${runTestSuite:wrapper-path} -k test_name"
  echo "replacing test_name by the name of the test."
  echo

[publish]
recipe = slapos.cookbook:publish
environment-script = $${slapos-local-development-environment.sh:rendered}
