<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>categories</string> </key>
            <value>
              <tuple>
                <string>classification/collaborative/public</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>gadget_monitoring_import_export.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>gadget_monitoring_import_export_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*global window, rJS, RSVP, jsen, Rusha, $ */\n
/*jslint nomen: true, indent: 2, maxerr: 3*/\n
(function (window, rJS, RSVP, jsen, Rusha, $) {\n
  "use strict";\n
\n
  function getMonitoringSetting(gadget) {\n
    return gadget.getSetting(\'monitor_url_description\')\n
      .push(function (monitor_url_description) {\n
        return monitor_url_description;\n
      })\n
      .push(function (monitor_url_dict) {\n
        var setting_dict = {};\n
        if (!monitor_url_dict) {\n
          return setting_dict;\n
        }\n
        return gadget.getDeclaredGadget("jio_gadget")\n
          .push(function (jio_gadget) {\n
            return jio_gadget.get(\'urls\');\n
          })\n
          .push(function (monitor_base_url_dict) {\n
            var key;\n
\n
            setting_dict.opml_description = [];\n
            setting_dict.monitor_url = [];\n
            for (key in monitor_url_dict) {\n
              setting_dict.opml_description.push(monitor_url_dict[key]);\n
            }\n
            if (monitor_base_url_dict) {\n
              for (key in monitor_base_url_dict) {\n
                setting_dict.monitor_url.push(monitor_base_url_dict[key]);\n
              }\n
            }\n
            return setting_dict;\n
          });\n
      });\n
  }\n
\n
  function validateJsonConfiguration(json_value) {\n
    var validate,\n
      json_schema = {\n
        "$schema": "http://json-schema.org/draft-04/schema#",\n
        "type" : "object",\n
        "properties": {\n
          "opml_description": {\n
            "description": "list of monitor opml URL",\n
            "type": "array",\n
            "items": {\n
              "type": "object",\n
              "properties": {\n
                "href": {\n
                  "description": "OPML URL",\n
                  "type": "string"\n
                },\n
                "title": {\n
                  "description": "OPML title",\n
                  "type": "string"\n
                }\n
              },\n
              "additionalProperties": false\n
            }\n
          },\n
          "monitor_url": {\n
            "description": "list of registered monitor instance URL",\n
            "type": "array",\n
            "required": [\'hash\', "url", "parent_url"],\n
            "items": {\n
              "type": "object",\n
              "properties": {\n
                "hash": {\n
                  "description": "hash string",\n
                  "type": "string"\n
                },\n
                "url": {\n
                  "description": "url of monitor instance",\n
                  "type": "string"\n
                },\n
                "parent_url": {\n
                  "description": "URL to parent instance",\n
                  "type": "string"\n
                }\n
              },\n
              "additionalProperties": false\n
            }\n
          }\n
        },\n
  \n
        "additionalProperties": false\n
      };\n
\n
    return new RSVP.Queue()\n
      .push(function () {\n
        validate = jsen(json_schema);\n
        return validate(json_value);\n
      });\n
  }\n
\n
  var gadget_klass = rJS(window),\n
    hashCode = new Rusha().digestFromString;\n
\n
  gadget_klass\n
    .ready(function (g) {\n
      g.props = {};\n
      return g.getElement()\n
        .push(function (element) {\n
          g.props.element = element;\n
          g.props.deferred = RSVP.defer();\n
        });\n
    })\n
    .ready(function (g) {\n
      return g.getDeclaredGadget("login_gadget")\n
        .push(function (login_gadget) {\n
          g.props.login_gadget = login_gadget;\n
        });\n
    })\n
    .ready(function (g) {\n
      return g.getDeclaredGadget("jio_gadget")\n
        .push(function (jio_gadget) {\n
          g.props.jio_gadget = jio_gadget;\n
          return jio_gadget.createJio({\n
            type: "indexeddb",\n
            database: "setting"\n
          });\n
        });\n
    })\n
    .declareAcquiredMethod("getSetting", "getSetting")\n
    .declareAcquiredMethod("setSetting", "setSetting")\n
    .declareAcquiredMethod("redirect", "redirect")\n
    .declareMethod("render", function (options) {\n
      var gadget = this,\n
        url_description_dict;\n
      return getMonitoringSetting(gadget)\n
        .push(function (setting_dict) {\n
          gadget.props.element.querySelector(\'textarea[name="settings-data"]\')\n
            .innerHTML = JSON.stringify(setting_dict);\n
          return gadget.props.deferred.resolve();\n
        });\n
    })\n
\n
\n
    .declareService(function () {\n
      var gadget = this;\n
\n
      return new RSVP.Queue()\n
        .push(function () {\n
          return gadget.props.deferred.promise;\n
        })\n
        .push(function () {\n
          return $(gadget.props.element.querySelector("a[href=\'#config-export\']")).trigger(\'click\');\n
        })\n
        .push(function () {\n
          var promise_list = [];\n
          promise_list.push(loopEventListener(\n
            gadget.props.element.querySelector(\'.btn-reload\'),\n
            \'click\',\n
            true,\n
            function () {\n
              return new RSVP.Queue()\n
                .push(function () {\n
                  return getMonitoringSetting(gadget);\n
                })\n
                .push(function (setting_dict) {\n
                  $(gadget.props.element.querySelector(\'textarea[name="settings-data"]\'))\n
                    .val(JSON.stringify(setting_dict));\n
                });\n
            }\n
          ));\n
          \n
          promise_list.push(loopEventListener(\n
            gadget.props.element.querySelector(\'.btn-save\'),\n
            \'click\',\n
            true,\n
            function () {\n
              var json_string = $(gadget.props.element.querySelector(\'textarea[name="settings-data-input"]\')).val(),\n
                configuration_dict,\n
                monitor_url_dict = {},\n
                monitor_opml_url_dict = {},\n
                i;\n
              gadget.props.element.querySelector(\'.ui-text-error\')\n
                .innerHTML = "";\n
\n
              try {\n
                configuration_dict = JSON.parse(json_string);\n
              } catch (e) {\n
                gadget.props.element.querySelector(\'.ui-text-error\')\n
                  .innerHTML = \'Error: Invalid json content!\';\n
                return;\n
              }\n
\n
              return validateJsonConfiguration(configuration_dict)\n
                .push(function (validate_result) {\n
                  if (validate_result) {\n
                    for (i = 0; i < configuration_dict.opml_description.length; i += 1) {\n
                      monitor_opml_url_dict[\n
                        hashCode(configuration_dict.opml_description[i].href)\n
                      ] = configuration_dict.opml_description[i];\n
                    }\n
                    for (i = 0; i < configuration_dict.monitor_url.length; i += 1) {\n
                      monitor_url_dict[\n
                        hashCode(configuration_dict.monitor_url[i].url)\n
                      ] = configuration_dict.monitor_url[i];\n
                    }\n
                    return gadget.props.login_gadget.setUrlDict(monitor_url_dict)\n
                      .push(function () {\n
                        return gadget.setSetting(\'monitor_url_description\', monitor_opml_url_dict);\n
                      })\n
                      .push(function () {\n
                        return gadget.redirect({\n
                            page: \'settings_configurator\',\n
                            tab: \'manage\'\n
                          });\n
                      });\n
                  } else {\n
                    gadget.props.element.querySelector(\'.ui-text-error\')\n
                      .innerHTML = \'Error: Content is not a valid Monitoring Json configuration!\';\n
                  }\n
                });\n
            }\n
          ));\n
        });\n
    });\n
\n
}(window, rJS, RSVP, jsen, Rusha, $));

]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Monitoring Import Export Gadget JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>publish</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1459338522.11</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
            <item>
                <key> <string>validation_state</string> </key>
                <value> <string>published</string> </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>edit</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>950.14162.28880.43042</string> </value>
            </item>
            <item>
                <key> <string>state</string> </key>
                <value> <string>current</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1459502615.34</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>detect_converted_file</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>external_processing_state</string> </key>
                <value> <string>converted</string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>0.0.0.0</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1459338433.74</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
</ZopeData>
