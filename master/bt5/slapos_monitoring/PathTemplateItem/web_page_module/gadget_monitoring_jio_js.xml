<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>categories</string> </key>
            <value>
              <tuple>
                <string>classification/collaborative/team</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>gadget_monitoring_jio.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>gadget_monitoring_jio_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*global window, rJS, jIO, FormData, XMLHttpRequestProgressEvent */\n
/*jslint indent: 2, maxerr: 3 */\n
(function (window, rJS, jIO) {\n
  "use strict";\n
\n
  function getOPMLUrlList(url, query) {\n
    var jio_options = {\n
        type: "query",\n
        sub_storage: {\n
          type: "feed",\n
          feed_type: \'opml\',\n
          url: url\n
        }\n
      },\n
      jio_storage = jIO.createJIO(jio_options);\n
    if (query === undefined) {\n
      query = {};\n
    }\n
    return jio_storage.allDocs(query)\n
      .push(function (url_list) {\n
        var i,\n
        feed_url = [];\n
        for (i = 0; i < url_list.data.total_rows; i += 1) {\n
          if (url_list.data.rows[i].value.htmlurl) { // || url_list.data.rows[i].value.xmlUrl\n
            feed_url.push(url_list.data.rows[i].value.htmlurl); // || url_list.data.rows[i].value.xmlUrl\n
          }\n
        }\n
        return feed_url;\n
      }, function(error) {\n
        console.log(error);\n
      });\n
  }\n
\n
  function getMonitorUrlList(url, query) {\n
    var jio_options = {\n
        type: "query",\n
        sub_storage: {\n
          type: "feed",\n
          feed_type: \'opml\',\n
          url: url\n
        }\n
      },\n
      jio_storage = jIO.createJIO(jio_options);\n
    if (query === undefined) {\n
      query = {};\n
    }\n
    return jio_storage.allDocs(query)\n
      .push(function (url_list) {\n
        var i,\n
        monitor_url = [];\n
        for (i = 0; i < url_list.data.total_rows; i += 1) {\n
          if (url_list.data.rows[i].value.url) {\n
            monitor_url.push(url_list.data.rows[i].value.url);\n
          }\n
        }\n
        return monitor_url;\n
      }, function(error) {\n
        console.log(error);\n
      });\n
  }\n
\n
  function concatArrayOfArray(arrayList) {\n
    var all_list = [],\n
      i;\n
    for (i = 0; i < arrayList.length; i += 1) {\n
      all_list = all_list.concat(arrayList[i]);\n
    }\n
    return all_list;\n
  }\n
\n
  rJS(window)\n
\n
    .ready(function (gadget) {\n
      // Initialize the gadget local parameters\n
      gadget.state_parameter_dict = {};\n
    })\n
\n
    .declareAcquiredMethod("redirect", "redirect")\n
    .declareAcquiredMethod("getSetting", "getSetting")\n
    .declareAcquiredMethod("setSetting", "setSetting")\n
\n
    .declareMethod(\'createJio\', function (jio_options) {\n
      var gadget = this;\n
      if (jio_options === undefined) {\n
        jio_options = {\n
          type: "query",\n
          sub_storage: {\n
            type: "uuid",\n
            sub_storage: {\n
              type: "indexeddb",\n
              database: "monitoringdb"\n
            }\n
          }\n
        };\n
      }\n
      this.state_parameter_dict.jio_storage = jIO.createJIO(jio_options);\n
      return this.getSetting("jio_storage_name")\n
        .push(function (jio_storage_name) {\n
          gadget.state_parameter_dict.jio_storage_name = jio_storage_name;\n
        });\n
    })\n
    .declareMethod(\'createJioFromRssFeed\', function (feed_url, basic_login) {\n
      var gadget = this,\n
        jio_options = {\n
          type: "query",\n
          sub_storage: {\n
            type: "feed",\n
            feed_type: \'rss\',\n
            url: opml_url\n
          }\n
        };\n
      if (basic_login !== undefined) {\n
        jio_options.sub_storage.basic_login = basic_login;\n
      }\n
      this.state_parameter_dict.jio_storage = jIO.createJIO(jio_options);\n
      return jio_options;\n
    })\n
    .declareMethod(\'getUrlListFromOPML\', function (opml_url, query) {\n
      return getOPMLUrlList(opml_url, query);\n
    })\n
    .declareMethod(\'getUrlDescriptionFromOPML\', function (opml_url, query) {\n
      var jio_options = {\n
          type: "query",\n
          sub_storage: {\n
            type: "feed",\n
            feed_type: \'opml\',\n
            url: opml_url\n
          }\n
        },\n
        jio_storage = jIO.createJIO(jio_options);\n
      if (query === undefined) {\n
        query = {};\n
      }\n
      return jio_storage.allDocs(query)\n
        .push(function (url_list) {\n
          var i,\n
          feed_url;\n
          for (i = 0; i < url_list.data.total_rows; i += 1) {\n
            if (url_list.data.rows[i].value.htmlurl || url_list.data.rows[i].value.xmlUrl) {\n
              feed_url.push({\n
                htmlurl: url_list.data.rows[i].value.htmlurl,\n
                xmlUrl: url_list.data.rows[i].value.xmlUrl,\n
                title: url_list.data.rows[i].value.title,\n
                opml_title: url_list.data.rows[i].value.opml_title,\n
                type: url_list.data.rows[i].value.type,\n
                create_date: url_list.data.rows[i].value.create_date,\n
                modified_date: url_list.data.rows[i].value.modified_date,\n
                version: url_list.data.rows[i].value.version,\n
                text: url_list.data.rows[i].value.text,\n
              });\n
            }\n
          }\n
          return feed_url;\n
        });\n
    })\n
    .declareMethod(\'getUrlListFromFullOPML\', function (query) {\n
      return this.getSetting(\'monitor_url_description\')\n
        .push(function (url_description_dict) {\n
          var promise_list = [],\n
            key;\n
          for (key in url_description_dict) {\n
            promise_list.push(getOPMLUrlList(url_description_dict[key].href, query));\n
          }\n
          return RSVP.all(promise_list);\n
        })\n
        .push(function(url_list) {\n
          return concatArrayOfArray(url_list);\n
        });\n
    })\n
    .declareMethod(\'getMonitorUrlList\', function (query) {\n
      return this.getSetting(\'monitor_url_description\')\n
        .push(function (url_description_dict) {\n
          var promise_list = [],\n
            key;\n
          for (key in url_description_dict) {\n
            promise_list.push(getMonitorUrlList(url_description_dict[key].href, query));\n
          }\n
          return RSVP.all(promise_list);\n
        })\n
        .push(function(url_list) {\n
          return concatArrayOfArray(url_list);\n
        });\n
    })\n
    .declareMethod(\'getMonitorUrlListFromOpml\', function (url, query) {\n
      return getMonitorUrlList(url, query);\n
    })\n
    .declareMethod(\'allDocs\', function () {\n
      var storage = this.state_parameter_dict.jio_storage;\n
      return storage.allDocs.apply(storage, arguments)\n
        .push(function (doc) {\n
          return doc;\n
        }, function (error) {\n
          console.log(error);\n
          // XXX - We must do something here (try to get document from local ? or raise)\n
          return undefined;\n
        });\n
    })\n
    .declareMethod(\'allAttachments\', function () {\n
      var storage = this.state_parameter_dict.jio_storage;\n
      return storage.allAttachments.apply(storage, arguments);\n
    })\n
    .declareMethod(\'get\', function () {\n
      var storage = this.state_parameter_dict.jio_storage;\n
      return storage.get.apply(storage, arguments);\n
    })\n
    .declareMethod(\'put\', function () {\n
      var storage = this.state_parameter_dict.jio_storage;\n
      return storage.put.apply(storage, arguments);\n
    })\n
    .declareMethod(\'post\', function () {\n
      var storage = this.state_parameter_dict.jio_storage;\n
      return storage.post.apply(storage, arguments);\n
    })\n
    .declareMethod(\'remove\', function () {\n
      var storage = this.state_parameter_dict.jio_storage;\n
      return storage.remove.apply(storage, arguments);\n
    })\n
    .declareMethod(\'getAttachment\', function () {\n
      var storage = this.state_parameter_dict.jio_storage;\n
      return storage.getAttachment.apply(storage, arguments);\n
    })\n
    .declareMethod(\'putAttachment\', function () {\n
      var storage = this.state_parameter_dict.jio_storage;\n
      return storage.putAttachment.apply(storage, arguments);\n
    })\n
    .declareMethod(\'removeAttachment\', function () {\n
      var storage = this.state_parameter_dict.jio_storage;\n
      return storage.removeAttachment.apply(storage, arguments);\n
    })\n
    .declareMethod(\'repair\', function () {\n
      var gadget = this,\n
        storage = gadget.state_parameter_dict.jio_storage;\n
      return storage.repair.apply(storage, arguments)\n
        .push(undefined, function (error) {\n
          if (error instanceof XMLHttpRequestProgressEvent &&\n
              error.currentTarget.status === 401 &&\n
              gadget.state_parameter_dict.jio_storage_name === "ERP5") {\n
            return {\n
              redirect: {\n
                page: "login"\n
              }\n
            };\n
          }\n
          throw error;\n
        });\n
    });\n
\n
}(window, rJS, jIO));

]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Monitoring Jio Gadget JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>publish</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1452874954.73</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
            <item>
                <key> <string>validation_state</string> </key>
                <value> <string>published</string> </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>edit</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>949.59884.43592.12680</string> </value>
            </item>
            <item>
                <key> <string>state</string> </key>
                <value> <string>current</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1458313807.96</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>detect_converted_file</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>external_processing_state</string> </key>
                <value> <string>converted</string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>0.0.0.0</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1452874888.03</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
</ZopeData>
