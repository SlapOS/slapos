<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>categories</string> </key>
            <value>
              <tuple>
                <string>classification/collaborative/public</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>gadget_monitoring_process_view.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>gadget_monitoring_process_view_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*global window, rJS, RSVP, URI, location, $,\n
    loopEventListener, btoa */\n
/*jslint nomen: true, indent: 2, maxerr: 3*/\n
(function (window, rJS, $, RSVP) {\n
  "use strict";\n
\n
  var gadget_klass = rJS(window),\n
    templater = gadget_klass.__template_element,\n
    process_list_widget = Handlebars.compile(\n
      templater.getElementById("monitor-process-widget-template").innerHTML\n
    ),\n
    infobox_widget_template = Handlebars.compile(\n
      templater.getElementById("infobox-widget-template").innerHTML\n
    );\n
\n
  gadget_klass\n
    .ready(function (gadget) {\n
      return gadget.getElement()\n
        .push(function (element) {\n
          gadget.property_dict = {\n
            render_deferred: RSVP.defer(),\n
            process_state: "monitor_process_resource.status",\n
            monitor_process_state: "monitor_resource.status",\n
            element: element\n
          };\n
        });\n
    })\n
    .ready(function (gadget) {\n
      return gadget.getDeclaredGadget("jio_gadget")\n
        .push(function (jio_gadget) {\n
          gadget.property_dict.jio_gadget = jio_gadget;\n
        });\n
    })\n
    .ready(function (gadget) {\n
      return gadget.getDeclaredGadget("login_gadget")\n
        .push(function (login_gadget) {\n
          gadget.property_dict.login_gadget = login_gadget;\n
        });\n
    })\n
    .declareMethod(\'render\', function (options) {\n
      var gadget = this,\n
        jio_options = {\n
          type: "query",\n
          sub_storage: {\n
            type: "drivetojiomapping",\n
            sub_storage: {\n
              type: "dav",\n
              url: options.jio_for + \'data/\'\n
            }\n
          }\n
        };\n
\n
      return gadget.property_dict.login_gadget.loginRedirect(options.jio_for, options, options.title, options.root)\n
        .push(function (cred) {\n
          jio_options.sub_storage.sub_storage.basic_login = cred.hash;\n
          gadget.property_dict.jio_gadget.createJio(jio_options);\n
          return gadget.updateHeader({\n
            title: options.title + \' [\' + options.root + \'] Processes status\'\n
          });\n
        })\n
        .push(function () {\n
          return gadget.property_dict.jio_gadget.get(gadget.property_dict.process_state);\n
        })\n
        .push(function (process_list) {\n
          var row_list = [],\n
            column_list = [],\n
            process_content,\n
            i;\n
          column_list = [\n
            {title: "name"},\n
            {title: "pid"},\n
            {title: "user"},\n
            {title: "create date"},\n
            {title: "CPU %"},\n
            {title: "threads"},\n
            {title: "Memory (Mo)"},\n
            {title: "Memory %"}];\n
          if(process_list) {\n
            for (i = 0; i < process_list.length; i += 1) {\n
              row_list.push({\n
                message: (process_list[i].command || []).join(\' \'),\n
                cell_list: [\n
                  {\n
                    value: process_list[i].name || \'-\',\n
                    href: \'\',\n
                    "class": \'\'\n
                  },\n
                  {\n
                    value: process_list[i].pid,\n
                    href: \'\',\n
                    "class": \'\'\n
                  },\n
                  {\n
                    value: process_list[i].user || \'-\',\n
                    href: \'\',\n
                    "class": \'\'\n
                  },\n
                  {\n
                    value: process_list[i].date || \'-\',\n
                    href: \'\',\n
                    "class": \'\'\n
                  },\n
                  {\n
                    value: process_list[i].cpu_percent,\n
                    href: \'\',\n
                    "class": \'\'\n
                  },\n
                  {\n
                    value: process_list[i].cpu_num_threads,\n
                    href: \'\',\n
                    "class": \'\'\n
                  },\n
                  {\n
                    value: process_list[i].memory_rss,\n
                    href: \'\',\n
                    "class": \'\'\n
                  },\n
                  {\n
                    value: process_list[i].memory_percent,\n
                    href: \'\',\n
                    "class": \'\'\n
                  }\n
                ]\n
              });\n
            }\n
          }\n
          process_content = process_list_widget({\n
            column_list: column_list,\n
            row_list: row_list\n
          });\n
          gadget.property_dict.element.querySelector(".process-all")\n
            .innerHTML = process_content;\n
        })\n
        .push(function () {\n
          return gadget.property_dict.jio_gadget.get(gadget.property_dict.monitor_process_state);\n
        })\n
        .push(function (monitor_state) {\n
          var monitor_resource_list = [],\n
            resource_state_content;\n
          if (monitor_state) {\n
            monitor_resource_list = [\n
              {\n
                title: "CPU Used",\n
                icon_name: "bolt",\n
                value: monitor_state.cpu_percent + " %"\n
              },\n
              {\n
                title: "CPU Used Time",\n
                icon_name: "clock-o",\n
                value: monitor_state.cpu_time + " min"\n
              },\n
              {\n
                title: "CPU Num Threads",\n
                icon_name: "dashboard",\n
                value: monitor_state.cpu_num_threads\n
              },\n
              {\n
                title: "Used Memory",\n
                icon_name: "ticket",\n
                value: monitor_state.memory_rss + " Mo"\n
              },\n
              {\n
                title: "Memory Used",\n
                icon_name: "pie-chart",\n
                value: monitor_state.memory_percent + " %"\n
              },\n
              {\n
                title: "Disk Used",\n
                icon_name: "hdd-o",\n
                value: monitor_state.disk_used + " Mo"\n
              }\n
            ];\n
          }\n
          resource_state_content = infobox_widget_template({\n
            resource_list: monitor_resource_list\n
          });\n
          gadget.property_dict.element.querySelector(".infobox-container")\n
            .innerHTML = resource_state_content;\n
          return gadget.property_dict.render_deferred.resolve();\n
        });\n
    })\n
    .declareAcquiredMethod("getSetting", "getSetting")\n
    .declareAcquiredMethod("updateHeader", "updateHeader")\n
\n
    /////////////////////////////////////////////////////////////////\n
    // declared service\n
    /////////////////////////////////////////////////////////////////\n
    .declareService(function () {\n
      var gadget = this;\n
\n
      function updateProcessTimer() {\n
        if (gadget.property_dict.loading && gadget.property_dict.timer) {\n
          clearInterval(gadget.property_dict.timer);\n
        }\n
        gadget.property_dict.timer = setInterval(function(){\n
          return gadget.property_dict.jio_gadget.get(gadget.property_dict.process_state)\n
            .push(function (process_list) {\n
              var row_list = [],\n
                column_list = [],\n
                process_content,\n
                i;\n
              column_list = [\n
                {title: "name"},\n
                {title: "pid"},\n
                {title: "user"},\n
                {title: "create date"},\n
                {title: "CPU %"},\n
                {title: "threads"},\n
                {title: "Memory (Mo)"},\n
                {title: "Memory %"}];\n
              if(process_list) {\n
                for (i = 0; i < process_list.length; i += 1) {\n
                  row_list.push({\n
                    message: (process_list[i].command || []).join(\' \'),\n
                    cell_list: [\n
                      {\n
                        value: process_list[i].name || \'-\',\n
                        href: \'\',\n
                        "class": \'\'\n
                      },\n
                      {\n
                        value: process_list[i].pid,\n
                        href: \'\',\n
                        "class": \'\'\n
                      },\n
                      {\n
                        value: process_list[i].user || \'-\',\n
                        href: \'\',\n
                        "class": \'\'\n
                      },\n
                      {\n
                        value: process_list[i].date || \'-\',\n
                        href: \'\',\n
                        "class": \'\'\n
                      },\n
                      {\n
                        value: process_list[i].cpu_percent,\n
                        href: \'\',\n
                        "class": \'\'\n
                      },\n
                      {\n
                        value: process_list[i].cpu_num_threads,\n
                        href: \'\',\n
                        "class": \'\'\n
                      },\n
                      {\n
                        value: process_list[i].memory_rss,\n
                        href: \'\',\n
                        "class": \'\'\n
                      },\n
                      {\n
                        value: process_list[i].memory_percent,\n
                        href: \'\',\n
                        "class": \'\'\n
                      }\n
                    ]\n
                  });\n
                }\n
              }\n
              process_content = process_list_widget({\n
                column_list: column_list,\n
                row_list: row_list\n
              });\n
              gadget.property_dict.element.querySelector(".process-all")\n
                .innerHTML = process_content;\n
              return \'\';\n
            })\n
            .push(function () {\n
              return gadget.property_dict.jio_gadget.get(gadget.property_dict.monitor_process_state);\n
            })\n
            .push(function (monitor_state) {\n
              var monitor_resource_list = [],\n
                resource_state_content;\n
              if (monitor_state) {\n
                monitor_resource_list = [\n
                  {\n
                    title: "CPU Used",\n
                    icon_name: "bolt",\n
                    value: monitor_state.cpu_percent + " %"\n
                  },\n
                  {\n
                    title: "CPU Used Time",\n
                    icon_name: "clock-o",\n
                    value: monitor_state.cpu_time + " min"\n
                  },\n
                  {\n
                    title: "CPU Num Threads",\n
                    icon_name: "dashboard",\n
                    value: monitor_state.cpu_num_threads\n
                  },\n
                  {\n
                    title: "Used Memory",\n
                    icon_name: "ticket",\n
                    value: monitor_state.memory_rss + " Mo"\n
                  },\n
                  {\n
                    title: "Memory Used",\n
                    icon_name: "pie-chart",\n
                    value: monitor_state.memory_percent + " %"\n
                  },\n
                  {\n
                    title: "Disk Used",\n
                    icon_name: "hdd-o",\n
                    value: monitor_state.disk_used + " Mo"\n
                  }\n
                ];\n
              }\n
              resource_state_content = infobox_widget_template({\n
                resource_list: monitor_resource_list\n
              });\n
              gadget.property_dict.element.querySelector(".infobox-container")\n
                .innerHTML = resource_state_content;\n
            });\n
          },\n
          65000);\n
      }\n
      return new RSVP.Queue()\n
        .push(function () {\n
          return gadget.property_dict.render_deferred.promise;\n
        })\n
        .push(function () {\n
          return updateProcessTimer();\n
        });\n
    });\n
\n
}(window, rJS, $, RSVP));

]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Gadget Monitoring Process JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>publish</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1454520181.06</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
            <item>
                <key> <string>validation_state</string> </key>
                <value> <string>published</string> </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>edit</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>949.59799.36045.13670</string> </value>
            </item>
            <item>
                <key> <string>state</string> </key>
                <value> <string>current</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1458308638.96</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>detect_converted_file</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>external_processing_state</string> </key>
                <value> <string>converted</string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>0.0.0.0</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1454518838.17</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
</ZopeData>
