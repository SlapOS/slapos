<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>categories</string> </key>
            <value>
              <tuple>
                <string>classification/collaborative/team</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>gadget_monitoring_chart.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>gadget_monitoring_chart_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*global window, rJS, Chart, RSVP */\n
/*jslint nomen: true, indent: 2, maxerr: 3*/\n
(function (window, rJS, RSVP, Chart) {\n
  "use strict";\n
\n
  rJS(window)\n
\n
    .ready(function (gadget) {\n
      return gadget.getElement()\n
        .push(function (element) {\n
          gadget.property_dict = {\n
            element: element,\n
            render_deferred: RSVP.defer()\n
          };\n
        });\n
    })\n
    .ready(function (gadget) {\n
      // Initialize the gadget local parameters\n
      gadget.property_dict.ctx = gadget.property_dict.element.querySelector(\'canvas\').getContext("2d");\n
      Chart.defaults.global = {\n
        // Boolean - Whether to animate the chart\n
        animation: true,\n
    \n
        // Number - Number of animation steps\n
        animationSteps: 60,\n
    \n
        // String - Animation easing effect\n
        // Possible effects are:\n
        // [easeInOutQuart, linear, easeOutBounce, easeInBack, easeInOutQuad,\n
        //  easeOutQuart, easeOutQuad, easeInOutBounce, easeOutSine, easeInOutCubic,\n
        //  easeInExpo, easeInOutBack, easeInCirc, easeInOutElastic, easeOutBack,\n
        //  easeInQuad, easeInOutExpo, easeInQuart, easeOutQuint, easeInOutCirc,\n
        //  easeInSine, easeOutExpo, easeOutCirc, easeOutCubic, easeInQuint,\n
        //  easeInElastic, easeInOutSine, easeInOutQuint, easeInBounce,\n
        //  easeOutElastic, easeInCubic]\n
        animationEasing: "easeOutQuart",\n
    \n
        // Boolean - If we should show the scale at all\n
        showScale: true,\n
    \n
        // Boolean - If we want to override with a hard coded scale\n
        scaleOverride: false,\n
    \n
        // ** Required if scaleOverride is true **\n
        // Number - The number of steps in a hard coded scale\n
        scaleSteps: null,\n
        // Number - The value jump in the hard coded scale\n
        scaleStepWidth: null,\n
        // Number - The scale starting value\n
        scaleStartValue: null,\n
    \n
        // String - Colour of the scale line\n
        scaleLineColor: "rgba(0,0,0,.1)",\n
    \n
        // Number - Pixel width of the scale line\n
        scaleLineWidth: 1,\n
    \n
        // Boolean - Whether to show labels on the scale\n
        scaleShowLabels: true,\n
    \n
        // Interpolated JS string - can access value\n
        scaleLabel: "<%=value%>",\n
    \n
        // Boolean - Whether the scale should stick to integers, not floats even if drawing space is there\n
        scaleIntegersOnly: true,\n
    \n
        // Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n
        scaleBeginAtZero: false,\n
    \n
        // String - Scale label font declaration for the scale label\n
        scaleFontFamily: "\'Helvetica Neue\', \'Helvetica\', \'Arial\', sans-serif",\n
    \n
        // Number - Scale label font size in pixels\n
        scaleFontSize: 12,\n
    \n
        // String - Scale label font weight style\n
        scaleFontStyle: "normal",\n
    \n
        // String - Scale label font colour\n
        scaleFontColor: "#666",\n
    \n
        // Boolean - whether or not the chart should be responsive and resize when the browser does.\n
        responsive: true,\n
    \n
        // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n
        maintainAspectRatio: true,\n
    \n
        // Boolean - Determines whether to draw tooltips on the canvas or not\n
        showTooltips: true,\n
    \n
        // Function - Determines whether to execute the customTooltips function instead of drawing the built in tooltips (See [Advanced - External Tooltips](#advanced-usage-custom-tooltips))\n
        customTooltips: false,\n
    \n
        // Array - Array of string names to attach tooltip events\n
        tooltipEvents: ["mousemove", "touchstart", "touchmove"],\n
    \n
        // String - Tooltip background colour\n
        tooltipFillColor: "rgba(0,0,0,0.8)",\n
    \n
        // String - Tooltip label font declaration for the scale label\n
        tooltipFontFamily: "\'Helvetica Neue\', \'Helvetica\', \'Arial\', sans-serif",\n
    \n
        // Number - Tooltip label font size in pixels\n
        tooltipFontSize: 14,\n
    \n
        // String - Tooltip font weight style\n
        tooltipFontStyle: "normal",\n
    \n
        // String - Tooltip label font colour\n
        tooltipFontColor: "#fff",\n
    \n
        // String - Tooltip title font declaration for the scale label\n
        tooltipTitleFontFamily: "\'Helvetica Neue\', \'Helvetica\', \'Arial\', sans-serif",\n
    \n
        // Number - Tooltip title font size in pixels\n
        tooltipTitleFontSize: 14,\n
    \n
        // String - Tooltip title font weight style\n
        tooltipTitleFontStyle: "bold",\n
    \n
        // String - Tooltip title font colour\n
        tooltipTitleFontColor: "#fff",\n
    \n
        // Number - pixel width of padding around tooltip text\n
        tooltipYPadding: 6,\n
    \n
        // Number - pixel width of padding around tooltip text\n
        tooltipXPadding: 6,\n
    \n
        // Number - Size of the caret on the tooltip\n
        tooltipCaretSize: 8,\n
    \n
        // Number - Pixel radius of the tooltip border\n
        tooltipCornerRadius: 6,\n
    \n
        // Number - Pixel offset from point x to tooltip edge\n
        tooltipXOffset: 10,\n
    \n
        // String - Template string for single tooltips\n
        tooltipTemplate: "<%if (label){%><%=label%>: <%}%><%= value %>",\n
    \n
        // String - Template string for multiple tooltips\n
        multiTooltipTemplate: "<%= value %>",\n
    \n
        // Function - Will fire on animation progression.\n
        onAnimationProgress: function(){},\n
    \n
        // Function - Will fire on animation completion.\n
        onAnimationComplete: function(){}\n
      };\n
    })\n
\n
    .declareMethod(\'render\', function (options) {\n
      var gadget = this;\n
      gadget.property_dict.options = options;\n
      \n
    })\n
    .declareMethod(\'addData\', function (valuesArray, label) {\n
      return gadget.property_dict.chart.addData(valuesArray, label);\n
    })\n
    .declareMethod(\'removeData\', function () {\n
      return gadget.property_dict.chart.removeData();\n
    })\n
    .declareMethod(\'addDataIndex\', function (segmentData, index) {\n
      return gadget.property_dict.chart.addData(segmentData, index);\n
    })\n
    .declareMethod(\'removeDataIndex\', function (index) {\n
      return gadget.property_dict.chart.removeData(index);\n
    })\n
    .declareMethod(\'update\', function () {\n
      return gadget.property_dict.chart.update();\n
    })\n
    .declareMethod(\'clear\', function () {\n
      return gadget.property_dict.chart.clear();\n
    })\n
    .declareMethod(\'stop\', function () {\n
      return gadget.property_dict.chart.stop();\n
    })\n
    .declareMethod(\'redraw\', function () {\n
      return gadget.property_dict.chart.render();\n
    })\n
    .declareMethod(\'resize\', function () {\n
      return gadget.property_dict.chart.resize();\n
    })\n
    .declareMethod(\'toBase64Image\', function () {\n
      return gadget.property_dict.chart.toBase64Image();\n
    })\n
    .declareMethod(\'destroy\', function () {\n
      return gadget.property_dict.chart.destroy();\n
    })\n
    .declareMethod(\'generateLegend\', function () {\n
      return gadget.property_dict.chart.generateLegend();\n
    })\n
\n
    .declareService(function () {\n
      var gadget = this;\n
      return new RSVP.Queue()\n
        .push(function () {\n
          var options = gadget.property_dict.options,\n
            promise_list = [];\n
          switch (options.type) {\n
            case "line": promise_list.push(\n
                new Chart(gadget.property_dict.ctx).Line(options.data, options.config)\n
              );\n
              break;\n
            case "bar": promise_list.push(\n
                new Chart(gadget.property_dict.ctx).Bar(options.data, options.config)\n
              );\n
              break;\n
            case "pie": promise_list.push(\n
                new Chart(gadget.property_dict.ctx).Pie(options.data, options.config)\n
              );\n
              break;\n
            case "doughnut": promise_list.push(\n
                new Chart(gadget.property_dict.ctx).Doughnut(options.data, options.config)\n
              );\n
              break;\n
            default: return [];\n
          }\n
          return new RSVP.Queue()\n
            .push(function () {\n
              return RSVP.all(promise_list);\n
            })\n
            .push(function (result_list) {\n
              gadget.property_dict.chart = result_list[0];\n
              gadget.property_dict.element.querySelector(\'.legend\')\n
                .innerHTML += gadget.property_dict.chart.generateLegend();\n
              return gadget.property_dict.chart.render();\n
            });\n
        })\n
        .push(function () {\n
          var promise_list = [];\n
          promise_list.push(window.addEventListener("load", function () {\n
            console.log(gadget.property_dict.chart.generateLegend());\n
            return gadget.property_dict.chart.render();\n
          }));\n
          return RSVP.all(promise_list);\n
        });\n
    });\n
\n
\n
}(window, rJS, RSVP, Chart));\n


]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Monitoring Chart Gadget JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>publish</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1453900520.73</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
            <item>
                <key> <string>validation_state</string> </key>
                <value> <string>published</string> </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>edit</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>948.49237.23462.46267</string> </value>
            </item>
            <item>
                <key> <string>state</string> </key>
                <value> <string>current</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1453915624.21</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>detect_converted_file</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>external_processing_state</string> </key>
                <value> <string>converted</string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>0.0.0.0</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1453899194.11</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
</ZopeData>
