<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>categories</string> </key>
            <value>
              <tuple>
                <string>classification/collaborative/public</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>gadget_monitoring_document_edit.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>gadget_monitoring_document_edit_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*global document, window, rJS, $ */\n
/*jslint nomen: true, indent: 2, maxerr: 3*/\n
(function (window, document, rJS, $) {\n
  "use strict";\n
\n
  var gadget_klass = rJS(window),\n
    templater = gadget_klass.__template_element;\n
\n
  function getHtmlFromJson(parameter_list) {\n
    var i,\n
      html_content = \'\';\n
\n
    for (i = 0; i < parameter_list.length; i += 1) {\n
      html_content += \'<span class="label-text">\' + parameter_list[i].title + \':</span>\\n\';\n
      if (parameter_list[i].key) {\n
        html_content += \'<input type="text" name="\' + parameter_list[i].key +\n
          \'" placeholder="\' + parameter_list[i].title + \'" value="\' +\n
          parameter_list[i].value +\'" data-mini="true">\\n\';\n
      } else {\n
        html_content += \'<input type="text" name="\' + parameter_list[i].key +\n
          \'" placeholder="\' + parameter_list[i].title + \'" value="\'+\n
          parameter_list[i].value +\'" data-mini="true" disabled="disabled">\\n\';\n
      }\n
    }\n
    return html_content;\n
  }\n
\n
  function getFormDataList(formElement, parameter_list) {\n
    var i,\n
      formData_list = [];\n
    for (i = 0; i < parameter_list.length; i += 1) {\n
      formData_list.push(parameter_list[i]);\n
      if (parameter_list[i].key) {\n
        // Editable fields\n
        if (formElement.querySelector(\'input[name="\' + parameter_list[i].key + \'"]\').value !== undefined) {\n
          formData_list[i].value = formElement.querySelector(\'input[name="\' + parameter_list[i].key + \'"]\').value;\n
        }\n
      }\n
    }\n
    return formData_list;\n
  }\n
\n
  function saveDocument(gadget, jio_document) {\n
    // Authenticate before save\n
    // Normally password should already exists otherwise will redirect to login box and edited data will be lost!!!\n
    return gadget.props.login_gadget.loginRedirect(\n
        gadget.props.options.url,\n
        gadget.props.options.page_options,\n
        gadget.props.options.title,\n
        gadget.props.options.root_title\n
      )\n
      .push(function (cred) {\n
        var url = gadget.props.options.url;\n
        if (gadget.props.options.path) {\n
          url += (url.endsWith(\'/\') ? \'\':\'/\') + gadget.props.options.path;\n
        }\n
        gadget.props.jio_gadget.createJio({\n
          type: "query",\n
          sub_storage: {\n
            type: "drivetojiomapping",\n
            sub_storage: {\n
              type: "dav",\n
              url: url,\n
              basic_login: cred.hash\n
            }\n
          }\n
        });\n
        return gadget.props.jio_gadget.put(gadget.props.options.key, jio_document);\n
      })\n
      .push(function (result) {\n
        return {status: \'OK\'};\n
      }, function (error) {\n
        console.log(error);\n
        return {status: \'ERROR\', code: error.target.status};\n
      });\n
    \n
  }\n
\n
  gadget_klass\n
    .ready(function (g) {\n
      g.props = {};\n
      \n
      return g.getElement()\n
        .push(function (element) {\n
          g.props.element = element;\n
          g.props.deferred = RSVP.defer();\n
        });\n
    })\n
    .ready(function (gadget) {\n
      return gadget.getDeclaredGadget("jio_gadget")\n
        .push(function (jio_gadget) {\n
          gadget.props.jio_gadget = jio_gadget;\n
        });\n
    })\n
    .ready(function (gadget) {\n
      return gadget.getDeclaredGadget("login_gadget")\n
        .push(function (login_gadget) {\n
          gadget.props.login_gadget = login_gadget;\n
        });\n
    })\n
    .declareMethod("render", function (options) {\n
      var gadget = this;\n
      return new RSVP.Queue()\n
      .push(function () {\n
          return gadget.props.deferred.resolve();\n
        });\n
    })\n
    .declareMethod("popupEdit", function (options, updateMethod) {\n
      var gadget = this,\n
        title = \'Edit \' + (options.title || \'Monitoring Parameters\'),\n
        html_form = \'\';\n
\n
      gadget.props.options = options;\n
      html_form = getHtmlFromJson(options.parameters || []);\n
\n
      gadget.props.element.querySelector(\'.form-controlgroup\')\n
        .innerHTML = html_form;\n
      gadget.props.element.querySelector(\'.ui-promise-title h2\')\n
        .innerHTML = title;\n
\n
      return new RSVP.Queue()\n
        .push(function () {\n
          return $.magnificPopup.open({\n
            items: {\n
                src: \'.white-popup\',\n
                type: \'inline\'\n
            },\n
            closeBtnInside: true,\n
            callbacks: {\n
              open: function() {\n
                return new RSVP.Queue()\n
                  .push(function () {\n
                    return $(\'.white-popup form\').trigger("create");\n
                  })\n
                  .push(function () {\n
                    var promise_list = [];\n
\n
                    promise_list.push(loopEventListener(\n
                      document.querySelector(\'.mfp-content form .cancel\'),\n
                      \'click\',\n
                      false,\n
                      function (evt) {\n
                        return $.magnificPopup.close();\n
                      }\n
                    ));\n
                    promise_list.push(loopEventListener(\n
                      document.querySelector(\'.mfp-content form .save\'),\n
                      \'click\',\n
                      false,\n
                      function (evt) {\n
                        var data = getFormDataList(document.querySelector(\'.mfp-content form\'), options.parameters);\n
                        return new RSVP.Queue()\n
                          .push(function () {\n
                            $(document.querySelector(\'.mfp-content spinner\')).toggleClass(\'ui-content-hidden\');\n
                            return RSVP.all([saveDocument(gadget, data)]);\n
                          })\n
                          .push(function (result) {\n
                            if (result[0].status === \'ERROR\') {\n
                              document.querySelector(\'.mfp-content .ui-text-error\')\n
                                .innerHTML = \'ERROR \' + result[0].code + \': Failed to save your document!\';\n
                            } else {\n
                              $.magnificPopup.close();\n
                              return updateMethod(data);}\n
                          })\n
                          .push(function () {\n
                            $(document.querySelector(\'.mfp-content spinner\')).toggleClass(\'ui-content-hidden\');\n
                          });\n
                      }\n
                    ));\n
                    return RSVP.all(promise_list);\n
                  });\n
              },\n
              close: function() {\n
                // Will fire when popup is closed\n
                $(\'.white-popup\').remove();\n
              }\n
            }\n
          });\n
        })\n
        .push(function () {\n
          return gadget.props.deferred.resolve();\n
        });\n
    })\n
\n
\n
    .declareService(function () {\n
      var gadget = this;\n
\n
      return new RSVP.Queue()\n
        .push(function () {\n
          return gadget.props.deferred.promise;\n
        })\n
        .push(function () {\n
\n
        });\n
    });\n
\n
}(window, document, rJS, $));\n
\n


]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Monitoring Document Edit Widget JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>publish</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1457541225.98</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
            <item>
                <key> <string>validation_state</string> </key>
                <value> <string>published</string> </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>edit</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>949.49438.50290.39714</string> </value>
            </item>
            <item>
                <key> <string>state</string> </key>
                <value> <string>current</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1458061223.97</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>detect_converted_file</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>external_processing_state</string> </key>
                <value> <string>converted</string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>0.0.0.0</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1457541085.23</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
</ZopeData>
