<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

portal = context.getPortalObject()\n
\n
if not service_title:\n
  raise ValueError("Service Title is mandatory!")\n
\n
keep_item_dict = {}\n
\n
if software_type is not None:\n
  keep_item_dict[\'software_type\'] = software_type\n
\n
if software_type is not None:\n
  keep_item_dict[\'parameter_hash\'] = parameter_hash\n
\n
if instance_xml == "ERROR":\n
  keep_item_dict.update({\'portal_status_message\':context.Base_translateString(\n
                          "Your parameters are contains errors, please update it.")})\n
  return context.Base_redirect(dialog_id,\n
                        keep_items=keep_item_dict)\n
\n
hosting_subscription = portal.portal_catalog.getResultValue(\n
  portal_type=\'Hosting Subscription\',\n
  validation_state="validated",\n
  select_expression=\'title\',\n
  title={\'query\': service_title, \'key\': \'ExactMatch\'}\n
  )\n
\n
if hosting_subscription is not None:\n
  return context.Base_redirect(dialog_id,\n
                        keep_items={\'portal_status_message\':context.Base_translateString(\n
                          "You already have service named ${service_title}. Please choose different unique name.", mapping={\'service_title\': service_title})})\n
\n
\n
url = context.getUrlString()\n
\n
person = portal.ERP5Site_getAuthenticatedMemberPersonValue()\n
\n
if person is None:\n
  raise ValueError("You cannot request without been logged in as a user.")\n
  \n
if software_type in [None, ""]:\n
  software_type = "RootSoftwareInstance"\n
\n
request_kw = {}\n
request_kw.update(\n
  software_release=url,\n
  software_title=service_title,\n
  software_type=software_type,\n
  instance_xml=instance_xml,\n
  sla_xml="",\n
  shared=False,\n
  state="started",\n
)\n
\n
sla_xml = ""\n
\n
for sla_category_id, sla_category in [\n
  (\'cpu_core\', cpu_core),\n
  (\'cpu_frequency\', cpu_frequency),\n
  (\'cpu_type\', cpu_type),\n
  (\'local_area_network_type\', local_area_network_type),\n
  (\'memory_size\', memory_size),\n
  (\'memory_type\', memory_type),\n
  (\'region\', region),\n
  (\'storage_capacity\', storage_capacity),\n
  (\'storage_interface\', storage_interface),\n
  (\'storage_redundancy\', storage_redundancy),\n
  (\'computer_guid\', computer_guid),\n
  (\'group\', group),\n
]:\n
  if sla_category:\n
    sla_xml += \'<parameter id="%s">%s</parameter>\' % (sla_category_id, sla_category)\n
\n
if sla_xml:\n
  request_kw[\'sla_xml\'] = """<?xml version=\'1.0\' encoding=\'utf-8\'?>\n
<instance>\n
%s\n
</instance>""" % sla_xml\n
\n
person.requestSoftwareInstance(**request_kw)\n
\n
message = context.Base_translateString("Your instance is under creation. Please wait few minutes for partitions to appear.")\n
return context.REQUEST.get(\'request_hosting_subscription\').Base_redirect(keep_items={\'portal_status_message\': message})\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>dialog_id, service_title, instance_xml, parameter_hash=None, software_type=None, computer_guid=\'\', cpu_core=\'\', cpu_frequency=\'\', cpu_type=\'\', local_area_network_type=\'\', memory_size=\'\', memory_type=\'\', storage_capacity=\'\', storage_interface=\'\', storage_redundancy=\'\', group=\'\', region=\'\', **kw</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>SoftwareRelease_requestFromDialog</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
