#!{{ dash }}

# DO NOT RUN THIS SCRIPT ON PRODUCTION INSTANCE
# OR MYSQL DATA WILL BE ERASED.

# This script will import the dump of the mysql database to the real
# database. It is launched by the clone (importer) instance of webrunner
# in the end of the import script.

# Depending on the output, it will create a file containing
# the status of the restoration (success or failure)

set -e

mariabackup_executable='{{ bin_directory }}/mariabackup'
mbstream_executable='{{ bin_directory }}/mbstream'
restic_executable='{{ bin_directory }}/restic'
mariadb_data_directory='{{ mariadb_data_directory }}'
mariadb_backup_directory='{{ mariadb_backup_directory }}'
mariadb_restore_directory="{{ tmp_directory }}/$$"
pid_file='{{ pid_file }}'

# Make sure mariadb is not already running
if [ -e "$pid_file" ]; then
  if ! pid=$(cat "$pid_file"); then
    echo "Cannot read Mariadb pidfile, assuming running. Aborting."
    exit 1
  fi
  if kill -0 "$pid"; then
    echo "Mariadb is already running with pid $pid. Aborting."
    exit 1
  fi
fi

echo "Deleting existing database..."
find "$mariadb_data_directory" -mindepth 1 -delete

echo "Extracting from backup..."
rm -rf "$mariadb_restore_directory"
mkdir -p "$mariadb_restore_directory"
"$restic_executable" dump latest mariadb.xb --insecure-no-password -r "$mariadb_backup_directory" | "$mbstream_executable" -C "$mariadb_restore_directory" -x

echo "Restoring database..."
"$mariabackup_executable" --prepare --target-dir="$mariadb_restore_directory"
"$mariabackup_executable" --move-back --target-dir="$mariadb_restore_directory"
rm -rf "$mariadb_restore_directory"

echo 'Backup restoration successfully completed.'
