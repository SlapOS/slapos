#!{{ dash }}
set -eu

if [ $# -ne 1 ]; then
  echo "Restaure a mariadb instance from available backup data."
  echo "  $0 <BACKUP FILE>"
  exit 1
fi

dump=$1
mysql_executable='{{ mysql_executable }}'
mariadb_data_directory='{{ data_directory }}'
pid_file='{{ pid_file }}'
binlog_path='{{ binlog_path }}'
server_executable='{{ server_executable }}'
server_socket='{{ socket }}'

# Make sure mariadb is not already running
if [ -e "$pid_file" ]; then
  if ! pid=$(cat "$pid_file"); then
    echo "Cannot read Mariadb pidfile, assuming running. Aborting."
    exit 1
  fi
  if kill -0 "$pid"; then
    echo "Mariadb is already running with pid $pid. Aborting."
    exit 1
  fi
fi

echo "EXISTING DATABASE CONTENT WILL BE DESTROYED"
echo "You have 5 seconds to interrupt this script..."
if sleep 5; then
  echo "Expired, proceeding"
else
  echo "Interrupted, aborting"
  exit 1
fi

echo "Emptying data directory..."
find "$mariadb_data_directory" -mindepth 1 -delete

# $binlog_path can be empty if incremental_backup_retention_days <= -1
if [ -n "$binlog_path" ]; then
  new_binlog_directory="$(dirname "$binlog_path")"
  binlog_index_file="$new_binlog_directory/binlog.index"
  if [ -e "$binlog_index_file" ]; then
    echo "Adapting binlog database to new paths..."
    old_binlog_directory="$(dirname $(head -n 1 $binlog_index_file))"
    sed -e "s|$old_binlog_directory|$new_binlog_directory|g" $binlog_index_file > $binlog_index_file
  fi
fi

echo -n "Starting mariadb for backup restoration"
"$server_executable" --innodb-flush-method=nosync --skip-innodb-doublewrite --innodb-flush-log-at-trx-commit=0 --sync-frm=0 --slow-query-log=0 --skip-log-bin &
mysqld_pid=$!
trap "kill $mysqld_pid; wait; exit 1" EXIT TERM INT
while true; do
  if [ ! -e "/proc/$mysqld_pid" ]; then
    trap EXIT TERM INT
    echo "Service exited, check logs"
    wait
    exit 1
  fi
  if [ -e "$server_socket" ]; then
    echo "started."
    break
  fi
  echo -n .
  sleep 0.5
done

echo "Importing $dump ..."
zcat "$dump" | "$mysql_executable" || {
  RESTORE_EXIT_CODE=$?
  echo 'Backup restoration failed.'
  exit $RESTORE_EXIT_CODE
}

echo "Stopping mariadb..."
trap EXIT TERM INT
kill $mysqld_pid
wait

echo "Done. Start mariadb normally."
