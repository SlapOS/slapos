#!{{ python_executable }}
from datetime import datetime, timedelta
import glob
import os
import shutil
import subprocess
import sys

max_incremental_count = int(os.environ.get('max_incremental_count', '6'))
mariabackup_executable = '{{ bin_directory }}/mariabackup'
mbstream_executable = '{{ bin_directory }}/mbstream'
zstd_executable = '{{ bin_directory }}/zstd'
mariadb_backup_directory = '{{ mariadb_backup_directory }}'
full_backup_retention_days = int('{{ full_backup_retention_days }}')
now = datetime.utcnow()
timestamp = now.strftime('%Y%m%d%H%M%S')

print('Checking backup...')
try:
  last_meta = sorted(glob.glob(os.path.join(mariadb_backup_directory, '*.meta')))[-1]
except IndexError:
  last_meta = None
try:
  last_full_meta = sorted(glob.glob(os.path.join(mariadb_backup_directory, '*.full.meta')))[-1]
except IndexError:
  last_full_meta = None
if not last_meta:
  incremental_count = 0
else:
  incremental_count = len([e for e in glob.glob(os.path.join(mariadb_backup_directory, '*.inc.meta')) if e > last_full_meta])

if last_full_meta and os.path.isdir(last_full_meta) and incremental_count < max_incremental_count:
  print('Doing incremental backup...')
  extra_mariabackup_args = ['--incremental-basedir=%s' % last_meta]
  filename = '%s.inc.xb.zstd' % timestamp
  metadir = '%s.inc.meta' % timestamp
else:
  print('Doing full backup...')
  extra_mariabackup_args = []
  filename = '%s.full.xb.zstd' % timestamp
  metadir = '%s.full.meta' % timestamp
process_mariabackup = subprocess.Popen([
  mariabackup_executable, '--backup', '--stream=xbstream',
  '--extra-lsndir=%s/%s' % (mariadb_backup_directory, metadir),
] + extra_mariabackup_args, stdout=subprocess.PIPE)
process_zstd = subprocess.Popen([
  zstd_executable, '-o', os.path.join(mariadb_backup_directory, filename),
], stdin=process_mariabackup.stdout, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
process_mariabackup.stdout.close()
stdout, stderr = process_zstd.communicate()
print(stdout.decode('utf-8'))
if stderr:
  print(stderr.decode('utf-8'))
if process_mariabackup.wait() != 0:
  print('mariabackup: exit %s' % process_mariabackup.returncode)
  sys.exit(int(process_mariabackup.returncode))
if process_zstd.returncode != 0:
  print('zstd: exit %s' % process_zstd.returncode)
  sys.exit(int(process_zstd.returncode))

if full_backup_retention_days > 0:
  # We keep until the latest full backup before the target date.
  target_date = now - timedelta(days=full_backup_retention_days)
  backup_path_list = sorted(glob.glob(os.path.join(mariadb_backup_directory, '*.xb.zstd')))
  latest_full_index = 0
  for i, path in enumerate(backup_path_list):
    filename = os.path.basename(path)
    if filename.endswith('.full.xb.zstd'):
      latest_full_index = i
    if datetime.strptime(filename[:13], '%Y%m%d%H%M%S') > target_date:
      break
  for path in backup_path_list[0:latest_full_index]:
    print('Deleting old snapshots %s...' % path)
    os.remove(path)
    shutil.rmtree(path[:-8] + '.meta')
  if latest_full_index > 0:
    # remove outdated mysqldump results that are older than removed mariabackup files.
    for path in glob.glob(os.path.join(mariadb_backup_directory, '??????????????.sql.gz')):
      os.remove(path)

with open(os.path.join(mariadb_backup_directory, 'index.txt'), 'w') as f:
  f.write(
    '\n'.join(sorted(
      os.path.basename(p) for p in glob.glob(os.path.join(mariadb_backup_directory, '*.xb.zstd')))))

print('Done.')
