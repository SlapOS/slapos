#!{{ python_executable }}
import os
import subprocess
from urllib.parse import urlparse

restic_binary = '{{ restic_binary }}'
backup_dir = '{{ backup_dir }}'
url = '{{ url }}'
ssh_client = '{{ ssh_client }}'
remove_backup_older_than = '{{ remove_backup_older_than }}'
slave_type = '{{ slave_type }}'

parsed_url = urlparse(url)
ssh_args = [
  ssh_client,
  '-o', 'ConnectTimeout 300',
  '-o', 'ServerAliveCountMax 10',
  '-o', 'ServerAliveInterval 30',
  '-p', str(parsed_url.port),
  '%s@%s' % (parsed_url.username, parsed_url.hostname)
]
restic_repository = backup_dir.rstrip('/') + '.restic'
ssh_client_socket = os.path.join(parsed_url.path.rstrip('/'), 'ssh.sock')
rest_server_socket = os.path.join(restic_repository, 'rest-server.sock')
ssh_tunnel_args = ['-R', '%s:%s' % (ssh_client_socket, rest_server_socket)]
restic_args = [restic_binary, '--insecure-no-password', '-r', restic_repository]

if slave_type == 'push':
  subprocess.check_output(ssh_args + ['clear'])
  subprocess.check_output(ssh_args + ssh_tunnel_args + ['restore'])
elif slave_type == 'pull':
  # import existing rdiff-backup if exists.
  if os.path.isdir(os.path.join(backup_dir, 'rdiff-backup-data')):
    os.chdir(backup_dir)
    subprocess.check_output(restic_args + [
      '--exclude', 'rdiff-backup-data', 'backup', '.'
    ])

  subprocess.check_output(ssh_args + ['clear'])
  subprocess.check_output(ssh_args + ssh_tunnel_args + ['backup'])

  # BBB translate rdiff-backup's --remove-older-than parameter to restic's forget policy.
  remove_backup_older_than = remove_backup_older_than.lower()
  if remove_backup_older_than.endswith('b'):
    restic_keep_args = ['--keep-last ', remove_backup_older_than[:-1]]
  else:
    if remove_backup_older_than.endswith('w'):
      remove_backup_older_than = '%sd' % (int(remove_backup_older_than[:-1]) * 7)
    restic_keep_args = ['--keep-within', remove_backup_older_than]
  subprocess.check_output(restic_args + restic_keep_args + [
    'forget', '--prune',
  ])
else:
  raise NotImplementedError('Unexpected type %s' % slave_type)
